{"version":3,"sources":["serviceWorker.js","actions/games.js","reducers/games.js","actions/planning.js","reducers/planning.js","reducers/index.js","components/Store.js","components/Home/Header.js","components/Home/MenuEntries.js","components/Home/Menu.js","components/Home/Home.js","components/YTPlayer/Player.js","components/Others/CenteredGrid.js","components/Others/CustomSnackbar.js","components/GamesView/CardEntry.js","components/GamesView/GamesGallery.js","components/Planning/Planning.js","components/Home/styles.js","components/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","fetchingStarted","type","fetchingFinished","games","initialState","error","loading","planning","rootReducer","combineReducers","state","action","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","Header","props","open","setOpen","classes","Fragment","CssBaseline","AppBar","position","className","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","edge","menuButton","hide","ListItemLink","icon","primary","to","renderLink","React","useMemo","forwardRef","linkProps","ref","innerRef","Tooltip","title","ListItem","button","component","ListItemIcon","ListItemText","ENTRIES","List","Menu","container","drawer","Drawer","variant","drawerOpen","drawerClose","paper","toolbar","Divider","Home","useState","Player","id","useParams","url","useLocation","pathname","includes","controls","playing","width","height","CenteredBox","children","Grid","spacing","direction","alignItems","justify","style","minHeight","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","main","amber","fontSize","iconVariant","opacity","marginRight","message","display","CustomSnackbar","onClose","other","Icon","SnackbarContent","aria-describedby","key","CustomizedSnackbar","handleClose","event","reason","Snackbar","autoHideDuration","CardEntry","params","game","minWidth","media","Card","CardMedia","image","imagePath","CardActions","disableSpacing","Link","url_type","playlistId","videoId","href","sortByNameASC","a","b","sortByNameDESC","sortByReleaseDateASC","aa","bb","sortByReleaseDateDESC","GamesGallery","handleSortChange","bind","currentSorters","sortersState","sortersKeys","sorters","this","get_games","field","newValue","updatedSortersState","updatedCurrentSorters","concat","filter","s","map","criteria","setState","data","CenteredGrid","CircularProgress","Fab","size","sorted","sort","i","length","comparatorResult","Box","flexWrap","flexDirection","justifyContent","ButtonGroup","Button","Typography","Component","mapDispatchToProps","dispatch","getState","gamesData","parts","releaseDate","split","base_url","Object","assign","process","coversRootPath","coverFile","defaultCoverFile","Date","connect","Viewer","get_scheduled_games","date_options","weekday","year","month","day","Timeline","align","scheduledGame","TimelineItem","TimelineOppositeContent","toLocaleDateString","undefined","TimelineSeparator","TimelineDot","status","TimelineConnector","TimelineContent","Paper","elevation","root","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","flexShrink","whiteSpace","overflowX","breakpoints","up","padding","mixins","content","flexGrow","overflow","Root","store","basicStyle","basename","path","render","Container","Planning","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.916a370f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import gamesData from \"../data/games.json\";\r\n\r\nexport const FETCHING_REQUESTED = \"GAMES_REQUESTED\";\r\nexport const FETCHING_OK = \"GAMES_FETCHING_OK\";\r\nexport const FETCHING_FAILED = \"GAMES_FETCHING_FAILED\";\r\n\r\n// param à la place du () du genre ({title, password})\r\nexport const get_games = () => {\r\n    return (dispatch, getState) => {\r\n\r\n        // pour plus tard\r\n        // const { games } = getState();\r\n\r\n        dispatch(fetchingStarted());\r\n\r\n        // Build the object for component\r\n        let games = gamesData\r\n            .games\r\n            .map(game => {\r\n                const parts = game.releaseDate.split(\"/\");\r\n                const id = game.playlistId ?? game.videoId;\r\n                const base_url = (\r\n                    (game.playlistId) \r\n                        ? \"https://www.youtube.com/playlist?list=\" \r\n                        :  \"https://www.youtube.com/watch?v=\"\r\n                ) + id ;\r\n                const url_type = (game.playlistId) ? \"PLAYLIST\" : \"VIDEO\";\r\n                return Object.assign({}, game, {\r\n                    \"imagePath\": process.env.PUBLIC_URL + gamesData.coversRootPath + id + \"/\" + (game.coverFile ?? gamesData.defaultCoverFile),\r\n                    \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]),\r\n                    \"url\": base_url,\r\n                    \"url_type\": url_type\r\n                });\r\n            });\r\n\r\n        dispatch(fetchingFinished(games));\r\n\r\n    };\r\n};\r\n\r\nconst fetchingStarted = () => ({\r\n    type: FETCHING_REQUESTED\r\n});\r\n\r\nconst fetchingFinished = (games) => ({\r\n    type: FETCHING_OK,\r\n    games\r\n});\r\n\r\nconst fetchingFailed = (error) => ({\r\n    type: FETCHING_FAILED,\r\n    error\r\n});","import {\r\n    FETCHING_FAILED,\r\n    FETCHING_OK,\r\n    FETCHING_REQUESTED\r\n} from \"../actions/games\"\r\n\r\nconst initialState = {\r\n    games: [],\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nexport default function games(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCHING_REQUESTED:\r\n            return {\r\n              ...state,\r\n              loading: true\r\n            };\r\n        case FETCHING_OK:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                games: action.games,\r\n                error: null\r\n            };\r\n        case FETCHING_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                games: [],\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import gamesData from \"../data/scheduledGames.json\";\r\n\r\nexport const FETCHING_REQUESTED = \"PLANNING_REQUESTED\";\r\nexport const FETCHING_OK = \"PLANNING_FETCHING_OK\";\r\n\r\nexport const get_scheduled_games = () => {\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch(fetchingStarted());\r\n        // prepare data\r\n        const planning = gamesData.map(scheduledGame => {\r\n            let releaseDate = scheduledGame[\"releaseDate\"];\r\n            const parts = releaseDate.split(\"/\");\r\n            return Object.assign({}, scheduledGame, { \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]) })\r\n        });\r\n        dispatch(fetchingFinished(planning));\r\n    };\r\n};\r\n\r\nconst fetchingStarted = () => ({\r\n    type: FETCHING_REQUESTED\r\n});\r\n\r\nconst fetchingFinished = (planning) => ({\r\n    type: FETCHING_OK,\r\n    planning\r\n});","import {\r\n    FETCHING_OK,\r\n    FETCHING_REQUESTED\r\n} from \"../actions/planning\"\r\n\r\nconst initialState = {\r\n    planning: [],\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nexport default function planning(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCHING_REQUESTED:\r\n            return {\r\n              ...state,\r\n              loading: true\r\n            };\r\n        case FETCHING_OK:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                planning: action.planning,\r\n                error: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\"\r\n\r\nimport games from \"./games\";\r\nimport planning from \"./planning\"\r\n\r\nconst rootReducer = combineReducers({\r\n    games,\r\n    planning\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer  from '../reducers/index'\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nexport default createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n);\r\n/* eslint-enable */","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {AppBar, CssBaseline, IconButton, Toolbar} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport default function Header(props) {\r\n\r\n    const {open, setOpen, classes} = props;\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n// icons\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nfunction ListItemLink(props) {\r\n    const { icon, primary, to } = props;\r\n\r\n    const renderLink = React.useMemo(\r\n        () =>\r\n            React.forwardRef((linkProps, ref) => (\r\n                // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\r\n                // See https://github.com/ReactTraining/react-router/issues/6056\r\n                <Link to={to} {...linkProps} innerRef={ref} />\r\n            )),\r\n        [to],\r\n    );\r\n\r\n    return (\r\n        <Tooltip title={primary} aria-label={primary}>\r\n            <ListItem button component={renderLink}>\r\n                <ListItemIcon>{icon}</ListItemIcon>\r\n                <ListItemText primary={primary} />\r\n            </ListItem>\r\n        </Tooltip>\r\n    )\r\n\r\n}\r\n\r\nexport const ENTRIES = (\r\n    <List>\r\n        <ListItemLink\r\n            icon={<SportsEsportsIcon />}\r\n            primary={\"Jeux\"}\r\n            to={\"/games\"}\r\n        />\r\n        <ListItemLink\r\n            icon={<ScheduleIcon />}\r\n            primary={\"Planning\"}\r\n            to={\"/planning\"}\r\n        />\r\n    </List>\r\n);","\r\n// the menues entries\r\nimport {ENTRIES} from \"./MenuEntries\";\r\nimport {Divider, Drawer, IconButton} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport React from \"react\";\r\n\r\nexport default function Menu(props) {\r\n\r\n    const {container, setOpen, open, classes} = props;\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <nav aria-label=\"menus folders\" className={classes.drawer}>\r\n            <Drawer\r\n                container={container}\r\n                variant={\"permanent\"}\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {ENTRIES}\r\n            </Drawer>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport Header from \"./Header\"\r\nimport Menu from \"./Menu\";\r\n\r\nexport default function Home(props) {\r\n\r\n    // Later in Redux way if simple\r\n    const {classes} = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header open={open} setOpen={setOpen} classes={classes}/>\r\n            <Menu open={open} setOpen={setOpen} classes={classes}/>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\nexport default function Player(props) {\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    const YOUTUBE_BASE_PLAYLIST_LINK = \"https://www.youtube.com/playlist?list=\";\r\n    const YOUTUBE_BASE_VIDEO_LINK = \"https://www.youtube.com/watch?v=\";\r\n    const type = (location.pathname.includes(\"/playlist/\")) ? \"PLAYLIST\" : \"VIDEO\";\r\n    const url = (type === \"PLAYLIST\" ? YOUTUBE_BASE_PLAYLIST_LINK : YOUTUBE_BASE_VIDEO_LINK) + id;\r\n\r\n    return (\r\n        <div className='player-wrapper'>\r\n            <ReactPlayer\r\n                controls={true}\r\n                url={url}\r\n                playing={true}\r\n                width='100%'\r\n                height='80vh'\r\n                className='react-player'\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction CenteredBox(props) {\r\n    const {children} = props;\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{minHeight: '80vh'}}\r\n        >\r\n            {children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nCenteredBox.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default CenteredBox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction CustomSnackbar(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nCustomSnackbar.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nfunction CustomizedSnackbar(props) {\r\n    const [open, setOpen] = React.useState(true);\r\n    const {variant, message} = props;\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            open={open}\r\n            autoHideDuration={5000}\r\n            onClose={handleClose}\r\n        >\r\n            <CustomSnackbar\r\n                onClose={handleClose}\r\n                variant={variant}\r\n                message={message}\r\n            />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nCustomizedSnackbar.propTypes = {\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CustomizedSnackbar;","import React from \"react\";\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n// React Material UI needs that information to render the picture\r\n// source : https://material-ui.com/api/card-media/\r\nconst useStyles = (params) => makeStyles({\r\n    media: {\r\n        height: params.height,\r\n        minWidth: params.width,\r\n    },\r\n});\r\n\r\nfunction CardEntry(props) {\r\n\r\n    const {game} = props;\r\n\r\n    // Use the medium size\r\n    const classes = useStyles({height: \"150px\", minWidth: \"150px\"})();\r\n\r\n    return (\r\n        <Card>\r\n            <Tooltip title={game.title} aria-label={game.title}>\r\n                <CardMedia\r\n                    image={game.imagePath}\r\n                    className={classes.media}\r\n                />\r\n            </Tooltip>\r\n\r\n            <CardActions disableSpacing>\r\n                <Tooltip title={\"Regarder \" + game.title} aria-label=\"Regarder\">\r\n                    <IconButton\r\n                        aria-label=\"play\"\r\n                        component={Link}\r\n                        to={\r\n                            game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId\r\n                        }\r\n                    >\r\n                        <PlayArrowIcon/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                {/* Ugly fix because react router cannot tell if it is a external url :(  */}\r\n                <IconButton\r\n                    aria-label=\"share\"\r\n                    component={\r\n                        (props) =>\r\n                            // eslint-disable-next-line jsx-a11y/anchor-has-content\r\n                            <a\r\n                                href={props.to}\r\n                                {...props}\r\n                            />\r\n                    }\r\n                    to={game.url}\r\n                >\r\n                    <YouTubeIcon/>\r\n                </IconButton>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardEntry;","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {get_games} from \"../../actions/games\";\r\n\r\n// Style\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\n// Custom\r\n\r\nimport CenteredGrid from \"../Others/CenteredGrid\";\r\nimport SnackbarWrapper from \"../Others/CustomSnackbar\";\r\nimport CardEntry from \"./CardEntry\";\r\n\r\n// Inspired by https://stackoverflow.com/a/60068169/6149867\r\nfunction makeMultiCriteriaSort(criteria) {\r\n    return (a, b) => {\r\n        for(let i = 0; i < criteria.length; i++) {\r\n            const comparatorResult = criteria[i](a, b);\r\n            if (comparatorResult !== 0) {\r\n                return comparatorResult;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n// search criterias\r\nconst sortByNameASC = (a, b) => (a.title < b.title) ? -1 : (a.title > b.title ? 1 : 0) ;\r\nconst sortByNameDESC = (a, b) => -sortByNameASC(a, b);\r\nconst sortByReleaseDateASC = (a, b) => {\r\n    let aa = a[\"releaseDate\"];\r\n    let bb = b[\"releaseDate\"];\r\n    return aa < bb ? -1 : (aa > bb ? 1 : 0);\r\n};\r\nconst sortByReleaseDateDESC = (a, b) => -sortByReleaseDateASC(a, b);\r\n\r\n// The gallery component\r\nclass GamesGallery extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSortChange = this.handleSortChange.bind(this);\r\n        this.state = {\r\n            currentSorters: [sortByNameASC], // the current sort(s) applied\r\n            sortersState: {\r\n                \"name\": \"ASC\",\r\n                \"releaseDate\": \"ASC\"\r\n            },\r\n            sortersKeys: [\"name\", \"releaseDate\"], // useful to recreate currentSorters\r\n            // in order to prevent if / else chain in the code\r\n            sorters: {\r\n                \"name\": {\r\n                    \"ASC\": sortByNameASC,\r\n                    \"DESC\": sortByNameDESC\r\n                },\r\n                \"releaseDate\": {\r\n                    \"ASC\": sortByReleaseDateASC,\r\n                    \"DESC\": sortByReleaseDateDESC\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.get_games();\r\n    };\r\n\r\n    handleSortChange(field) {\r\n        // Invert previous state value for this field\r\n        const oldValue = this.state.sortersState[field];\r\n        const newValue = (oldValue === \"ASC\") ? \"DESC\" : \"ASC\";\r\n\r\n        // keep track of the sorters state\r\n        const updatedSortersState = {\r\n            ...this.state.sortersState,\r\n            [field]: newValue\r\n        }\r\n\r\n        // Decide the sort algorithm now\r\n        // Changed field should be the first criteria, other should be unchanged (following my simple order, from now)\r\n        let updatedCurrentSorters = [field]\r\n            .concat(\r\n                this.state.sortersKeys.filter(s => s !== field)\r\n            )\r\n            .map(criteria => {\r\n                const sortFcts = this.state.sorters[criteria];\r\n                const state = updatedSortersState[criteria];\r\n                return sortFcts[state];\r\n            });\r\n        \r\n        // update state\r\n        this.setState({\r\n            ...this.state,\r\n            sortersState: updatedSortersState,\r\n            currentSorters: updatedCurrentSorters\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {loading, error, data} = this.props;\r\n\r\n        if (loading) {\r\n            return <CenteredGrid>\r\n                <CircularProgress/>\r\n            </CenteredGrid>\r\n        }\r\n\r\n        if (error) {\r\n\r\n            return <React.Fragment>\r\n                <SnackbarWrapper\r\n                    variant={\"error\"}\r\n                    message={this.props.error}\r\n                />\r\n                <CenteredGrid>\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        size=\"medium\"\r\n                        color=\"primary\"\r\n                        aria-label=\"reload\"\r\n                        onClick={() => {\r\n                            this.props.get_games();\r\n                        }}\r\n                    >\r\n                        <AutorenewIcon/>\r\n                        Recharger\r\n                    </Fab>\r\n                </CenteredGrid>\r\n            </React.Fragment>;\r\n        }\r\n\r\n        // Apply given sort choice\r\n        let sorted = data.sort(\r\n            makeMultiCriteriaSort(this.state.currentSorters)\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexWrap=\"wrap\"\r\n                    flexDirection=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                >\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        {\r\n                            this.state.sortersKeys\r\n                                .map(criteria => \r\n                                    <Button onClick={this.handleSortChange.bind(this, criteria)}>\r\n                                        {\r\n                                            this.state.sortersState[criteria] === \"ASC\" ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />\r\n                                        }\r\n                                        <Typography>\r\n                                            { criteria === \"name\" &&\r\n                                                \"Trier par nom\" \r\n                                            }\r\n                                            { criteria === \"releaseDate\" &&\r\n                                                \"Trier par date de sortie\"\r\n                                            }\r\n                                        </Typography>\r\n                                    </Button>\r\n                                )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexWrap=\"wrap\"\r\n                    flexDirection=\"row\"\r\n                >\r\n                    {\r\n                        sorted.map(\r\n                            game => <CardEntry game={game} key={game.playlistId ?? game.videoId}/>\r\n                        )\r\n                    }\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// mapStateToProps(state, ownProps)\r\nconst mapStateToProps = state => ({\r\n    data: state.games.games,\r\n    loading: state.games.loading,\r\n    error: state.games.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    get_games\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GamesGallery);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {get_scheduled_games} from \"../../actions/planning\";\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport CenteredGrid from \"../Others/CenteredGrid\";\r\n\r\n// Timeline\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\n// Style\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Viewer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.get_scheduled_games();\r\n    };\r\n\r\n    render() {\r\n\r\n        const {loading, data} = this.props;\r\n        const date_options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\r\n\r\n        if (loading) {\r\n            return <CenteredGrid>\r\n                <CircularProgress/>\r\n            </CenteredGrid>\r\n        }\r\n\r\n        return (\r\n            //<CardsBox data={this.props.data}/>\r\n            <Timeline align=\"alternate\">\r\n                {\r\n                    data.map(scheduledGame => \r\n                        <TimelineItem>\r\n                            <TimelineOppositeContent>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                    {\r\n                                        scheduledGame[\"releaseDate\"]\r\n                                            .toLocaleDateString(undefined, date_options)\r\n                                    }\r\n                                </Typography>\r\n                            </TimelineOppositeContent>\r\n                            <TimelineSeparator>\r\n                                <TimelineDot>\r\n                                    { scheduledGame.status === \"RECORDED\" &&\r\n                                        <Tooltip title=\"Terminé\" aria-label=\"Terminé\">\r\n                                            <CheckCircleIcon />\r\n                                        </Tooltip>\r\n                                    }\r\n                                    { scheduledGame.status === \"PENDING\" &&\r\n                                        <Tooltip title=\"En cours\" aria-label=\"En cours\">\r\n                                            <HourglassEmptyIcon />\r\n                                        </Tooltip>\r\n                                    }\r\n                                </TimelineDot>\r\n                                <TimelineConnector />\r\n                            </TimelineSeparator>\r\n                            <TimelineContent>\r\n                                <Paper elevation={3} >\r\n                                    <Typography variant=\"h6\" component=\"h1\">\r\n                                        {scheduledGame[\"title\"]}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </TimelineContent>  \r\n                        </TimelineItem>\r\n                    )\r\n                }\r\n            </Timeline>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n// mapStateToProps(state, ownProps)\r\nconst mapStateToProps = state => ({\r\n    data: state.planning.planning,\r\n    loading: state.planning.loading,\r\n    error: state.planning.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    get_scheduled_games\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Viewer);","import {makeStyles} from '@material-ui/core/styles';\r\n\r\n// A style sheet\r\nconst drawerWidth = 150;\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        height: '100vh',\r\n        overflow: 'auto'\r\n    },\r\n}));","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport Home from \"./Home/Home\";\r\nimport Player from \"./YTPlayer/Player\";\r\nimport GamesGallery from \"./GamesView/GamesGallery\";\r\nimport Planning from \"./Planning/Planning\";\r\n\r\nimport {Container} from \"@material-ui/core\";\r\nimport basicStyle from \"./Home/styles\"\r\n\r\nfunction Root({ store }) {\r\n\r\n    const classes = basicStyle();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            {/* https://github.com/facebook/create-react-app/issues/1765#issuecomment-327615099 */}\r\n            <Router basename={process.env.PUBLIC_URL} >\r\n                <Route\r\n                    path=\"/\"\r\n                    render={(props) => <Home {...props} classes={classes} />}\r\n                />\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <Container>\r\n                        <Route path=\"/games\" component={GamesGallery} />\r\n                        <Route path=\"/playlist/:id\" component={Player} />\r\n                        <Route path=\"/video/:id\" component={Player} />\r\n                        <Route path=\"/planning\" component={Planning} />\r\n                    </Container>\r\n                </main>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default Root","import React from 'react';\r\nimport { render } from 'react-dom'\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport store from \"./components/Store\"\r\nimport Root from \"./components/Root\";\r\n\r\nrender(<Root store={store} />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}