{"version":3,"file":"static/js/225.268eb1bc.chunk.js","mappings":"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","sources":["components/GamesView/CardDialog.tsx","components/GamesView/CardEntry.tsx","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","components/GamesView/GamesSorters.tsx","components/GamesView/GenresSelect.tsx","components/GamesView/PlatformSelect.tsx","components/GamesView/TitleFilter.tsx","components/GamesView/GamesGalleryGrid.tsx","components/GamesView/PlatformIcons.tsx","components/Others/CenteredGrid.tsx","components/Others/CustomSnackbar.tsx","components/Others/ReloadWrapper.tsx","../node_modules/@mui/icons-material/ArrowDownward.js","../node_modules/@mui/icons-material/ArrowDropDown.js","../node_modules/@mui/icons-material/ArrowDropUp.js","../node_modules/@mui/icons-material/ArrowUpward.js"],"sourcesContent":["import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\n// For full screen Dialog \nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// For Dialog\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n// For a custom contextMenu (nice for UI)\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\n\n// For snackbars\nimport { useSnackbar } from 'notistack';\n\n// Icons for contextMenu\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport RedditIcon from '@mui/icons-material/Reddit';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport FacebookIcon from '@mui/icons-material/Facebook';\n\n// labels\nconst LABEL_WATCH_ON_YT = \"gamesLibrary.actionsButton.watchOnYt\";\nconst LABEL_WATCH_HERE = \"gamesLibrary.actionsButton.watchHere\";\nconst LABEL_COPY_LINK = \"gamesLibrary.actionsButton.copyLink\";\nconst LABEL_TWITTER = \"gamesLibrary.actionsButton.shareOnTwitter\";\nconst LABEL_FACEBOOK = \"gamesLibrary.actionsButton.shareOnFacebook\";\nconst LABEL_REDDIT = \"gamesLibrary.actionsButton.shareOnReddit\";\nconst LABEL_CLOSE_BUTTON = \"gamesLibrary.actionsButton.closeContextMenu\";\nconst LABEL_COPIED_LINK = \"gamesLibrary.snackbarsMessages.copiedLink\";\n\nfunction CardDialog(props) {\n    \n    // hooks\n    const { t } = useTranslation('common');\n    const navigate = useNavigate();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n    const { enqueueSnackbar } = useSnackbar();\n\n    // props\n    const {game, contextMenuState: [contextMenuOpen,setContextMenuOpen]} = props;\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId;\n\n    // dialog options\n    const dialog_options = [\n        // Watch here\n        {\n            \"key\": \"watchHere\",\n            \"icon\": () => <PlayArrowIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_WATCH_HERE, { \"gameName\": gameTitle}),\n            \"onClick\": () => {\n                setContextMenuOpen(false);\n                navigate(local_path);\n            }\n        },\n        // watch on Youtube\n        {\n            \"key\": \"watchOnYoutube\",\n            \"icon\": () => <YouTubeIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_WATCH_ON_YT, { \"gameName\": gameTitle}),\n            \"onClick\": () => {\n                setContextMenuOpen(false);\n                window.location.href = gameURL;\n            }\n        },\n        // Copy link\n        {\n            \"key\": \"copyLink\",\n            \"divider\": true,\n            \"icon\": () => <FileCopyIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_COPY_LINK),\n            \"onClick\": async () => {\n                if (navigator.clipboard !== undefined) {//Chrome\n                    await navigator.clipboard.writeText(gameURL);\n                } else if((window as any).clipboardData) { // Internet Explorer\n                    (window as any).clipboardData.setData(\"text/plain\", gameURL);\n                }\n                enqueueSnackbar(\n                    t(LABEL_COPIED_LINK, { \"gameName\": gameTitle }),\n                    {\n                        \"variant\": \"success\",\n                        \"autoHideDuration\": 2500\n                    }\n                )\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Twitter\n        {\n            \"key\": \"share-on-twitter\",\n            \"icon\": () => <TwitterIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_TWITTER),\n            \"onClick\": () => {\n                window.open(\"https://twitter.com/intent/tweet?url=\" + encodeURIComponent(gameURL), \"_blank\");\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Facebook\n        {\n            \"key\": \"share-on-facebook\",\n            \"icon\": () => <FacebookIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_FACEBOOK),\n            \"onClick\": () => {\n                window.open(\"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(gameURL), \"_blank\")\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Reddit\n        {\n            \"key\": \"share-on-reddit\",\n            \"icon\": () => <RedditIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_REDDIT),\n            \"onClick\": () => {\n                window.open(\"http://www.reddit.com/submit?title=\" + encodeURIComponent(gameTitle) + \"&url=\" + encodeURIComponent(gameURL) + \"&title=\",\"_blank\")\n                setContextMenuOpen(false);\n            }\n        }\n    ];\n\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            aria-labelledby=\"game-context-dialog-title\"\n            open={contextMenuOpen}\n            onClose={() => setContextMenuOpen(false)}\n        >\n            <DialogTitle id=\"game-context-dialog-title\">\n                {gameTitle}    \n            </DialogTitle>\n            <DialogContent>\n                <List>\n                    {\n                        dialog_options.map(option => \n                            <ListItem\n                                onClick={option.onClick}\n                                divider={option.divider || false}\n                                key={option.key}\n                            >\n                                <ListItemIcon>\n                                    {option.icon()}\n                                </ListItemIcon>\n                                <ListItemText primary={option.text} />\n                            </ListItem>\n                        )  \n                    }\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={() => {setContextMenuOpen(false)}}>{t(LABEL_CLOSE_BUTTON)}</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default CardDialog;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\n// To check what should happen when clicking on a game\nimport { useTheme, styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardActionArea from '@mui/material/CardActionArea';\n\nimport Tooltip from '@mui/material/Tooltip';\nimport Image from '@jy95/material-ui-image';\n// @ts-ignore\nimport CardDialog from \"./CardDialog.tsx\";\n\nconst PREFIX = 'CardEntry';\n\nconst classes = {\n    gameRoot: `${PREFIX}-gameRoot`,\n    gameCover: `${PREFIX}-gameCover`,\n    MuiCardActionArea: `${PREFIX}-MuiCardActionArea`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.gameRoot}`]: {\n        position: \"relative\",\n        height: \"100%\"\n    },\n    [`& .${classes.gameCover}`]: {\n        zIndex: 1,\n        height: \"inherit\"\n    },\n    [`& .${classes.MuiCardActionArea}`]: {\n        height: \"inherit\",\n        zIndex: 1\n    }\n}));\n\nfunction CardEntry(props) {\n\n    // hooks\n    const theme = useTheme();\n    const { t } = useTranslation('common');\n    const navigate = useNavigate();\n\n    // props\n    const {game} = props;\n\n    const is_mobile_device = useMediaQuery(theme.breakpoints.down('md'));\n\n    // state of context menu\n    const [contextMenuOpen,setContextMenuOpen] = React.useState(false);\n    \n    // labels\n    const LABEL_WATCH_ON_YT = \"gamesLibrary.actionsButton.watchOnYt\";\n    const LABEL_WATCH_HERE = \"gamesLibrary.actionsButton.watchHere\";\n\n    // consts\n    const label_for_game = (is_mobile_device) ? LABEL_WATCH_ON_YT : LABEL_WATCH_HERE;\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId;\n\n    function watchGame() {\n        if (is_mobile_device) {\n            window.location.href = gameURL;\n        } else {\n            navigate(local_path);\n        }\n    }\n\n    return (\n        <StyledCard className={classes.gameRoot}>\n\n            <Tooltip title={t(label_for_game, { \"gameName\": gameTitle})} aria-label=\"WatchGame\">\n                <CardActionArea \n                    onClick={watchGame}\n                    onContextMenu={(event) => {\n                        event.preventDefault();\n                        setContextMenuOpen(true);\n                    }}\n                    classes={{root: classes.MuiCardActionArea}}\n                >\n                    <CardMedia\n                        className={classes.gameCover}\n                        title={gameTitle}\n                    >\n                        <Image src={game.imagePath} alt={gameTitle}/>\n                    </CardMedia>\n\n                </CardActionArea>\n            </Tooltip>\n            <CardDialog game={game} contextMenuState={[contextMenuOpen,setContextMenuOpen]} />\n            \n        </StyledCard>\n    );\n}\n\nexport default CardEntry;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport Popover from '@mui/material/Popover';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n\n// For sorting criteria reorder\n// Not used as it produces a bug\n//import ButtonGroup from '@mui/material/ButtonGroup';\n//import Switch from '@mui/material/Switch';\n\n// To display ASC / DESC\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\n// To move sort\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nimport {connect} from 'react-redux';\n// @ts-ignore\nimport {sort_games, change_sorting_order} from \"../../actions/games.tsx\";\n\n\n// Sort buttons of GamesGallery\nfunction GamesSorters(props) {\n    \n    // To handle criteria enabling (or disabling)\n    const handleSortChange = (event) => {\n        const field = event.target.name;\n        props.sort_games(field);\n    }\n\n    // To handle sort criteria \n    const handleSortOrderChange = (event) => {\n        // Warning : using IconButton, event.target doesn't work as expected\n        const metadata = event.currentTarget;\n        // fetch info\n        const field = metadata.name;\n        const type_of_sort_change = metadata.getAttribute(\"aria-label\");\n        const direction = (type_of_sort_change === \"upSorter\") ? \"up\" : \"down\";\n        props.change_sorting_order(field, direction);\n    }\n\n    const { state: sorters } = props;\n    const { t } = useTranslation('common');\n\n    // For Popover\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    const open = Boolean(anchorEl);\n    const id = open ? 'sort-popover' : undefined;\n\n    // map field to labels in translation file(s)\n    const field_labels = {\n        \"name\": \"gamesLibrary.sortLabels.byName\",\n        \"releaseDate\": \"gamesLibrary.sortLabels.byReleaseDate\",\n        \"duration\": \"gamesLibrary.sortLabels.byDuration\"\n    }\n    // labels for sort buttons (with condition)\n    const sort_button_conditions = {\n        \"upSorter\": (index) => index !== 0,\n        \"downSorter\": (index) => index !== sorters.keys.length -1,\n    }\n\n    return <>\n        <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n            {t(\"gamesLibrary.sortButtonLabel\")}\n        </Button>\n        <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <FormControl component=\"fieldset\" variant=\"standard\">\n                <FormGroup>\n                    {\n                        sorters\n                            .keys\n                            .map( (criteria, index) => \n                                <div\n                                    key={\"searchCriteria_\"+criteria}\n                                >\n                                    <FormControlLabel\n                                        control={\n                                            <>\n                                                <Checkbox \n                                                    checked={sorters.state[criteria] !== \"ASC\"}\n                                                    onChange={handleSortChange}\n                                                    name={criteria}\n                                                    checkedIcon={<ArrowDropUpIcon />}\n                                                    icon={<ArrowDropDownIcon />} \n                                                />\n                                            </>\n                                        }\n                                        label={t(field_labels[criteria])}\n                                    />\n                                    {\n                                        // Object.keys as I need the following order : UP / DOWN\n                                        Object\n                                            .keys(sort_button_conditions)\n                                            .map(\n                                                sort_key => {\n                                                    const condition_check = sort_button_conditions[sort_key];\n                                                    if (!condition_check(index)) {\n                                                        return null;\n                                                    } else {\n                                                        return (\n                                                            <IconButton \n                                                                aria-label={sort_key} \n                                                                name={criteria} \n                                                                size=\"small\" \n                                                                onClick={handleSortOrderChange}\n                                                                key={criteria + \"_\"+ sort_key}\n                                                            >\n                                                                {\n                                                                    (() => {\n                                                                        switch(sort_key){\n                                                                            case \"upSorter\":\n                                                                                return <ArrowUpwardIcon fontSize=\"inherit\" />\n                                                                            case \"downSorter\":\n                                                                                return <ArrowDownwardIcon fontSize=\"inherit\" />\n                                                                            default:\n                                                                                return null;\n                                                                        }\n                                                                    })()\n                                                                } \n                                                            </IconButton> \n                                                        )\n                                                    }\n                                                }\n                                            )\n                                    }\n                                </div>\n                            )\n                    }\n                </FormGroup>\n            </FormControl>\n        </Popover>\n    </>;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    state: state.games.sorters,\n});\n\nconst mapDispatchToProps = {\n    sort_games,\n    change_sorting_order\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesSorters);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\n\nimport {\n    filter_games_by_genre, \n    filter_games_by_title\n} \n// @ts-ignore\nfrom \"../../actions/games.tsx\";\n\n// Genres filter of GamesGallery\nfunction GenresSelect(props) {\n\n    const { filters } = props;\n    const { t } = useTranslation('common');\n\n    // Generate list of values for game genre\n    const genre_options = filters\n        .genres\n        .map(genre => ({\n            label: t(\"gamesLibrary.gamesGenres.\" + genre),\n            key: genre\n        }))\n        .sort( \n            (a, b) => (a.label < b.label) ? -1 : (a.label > b.label ? 1 : 0) \n        );\n\n    return <>\n        <Autocomplete\n            multiple\n            openOnFocus\n            filterSelectedOptions \n            id=\"select-game-genre\"\n            //style={{ width: 300 }}\n            limitTags={3}\n            options={genre_options}\n            getOptionLabel={(option : any) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.genres\")} />}\n            onChange={(_event, value) => {\n                const genres = (value) ? value : [];\n                props.filterByGenre(genres);\n            }}\n            //value={filters.selected_genres}\n        />\n    </>;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    filters: state.games.filters,\n});\n\nconst mapDispatchToProps = {\n    filterByGenre: filter_games_by_genre, \n    filterByTitle: filter_games_by_title\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GenresSelect);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nimport {\n    filter_games_by_platform\n} \n// @ts-ignore\nfrom \"../../actions/games.tsx\";\n\n// icons\n// @ts-ignore\nimport iconsSVG from \"./PlatformIcons.tsx\";\n\nfunction PlatformSelect(props) {\n\n    const { filters } = props;\n    const { t } = useTranslation('common');\n\n    const options = filters\n        .platforms\n        .map(platform => ({\n            label: platform,\n            key: platform\n        }))\n\n    return <>\n        <Autocomplete\n            id=\"select-game-platform\"\n            openOnFocus\n            options={options}\n            getOptionLabel={(option: any) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.platform\")} />}\n            renderOption={(props, option, _state) => (\n                <li {...props} key={option.key}>\n                    <SvgIcon titleAccess={option.label}>\n                        <path d={iconsSVG[option.key]} />\n                    </SvgIcon>\n                    {option.label}\n                </li>\n            )}\n            onChange={(_event, value) => {\n                const platform = (value) ? value.key : \"\";\n                props.filterByPlatform(platform);\n            }}\n            //value={filters.selected_genres}\n        />\n    </>;\n}\n\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    filters: state.games.filters,\n});\n\nconst mapDispatchToProps = {\n    filterByPlatform: filter_games_by_platform, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PlatformSelect);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\nimport {\n    filter_games_by_title\n} \n// @ts-ignore\nfrom \"../../actions/games.tsx\";\n\nfunction TitleFilter(props) {\n\n    const { title, filterByTitle, games } = props;\n    const { t } = useTranslation('common');\n    // needed as this Autocomplete cannot have duplicate\n    const options = [...new Set(games.map(game => game.title))];\n\n    return <>\n        <Autocomplete\n            id=\"search-game-title\"\n            freeSolo\n            options={options}\n            value={title}\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.title\")} />}\n            onInputChange={(_event, value) => {\n                filterByTitle(value);\n            }}\n        />\n    </>;\n\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    title: state.games.filters.selected_title,\n});\n\nconst mapDispatchToProps = {\n    filterByTitle: filter_games_by_title, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TitleFilter);","import React from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {connect} from 'react-redux';\n// @ts-ignore\nimport {get_games} from \"../../actions/games.tsx\";\n\n// Style\n\nimport Grid from \"@mui/material/Grid\";\n\n// Custom\n// @ts-ignore\nimport ReloadWrapper from \"../Others/ReloadWrapper.tsx\";\n// @ts-ignore\nimport CardEntry from \"./CardEntry.tsx\";\n// @ts-ignore\nimport GamesSorters from \"./GamesSorters.tsx\";\n// @ts-ignore\nimport GenresSelect from \"./GenresSelect.tsx\";\n// @ts-ignore\nimport PlatformSelect from \"./PlatformSelect.tsx\";\n// @ts-ignore\nimport TitleFilter from \"./TitleFilter.tsx\";\n\nconst PREFIX = 'GamesGalleryGrid';\n\nconst classes = {\n    gameEntry: `${PREFIX}-gameEntry`,\n    gamesCriteria: `${PREFIX}-gamesCriteria`\n};\n\nconst StyledGamesGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    // inspired by the settings https://www.youtube.com/gaming uses ;)\n    [`& .${classes.gameEntry}`]: {\n        // 2 items on [0, sm]\n        [theme.breakpoints.only('xs')]: {\n            flexBasis: \"calc((100% / 2) - 1%)\"\n        },\n        // 4 items on [sm, md[\n        [theme.breakpoints.only('sm')]: {\n            flexBasis: \"calc((100% / 4) - 1%)\"\n        },\n        // 8 items on [md, infinity]\n        [theme.breakpoints.up('md')]: {\n            flexBasis: \"calc((100% / 8) - 1%)\"\n        },\n    },\n    [`& .${classes.gamesCriteria}`]: {\n        display: \"flex\",\n        [theme.breakpoints.down('md')]: {\n            flexDirection: \"column\",\n            rowGap: \"8px\"\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n        }\n    }\n}));\n\n// To check if platform match search critiria\nconst matches_platform_search = (platform) => (game) => game.platform === platform;\n\n// To check if title match search criteria (insensitive search)\nconst matches_title_search = (searchTitle) => (game) => game.title.search(new RegExp(searchTitle, 'i')) >= 0;\n\n// To check if two arrays contains at least one element in common\nconst at_least_one_in_common = (requestedGenres) => (game) => requestedGenres.some(v => game.genres.indexOf(v.key) >= 0);\n\n// The gallery component\nfunction GamesGalleryGrid(props) {\n\n    const {loading, error, data, filters, sortFunction} = props;\n\n    // on mount, load data (only once)\n    React.useEffect(() => {\n        props.get_games();\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    // prepare filter checks\n    let filter_conditions = [];\n    \n    // if provided platform filter\n    if (filters.platform.length !== 0) {\n        filter_conditions.push(matches_platform_search(filters.platform));\n    }\n\n    // if provided title filter\n    if (filters.title.length !== 0) {\n        filter_conditions.push(matches_title_search(filters.title));\n    }\n\n    // if provided genre filter\n    if (filters.genres.length !== 0) {\n        filter_conditions.push(at_least_one_in_common(filters.genres));\n    }\n\n    // Apply filters\n    const currentGames = data\n        .filter(game => filter_conditions.every(condition => condition(game)))\n        .sort(sortFunction);\n\n    return (\n        <ReloadWrapper \n            loading={loading}\n            error={error}\n            reloadFct={() => {props.get_games();}}\n            component={\n                <StyledGamesGallery>\n                    <Grid\n                        container\n                        className={classes.gamesCriteria}\n                    >\n                        <Grid item xs={12} md={1}>\n                            <GamesSorters />\n                        </Grid>\n                        <Grid item xs={12} md={2}>\n                            <PlatformSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <GenresSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TitleFilter games={currentGames} />\n                        </Grid>\n                    </Grid>\n            \n                    <Grid\n                        container\n                        spacing={1}\n                        style={\n                            {\n                                rowGap: \"15px\"\n                            }\n                        }\n                    >\n                        {\n                            currentGames\n                                .map(game => \n                                        <Grid \n                                            key={game.playlistId ?? game.videoId} \n                                            item \n                                            className={classes.gameEntry}\n                                        >\n                                            <CardEntry game={game}/>\n                                        </Grid>\n                                )\n                        }\n                    </Grid>\n                </StyledGamesGallery>\n            }\n        />\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.games.games,\n    filters: {\n        genres: state.games.filters.selected_genres,\n        title: state.games.filters.selected_title,\n        platform: state.games.filters.selected_platform,\n    },\n    sortFunction: state.games.sorters.currentSortFunction,\n    loading: state.games.loading,\n    error: state.games.error\n});\n\nconst mapDispatchToProps = {\n    get_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesGalleryGrid);","const platformIcons = {\n    \"PS1\": \"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826.586.195 1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\",\n    \"PS2\": \"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513 0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292Z\",\n    \"PS3\": \"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375 0-.778-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\",\n    \"PSP\":  `\n        M 3.238281 9.3125 L 8.371094 9.3125 L 8.371094 10.832031 L 3.441406 10.832031 L 3.441406 12.152344 L 3.238281 12.152344 L 3.238281 10.632812 L 8.167969 10.632812 L 8.167969 9.511719 L 3.238281 9.511719 L 3.238281 9.3125 \n        M 14.777344 10.832031 L 14.777344 12.152344 L 14.578125 12.152344 L 14.578125 10.632812 L 19.503906 10.632812 L 19.503906 9.511719 L 14.578125 9.511719 L 14.578125 9.3125 L 19.707031 9.3125 L 19.707031 10.832031 L 14.777344 10.832031 \n        M 10.988281 9.3125 L 10.988281 11.953125 L 8.371094 11.953125 L 8.371094 12.152344 L 11.199219 12.152344 L 11.199219 9.511719 L 13.8125 9.511719 L 13.8125 9.3125 L 10.988281 9.3125\n    `,\n    \"PC\": `\n        M4.539062 7.515625 L 4.539062 13.886719 L 7.6875 13.886719 L 7.695312 11.738281 L 7.707031 9.597656 L 8.625 9.585938 L 9.542969 9.578125 L 10.546875 8.589844 L 11.550781 7.605469 L 11.550781 3.148438 L 10.527344 2.144531 L 9.507812 1.140625 L 4.539062 1.140625 Z \n        M8.28125 5.410156 L 8.289062 7.113281 L 8 7.101562 L 7.707031 7.089844 L 7.695312 5.40625 L 7.6875 3.722656 L 7.9375 3.714844 C 8.082031 3.707031 8.210938 3.703125 8.230469 3.703125 C 8.253906 3.707031 8.273438 4.308594 8.28125 5.410156 Z \n        M8.28125 5.410156 \n        M13.09375 2.148438 L 12.074219 3.148438 L 12.074219 11.917969 L 13.078125 12.902344 L 14.085938 13.886719 L 17.457031 13.886719 L 18.460938 12.898438 L 19.460938 11.917969 L 19.445312 8.417969 L 16.144531 8.417969 L 16.132812 9.878906 L 16.125 11.347656 L 15.601562 11.347656 L 15.601562 3.71875 L 16.125 3.71875 L 16.132812 4.925781 L 16.144531 6.132812 L 19.445312 6.132812 L 19.460938 3.148438 L 18.441406 2.148438 L 17.417969 1.140625 L 14.117188 1.140625 Z \n        M13.09375 2.148438\n    `,\n    \"GBA\": `\n        M 12 19.199219 C 9.457031 19.199219 7.679688 18.960938 6.71875 18.429688 C 6.527344 18.335938 6.382812 18.289062 6.289062 18.289062 C 3.410156 18.191406 1.96875 17.183594 1.390625 16.558594 C 1.105469 16.269531 0.960938 15.9375 0.960938 15.503906 C 0.960938 13.390625 1.054688 9.503906 1.441406 8.015625 C 1.632812 7.25 2.351562 6.71875 3.167969 6.71875 C 3.984375 6.71875 5.230469 5.949219 6.050781 5.230469 C 6.429688 4.945312 6.863281 4.800781 7.296875 4.800781 L 16.75 4.800781 C 17.230469 4.800781 17.710938 4.992188 18 5.28125 C 18.625 5.855469 19.96875 6.71875 20.832031 6.71875 C 21.648438 6.71875 22.367188 7.25 22.558594 8.015625 C 22.894531 9.3125 23.039062 12.671875 23.039062 15.457031 C 23.039062 15.890625 22.894531 16.222656 22.609375 16.511719 C 21.984375 17.136719 20.589844 18.144531 17.710938 18.238281 C 17.519531 18.238281 17.375 18.289062 17.328125 18.335938 C 16.464844 18.910156 14.6875 19.199219 12 19.199219 Z \n        M 6.289062 17.328125 C 6.527344 17.328125 6.816406 17.425781 7.152344 17.570312 C 7.632812 17.808594 8.832031 18.238281 12 18.238281 C 15.359375 18.238281 16.464844 17.761719 16.75 17.570312 C 16.992188 17.375 17.328125 17.28125 17.710938 17.28125 C 20.304688 17.183594 21.550781 16.222656 21.933594 15.839844 C 22.03125 15.742188 22.078125 15.601562 22.078125 15.457031 C 22.078125 12.816406 21.9375 9.457031 21.601562 8.304688 C 21.503906 7.96875 21.167969 7.730469 20.832031 7.730469 C 19.535156 7.730469 18 6.625 17.328125 6 C 17.136719 5.808594 16.894531 5.808594 16.75 5.808594 L 7.296875 5.808594 C 7.105469 5.808594 6.863281 5.90625 6.671875 6.050781 C 6.386719 6.289062 4.65625 7.679688 3.167969 7.679688 C 2.785156 7.679688 2.496094 7.921875 2.402344 8.257812 C 2.066406 9.457031 1.921875 12.816406 1.921875 15.503906 C 1.921875 15.648438 1.96875 15.792969 2.066406 15.890625 C 2.449219 16.269531 3.695312 17.230469 6.289062 17.328125 Z \n        M 3.839844 8.640625 L 4.800781 8.640625 L 4.800781 11.519531 L 3.839844 11.519531 Z \n        M 2.878906 10.558594 L 2.878906 9.601562 L 5.761719 9.601562 L 5.761719 10.558594 Z \n        M 20.398438 8.640625 C 20.785156 8.640625 21.121094 8.976562 21.121094 9.359375 C 21.121094 9.742188 20.785156 10.078125 20.398438 10.078125 C 20.015625 10.078125 19.679688 9.742188 19.679688 9.359375 C 19.679688 8.976562 20.015625 8.640625 20.398438 8.640625 Z \n        M 18.960938 10.078125 C 19.34375 10.078125 19.679688 10.414062 19.679688 10.800781 C 19.679688 11.183594 19.34375 11.519531 18.960938 11.519531 C 18.574219 11.519531 18.238281 11.183594 18.238281 10.800781 C 18.238281 10.414062 18.574219 10.078125 18.960938 10.078125 Z \n        M 5.710938 13.871094 C 5.808594 13.632812 5.710938 13.34375 5.519531 13.25 L 4.078125 12.527344 C 3.839844 12.429688 3.550781 12.527344 3.457031 12.71875 C 3.359375 12.960938 3.457031 13.25 3.648438 13.34375 L 5.089844 14.0625 C 5.136719 14.109375 5.230469 14.109375 5.28125 14.109375 C 5.472656 14.160156 5.617188 14.066406 5.710938 13.871094 Z \n        M 5.710938 15.792969 C 5.808594 15.550781 5.710938 15.265625 5.519531 15.167969 L 4.078125 14.449219 C 3.839844 14.351562 3.550781 14.449219 3.457031 14.640625 C 3.359375 14.878906 3.457031 15.167969 3.648438 15.265625 L 5.089844 15.984375 C 5.136719 16.03125 5.230469 16.03125 5.28125 16.03125 C 5.472656 16.078125 5.617188 15.984375 5.710938 15.792969 Z \n        M 15.839844 15.839844 L 8.160156 15.839844 C 7.585938 15.839844 7.199219 15.457031 7.199219 14.878906 L 7.199219 8.640625 C 7.199219 8.0625 7.585938 7.679688 8.160156 7.679688 L 15.839844 7.679688 C 16.414062 7.679688 16.800781 8.0625 16.800781 8.640625 L 16.800781 14.878906 C 16.800781 15.457031 16.414062 15.839844 15.839844 15.839844 Z \n        M 8.160156 8.640625 L 8.160156 14.878906 L 15.839844 14.878906 L 15.839844 8.640625 Z \n        M 18.574219 13.871094 L 20.496094 12.910156 C 20.589844 12.863281 20.640625 12.71875 20.589844 12.574219 C 20.542969 12.480469 20.398438 12.429688 20.253906 12.480469 L 18.335938 13.441406 C 18.238281 13.488281 18.191406 13.632812 18.238281 13.777344 C 18.289062 13.871094 18.382812 13.921875 18.429688 13.921875 C 18.527344 13.921875 18.574219 13.921875 18.574219 13.871094 Z \n        M 18.574219 14.832031 L 20.496094 13.871094 C 20.589844 13.824219 20.640625 13.679688 20.589844 13.535156 C 20.542969 13.441406 20.398438 13.390625 20.253906 13.441406 L 18.335938 14.398438 C 18.238281 14.449219 18.191406 14.589844 18.238281 14.734375 C 18.289062 14.832031 18.382812 14.878906 18.429688 14.878906 C 18.527344 14.878906 18.574219 14.878906 18.574219 14.832031 Z \n        M 18.574219 15.792969 L 20.496094 14.832031 C 20.589844 14.785156 20.640625 14.640625 20.589844 14.496094 C 20.542969 14.398438 20.398438 14.351562 20.253906 14.398438 L 18.335938 15.359375 C 18.238281 15.410156 18.191406 15.550781 18.238281 15.695312 C 18.289062 15.792969 18.382812 15.839844 18.429688 15.839844 C 18.527344 15.839844 18.574219 15.839844 18.574219 15.792969 Z \n        M 18.574219 15.792969 \n    `\n}\nexport default platformIcons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@mui/material/Grid\";\n\nfunction CenteredBox(props) {\n    const {children} = props;\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            style={{minHeight: '80vh'}}\n        >\n            {children}\n        </Grid>\n    );\n}\n\nCenteredBox.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CenteredBox;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { cx } from '@emotion/css';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { amber, green } from '@mui/material/colors';\nimport IconButton from '@mui/material/IconButton';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport Snackbar from '@mui/material/Snackbar';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nconst PREFIX = 'CustomizedSnackbar';\n\nconst classes = {\n    success: `${PREFIX}-success`,\n    error: `${PREFIX}-error`,\n    info: `${PREFIX}-info`,\n    warning: `${PREFIX}-warning`,\n    icon: `${PREFIX}-icon`,\n    iconVariant: `${PREFIX}-iconVariant`,\n    message: `${PREFIX}-message`\n};\n\nconst StyledSnackbar = styled(Snackbar)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.success}`]: {\n        backgroundColor: green[600],\n    },\n    [`& .${classes.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    [`& .${classes.info}`]: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    [`& .${classes.warning}`]: {\n        backgroundColor: amber[700],\n    },\n    [`& .${classes.icon}`]: {\n        fontSize: 20,\n    },\n    [`& .${classes.iconVariant}`]: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    [`& .${classes.message}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.success}`]: {\n        backgroundColor: green[600],\n    },\n    [`& .${classes.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    [`& .${classes.info}`]: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    [`& .${classes.warning}`]: {\n        backgroundColor: amber[700],\n    },\n    [`& .${classes.icon}`]: {\n        fontSize: 20,\n    },\n    [`& .${classes.iconVariant}`]: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    [`& .${classes.message}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nfunction CustomSnackbar(props) {\n\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={cx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={cx(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                    size=\"large\">\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nCustomSnackbar.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nfunction CustomizedSnackbar(props) {\n    const [open, setOpen] = React.useState(true);\n    const {variant, message} = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <StyledSnackbar\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n        >\n            <CustomSnackbar\n                onClose={handleClose}\n                variant={variant}\n                message={message}\n            />\n        </StyledSnackbar>\n    );\n}\n\nCustomizedSnackbar.propTypes = {\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default CustomizedSnackbar;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// Icons\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Fab from '@mui/material/Fab';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\n\n// Custom\n// @ts-ignore\nimport CenteredGrid from \"./CenteredGrid.tsx\";\n// @ts-ignore\nimport SnackbarWrapper from \"./CustomSnackbar.tsx\";\n\n// The reload wrapper component\nfunction ReloadWrapper(props) {\n\n    const {loading, error, component, reloadFct} = props;\n    const { t } = useTranslation('common');\n\n    if (loading) {\n        return <CenteredGrid>\n            <CircularProgress/>\n        </CenteredGrid>\n    }\n\n    if (error) {\n        return <>\n            <SnackbarWrapper\n                variant={\"error\"}\n                message={error}\n            />\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>;\n    }\n    \n    return component;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = _state => ({});\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReloadWrapper);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;"],"names":["props","t","useTranslation","navigate","useNavigate","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","enqueueSnackbar","useSnackbar","game","contextMenuState","contextMenuOpen","setContextMenuOpen","gameTitle","title","gameURL","url","local_path","url_type","playlistId","videoId","dialog_options","PlayArrow","fontSize","YouTube","window","location","href","FileCopy","undefined","navigator","clipboard","writeText","clipboardData","setData","Twitter","open","encodeURIComponent","Facebook","Reddit","Dialog","onClose","DialogTitle","id","DialogContent","List","map","option","ListItem","onClick","divider","ListItemIcon","icon","ListItemText","primary","text","key","DialogActions","Button","autoFocus","PREFIX","classes","gameRoot","gameCover","MuiCardActionArea","StyledCard","styled","Card","position","height","zIndex","is_mobile_device","React","label_for_game","className","Tooltip","CardActionArea","onContextMenu","event","preventDefault","root","CardMedia","src","imagePath","alt","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","name","overridesResolver","styles","ownerState","row","_extends","display","flexDirection","flexWrap","FormGroup","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","error","slots","composeClasses","useUtilityClasses","_jsx","clsx","mapDispatchToProps","sort_games","change_sorting_order","connect","state","games","sorters","handleSortChange","field","target","handleSortOrderChange","metadata","currentTarget","direction","getAttribute","anchorEl","setAnchorEl","Boolean","field_labels","sort_button_conditions","index","keys","length","variant","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","component","criteria","FormControlLabel","control","Checkbox","checked","onChange","checkedIcon","ArrowDropUp","ArrowDropDown","label","Object","sort_key","condition_check","IconButton","size","ArrowUpward","ArrowDownward","filterByGenre","filter_games_by_genre","filterByTitle","filter_games_by_title","filters","genre_options","genres","genre","sort","a","b","Autocomplete","multiple","openOnFocus","filterSelectedOptions","limitTags","options","getOptionLabel","isOptionEqualToValue","value","Array","isArray","some","v","renderInput","params","TextField","_event","filterByPlatform","filter_games_by_platform","platforms","platform","renderOption","_state","SvgIcon","titleAccess","d","iconsSVG","selected_title","Set","freeSolo","onInputChange","gameEntry","gamesCriteria","StyledGamesGallery","only","flexBasis","up","rowGap","justifyContent","get_games","data","selected_genres","selected_platform","sortFunction","currentSortFunction","loading","searchTitle","requestedGenres","filter_conditions","push","search","RegExp","indexOf","currentGames","filter","every","condition","ReloadWrapper","reloadFct","Grid","container","item","xs","md","spacing","style","CardEntry","children","alignItems","minHeight","success","info","warning","iconVariant","message","StyledSnackbar","Snackbar","backgroundColor","green","palette","dark","main","amber","opacity","marginRight","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","CustomSnackbar","Icon","SnackbarContent","cx","action","color","Close","setOpen","handleClose","reason","autoHideDuration","CenteredGrid","CircularProgress","Fab","Autorenew","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}