{"version":3,"sources":["serviceWorker.js","actions/games.js","reducers/games.js","actions/planning.js","reducers/planning.js","reducers/index.js","components/Store.js","components/Home/Header.js","components/Home/MenuEntries.js","components/Home/Menu.js","components/YTPlayer/Player.js","components/Others/CenteredGrid.js","components/Others/CustomSnackbar.js","components/GamesView/CardEntry.js","components/GamesView/GamesGallery.js","components/Planning/Planning.js","components/Home/styles.js","components/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","fetchingStarted","type","fetchingFinished","games","initialState","error","loading","planning","rootReducer","combineReducers","state","action","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","Header","props","open","setOpen","classes","Fragment","CssBaseline","AppBar","position","className","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","edge","menuButton","hide","ListItemLink","icon","primary","to","renderLink","React","useMemo","forwardRef","linkProps","ref","innerRef","Tooltip","title","ListItem","button","component","ListItemIcon","ListItemText","ENTRIES","List","Menu","container","Drawer","variant","drawer","drawerOpen","drawerClose","paper","toolbar","Divider","Player","id","useParams","url","useLocation","pathname","includes","controls","playing","width","height","CenteredBox","children","Grid","spacing","direction","alignItems","justify","style","minHeight","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","main","amber","fontSize","iconVariant","opacity","marginRight","message","display","CustomSnackbar","onClose","other","Icon","SnackbarContent","aria-describedby","key","CustomizedSnackbar","useState","handleClose","event","reason","Snackbar","autoHideDuration","CardEntry","game","useTheme","is_large_screen","useMediaQuery","breakpoints","up","Card","CardMedia","image","imagePath","CardActions","disableSpacing","justifyContent","Link","url_type","playlistId","videoId","href","sortByNameASC","a","b","sortByNameDESC","sortByReleaseDateASC","aa","bb","sortByReleaseDateDESC","GamesGallery","handleSortChange","bind","currentSorters","sortersState","sortersKeys","sorters","this","get_games","field","newValue","updatedSortersState","updatedCurrentSorters","concat","filter","s","map","criteria","setState","data","CenteredGrid","CircularProgress","Fab","size","sorted","sort","i","length","comparatorResult","Box","flexWrap","flexDirection","ButtonGroup","Button","Typography","gridRowGap","item","xs","Component","mapDispatchToProps","dispatch","getState","gamesData","parts","releaseDate","split","base_url","Object","assign","process","coversRootPath","coverFile","defaultCoverFile","Date","connect","Viewer","get_scheduled_games","date_options","weekday","year","month","day","Timeline","align","scheduledGame","TimelineItem","TimelineOppositeContent","toLocaleDateString","undefined","TimelineSeparator","TimelineDot","status","TimelineConnector","TimelineContent","Paper","elevation","root","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","flexShrink","whiteSpace","overflowX","padding","mixins","content","flexGrow","Root","store","basicStyle","basename","path","Planning","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.302ff6e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import gamesData from \"../data/games.json\";\n\nexport const FETCHING_REQUESTED = \"GAMES_REQUESTED\";\nexport const FETCHING_OK = \"GAMES_FETCHING_OK\";\nexport const FETCHING_FAILED = \"GAMES_FETCHING_FAILED\";\n\n// param à la place du () du genre ({title, password})\nexport const get_games = () => {\n    return (dispatch, getState) => {\n\n        // pour plus tard\n        // const { games } = getState();\n\n        dispatch(fetchingStarted());\n\n        // Build the object for component\n        let games = gamesData\n            .games\n            .map(game => {\n                const parts = game.releaseDate.split(\"/\");\n                const id = game.playlistId ?? game.videoId;\n                const base_url = (\n                    (game.playlistId) \n                        ? \"https://www.youtube.com/playlist?list=\" \n                        :  \"https://www.youtube.com/watch?v=\"\n                ) + id ;\n                const url_type = (game.playlistId) ? \"PLAYLIST\" : \"VIDEO\";\n                return Object.assign({}, game, {\n                    \"imagePath\": process.env.PUBLIC_URL + gamesData.coversRootPath + id + \"/\" + (game.coverFile ?? gamesData.defaultCoverFile),\n                    \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]),\n                    \"url\": base_url,\n                    \"url_type\": url_type\n                });\n            });\n\n        dispatch(fetchingFinished(games));\n\n    };\n};\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (games) => ({\n    type: FETCHING_OK,\n    games\n});\n\n// eslint-disable-next-line\nconst fetchingFailed = (error) => ({\n    type: FETCHING_FAILED,\n    error\n});","import {\n    FETCHING_FAILED,\n    FETCHING_OK,\n    FETCHING_REQUESTED\n} from \"../actions/games\"\n\nconst initialState = {\n    games: [],\n    error: null,\n    loading: false\n};\n\nexport default function games(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                games: action.games,\n                error: null\n            };\n        case FETCHING_FAILED:\n            return {\n                ...state,\n                loading: false,\n                games: [],\n                error: action.error\n            };\n        default:\n            return state\n    }\n\n}","import gamesData from \"../data/scheduledGames.json\";\n\nexport const FETCHING_REQUESTED = \"PLANNING_REQUESTED\";\nexport const FETCHING_OK = \"PLANNING_FETCHING_OK\";\n\nexport const get_scheduled_games = () => {\n    return (dispatch, getState) => {\n\n        dispatch(fetchingStarted());\n        // prepare data\n        const planning = gamesData.map(scheduledGame => {\n            let releaseDate = scheduledGame[\"releaseDate\"];\n            const parts = releaseDate.split(\"/\");\n            return Object.assign({}, scheduledGame, { \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]) })\n        });\n        dispatch(fetchingFinished(planning));\n    };\n};\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (planning) => ({\n    type: FETCHING_OK,\n    planning\n});","import {\n    FETCHING_OK,\n    FETCHING_REQUESTED\n} from \"../actions/planning\"\n\nconst initialState = {\n    planning: [],\n    error: null,\n    loading: false\n};\n\nexport default function planning(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                planning: action.planning,\n                error: null\n            };\n        default:\n            return state\n    }\n\n}","import { combineReducers } from \"redux\"\n\nimport games from \"./games\";\nimport planning from \"./planning\"\n\nconst rootReducer = combineReducers({\n    games,\n    planning\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer  from '../reducers/index'\n\n/* eslint-disable no-underscore-dangle */\nexport default createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n/* eslint-enable */","import React from 'react';\nimport clsx from \"clsx\";\nimport {AppBar, CssBaseline, IconButton, Toolbar} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nexport default function Header(props) {\n\n    const {open, setOpen, classes} = props;\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport {\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    List\n} from '@material-ui/core';\n\nimport {\n    Link\n} from \"react-router-dom\"\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// icons\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nfunction ListItemLink(props) {\n    const { icon, primary, to } = props;\n\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef((linkProps, ref) => (\n                // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\n                // See https://github.com/ReactTraining/react-router/issues/6056\n                <Link to={to} {...linkProps} innerRef={ref} />\n            )),\n        [to],\n    );\n\n    return (\n        <Tooltip title={primary} aria-label={primary}>\n            <ListItem button component={renderLink}>\n                <ListItemIcon>{icon}</ListItemIcon>\n                <ListItemText primary={primary} />\n            </ListItem>\n        </Tooltip>\n    )\n\n}\n\nexport const ENTRIES = (\n    <List>\n        <ListItemLink\n            icon={<SportsEsportsIcon />}\n            primary={\"Jeux\"}\n            to={\"/games\"}\n        />\n        <ListItemLink\n            icon={<ScheduleIcon />}\n            primary={\"Planning\"}\n            to={\"/planning\"}\n        />\n    </List>\n);","\n// the menues entries\nimport {ENTRIES} from \"./MenuEntries\";\nimport {Divider, Drawer, IconButton} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport React from \"react\";\n\nexport default function Menu(props) {\n\n    const {container, setOpen, open, classes} = props;\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Drawer\n            container={container}\n            variant={\"permanent\"}\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n            open={open}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={handleDrawerClose}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            {ENTRIES}\n        </Drawer>\n    )\n}","import React from 'react'\nimport ReactPlayer from 'react-player/youtube'\nimport { useParams, useLocation } from 'react-router-dom'\n\nexport default function Player(props) {\n    const { id } = useParams();\n    const location = useLocation();\n    const YOUTUBE_BASE_PLAYLIST_LINK = \"https://www.youtube.com/playlist?list=\";\n    const YOUTUBE_BASE_VIDEO_LINK = \"https://www.youtube.com/watch?v=\";\n    const type = (location.pathname.includes(\"/playlist/\")) ? \"PLAYLIST\" : \"VIDEO\";\n    const url = (type === \"PLAYLIST\" ? YOUTUBE_BASE_PLAYLIST_LINK : YOUTUBE_BASE_VIDEO_LINK) + id;\n\n    return (\n        <div className='player-wrapper'>\n            <ReactPlayer\n                controls={true}\n                url={url}\n                playing={true}\n                width='100%'\n                height='80vh'\n                className='react-player'\n            />\n        </div>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction CenteredBox(props) {\n    const {children} = props;\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{minHeight: '80vh'}}\n        >\n            {children}\n        </Grid>\n    )\n}\n\nCenteredBox.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CenteredBox;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nfunction CustomSnackbar(props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nCustomSnackbar.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nfunction CustomizedSnackbar(props) {\n    const [open, setOpen] = React.useState(true);\n    const {variant, message} = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <Snackbar\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n        >\n            <CustomSnackbar\n                onClose={handleClose}\n                variant={variant}\n                message={message}\n            />\n        </Snackbar>\n    )\n}\n\nCustomizedSnackbar.propTypes = {\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default CustomizedSnackbar;","import React from \"react\";\n\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport {Link} from 'react-router-dom';\n\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nfunction CardEntry(props) {\n\n    const {game} = props;\n\n    // Use the medium size\n    const theme = useTheme();\n    const is_large_screen = useMediaQuery(theme.breakpoints.up('lg'));\n\n    return (\n        <Card>\n\n            <CardMedia\n                component=\"img\"\n                // https://material-ui.com/api/card-media/\n                height=\"150\"\n                image={game.imagePath}\n                title={game.title}\n            />\n\n            <CardActions disableSpacing justifyContent='center'>\n                { is_large_screen &&\n                    <Tooltip title={\"Regarder \" + game.title} aria-label=\"Regarder\">\n                        <IconButton\n                            aria-label=\"play\"\n                            component={Link}\n                            to={\n                                game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId\n                            }\n                        >\n                            <PlayArrowIcon/>\n                        </IconButton>\n                    </Tooltip>            \n                }\n                <Tooltip title={\"Regarder \" + game.title + \" sur Youtube\"} aria-label=\"Regarder sur Youtube\">\n                    <IconButton\n                        aria-label=\"share\"\n                        href={game.url}\n                    >\n                        <YouTubeIcon/>\n                    </IconButton>\n                </Tooltip>\n            </CardActions>\n\n        </Card>\n    );\n}\n\nexport default CardEntry;","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {get_games} from \"../../actions/games\";\n\n// Style\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fab from '@material-ui/core/Fab';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\n// Custom\n\nimport CenteredGrid from \"../Others/CenteredGrid\";\nimport SnackbarWrapper from \"../Others/CustomSnackbar\";\nimport CardEntry from \"./CardEntry\";\n\n// Inspired by https://stackoverflow.com/a/60068169/6149867\nfunction makeMultiCriteriaSort(criteria) {\n    return (a, b) => {\n        for(let i = 0; i < criteria.length; i++) {\n            const comparatorResult = criteria[i](a, b);\n            if (comparatorResult !== 0) {\n                return comparatorResult;\n            }\n        }\n        return 0;\n    }\n}\n\n// search criterias\nconst sortByNameASC = (a, b) => (a.title < b.title) ? -1 : (a.title > b.title ? 1 : 0) ;\nconst sortByNameDESC = (a, b) => -sortByNameASC(a, b);\nconst sortByReleaseDateASC = (a, b) => {\n    let aa = a[\"releaseDate\"];\n    let bb = b[\"releaseDate\"];\n    return aa < bb ? -1 : (aa > bb ? 1 : 0);\n};\nconst sortByReleaseDateDESC = (a, b) => -sortByReleaseDateASC(a, b);\n\n// The gallery component\nclass GamesGallery extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSortChange = this.handleSortChange.bind(this);\n        this.state = {\n            currentSorters: [sortByNameASC], // the current sort(s) applied\n            sortersState: {\n                \"name\": \"ASC\",\n                \"releaseDate\": \"ASC\"\n            },\n            sortersKeys: [\"name\", \"releaseDate\"], // useful to recreate currentSorters\n            // in order to prevent if / else chain in the code\n            sorters: {\n                \"name\": {\n                    \"ASC\": sortByNameASC,\n                    \"DESC\": sortByNameDESC\n                },\n                \"releaseDate\": {\n                    \"ASC\": sortByReleaseDateASC,\n                    \"DESC\": sortByReleaseDateDESC\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.props.get_games();\n    };\n\n    handleSortChange(field) {\n        // Invert previous state value for this field\n        const oldValue = this.state.sortersState[field];\n        const newValue = (oldValue === \"ASC\") ? \"DESC\" : \"ASC\";\n\n        // keep track of the sorters state\n        const updatedSortersState = {\n            ...this.state.sortersState,\n            [field]: newValue\n        }\n\n        // Decide the sort algorithm now\n        // Changed field should be the first criteria, other should be unchanged (following my simple order, from now)\n        let updatedCurrentSorters = [field]\n            .concat(\n                this.state.sortersKeys.filter(s => s !== field)\n            )\n            .map(criteria => {\n                const sortFcts = this.state.sorters[criteria];\n                const state = updatedSortersState[criteria];\n                return sortFcts[state];\n            });\n        \n        // update state\n        this.setState({\n            ...this.state,\n            sortersState: updatedSortersState,\n            currentSorters: updatedCurrentSorters\n        });\n    }\n\n    render() {\n        const {loading, error, data} = this.props;\n\n        if (loading) {\n            return <CenteredGrid>\n                <CircularProgress/>\n            </CenteredGrid>\n        }\n\n        if (error) {\n\n            return <React.Fragment>\n                <SnackbarWrapper\n                    variant={\"error\"}\n                    message={this.props.error}\n                />\n                <CenteredGrid>\n                    <Fab\n                        variant=\"extended\"\n                        size=\"medium\"\n                        color=\"primary\"\n                        aria-label=\"reload\"\n                        onClick={() => {\n                            this.props.get_games();\n                        }}\n                    >\n                        <AutorenewIcon/>\n                        Recharger\n                    </Fab>\n                </CenteredGrid>\n            </React.Fragment>;\n        }\n\n        // Apply given sort choice\n        let sorted = data.sort(\n            makeMultiCriteriaSort(this.state.currentSorters)\n        );\n\n        return (\n            <>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    flexDirection=\"row\"\n                    justifyContent=\"flex-end\"\n                >\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                        {\n                            this.state.sortersKeys\n                                .map(criteria => \n                                    <Button onClick={this.handleSortChange.bind(this, criteria)} key={\"searchCriteria_\"+criteria}>\n                                        {\n                                            this.state.sortersState[criteria] === \"ASC\" ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />\n                                        }\n                                        <Typography>\n                                            { criteria === \"name\" &&\n                                                \"Trier par nom\" \n                                            }\n                                            { criteria === \"releaseDate\" &&\n                                                \"Trier par date de sortie\"\n                                            }\n                                        </Typography>\n                                    </Button>\n                                )\n                        }\n                    </ButtonGroup>\n                </Box>\n                <Grid\n                    container\n                    flexWrap=\"wrap\"\n                    flexDirection=\"row\"\n                    gridRowGap=\"20px\"\n                >\n                    {\n                        sorted.map(\n                            game => \n                                <Grid key={game.playlistId ?? game.videoId} item xs>\n                                    <CardEntry game={game}/>\n                                </Grid>\n                        )\n                    }\n                </Grid>\n            </>\n        )\n    }\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.games.games,\n    loading: state.games.loading,\n    error: state.games.error,\n});\n\nconst mapDispatchToProps = {\n    get_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesGallery);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {get_scheduled_games} from \"../../actions/planning\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CenteredGrid from \"../Others/CenteredGrid\";\n\n// Timeline\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\n// Style\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass Viewer extends React.Component {\n\n    componentDidMount() {\n        this.props.get_scheduled_games();\n    };\n\n    render() {\n\n        const {loading, data} = this.props;\n        const date_options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n\n        if (loading) {\n            return <CenteredGrid>\n                <CircularProgress/>\n            </CenteredGrid>\n        }\n\n        return (\n            //<CardsBox data={this.props.data}/>\n            <Timeline align=\"alternate\">\n                {\n                    data.map(scheduledGame => \n                        <TimelineItem>\n                            <TimelineOppositeContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {\n                                        scheduledGame[\"releaseDate\"]\n                                            .toLocaleDateString(undefined, date_options)\n                                    }\n                                </Typography>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineDot>\n                                    { scheduledGame.status === \"RECORDED\" &&\n                                        <Tooltip title=\"Terminé\" aria-label=\"Terminé\">\n                                            <CheckCircleIcon />\n                                        </Tooltip>\n                                    }\n                                    { scheduledGame.status === \"PENDING\" &&\n                                        <Tooltip title=\"En cours\" aria-label=\"En cours\">\n                                            <HourglassEmptyIcon />\n                                        </Tooltip>\n                                    }\n                                </TimelineDot>\n                                <TimelineConnector />\n                            </TimelineSeparator>\n                            <TimelineContent>\n                                <Paper elevation={3} >\n                                    <Typography variant=\"h6\" component=\"h1\">\n                                        {scheduledGame[\"title\"]}\n                                    </Typography>\n                                </Paper>\n                            </TimelineContent>  \n                        </TimelineItem>\n                    )\n                }\n            </Timeline>\n        )\n\n    }\n\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.planning.planning,\n    loading: state.planning.loading,\n    error: state.planning.error,\n});\n\nconst mapDispatchToProps = {\n    get_scheduled_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Viewer);","import {makeStyles} from '@material-ui/core/styles';\n\n// A style sheet\nconst drawerWidth = 150;\nexport default makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n}));","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport Header from \"./Home/Header\";\nimport Menu from \"./Home/Menu\"\nimport Player from \"./YTPlayer/Player\";\nimport GamesGallery from \"./GamesView/GamesGallery\";\nimport Planning from \"./Planning/Planning\";\n\nimport Grid from '@material-ui/core/Grid';\nimport basicStyle from \"./Home/styles\"\n\nfunction Root({ store }) {\n\n    const classes = basicStyle();\n\n    // for drawser\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <Provider store={store}>\n                {/* https://github.com/facebook/create-react-app/issues/1765#issuecomment-327615099 */}\n                <Router basename={process.env.PUBLIC_URL} >\n                    <Header open={open} setOpen={setOpen} classes={classes}/>\n                    <Menu open={open} setOpen={setOpen} classes={classes}/>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Grid container>\n                            <Route path=\"/games\" component={GamesGallery} />\n                            <Route path=\"/playlist/:id\" component={Player} />\n                            <Route path=\"/video/:id\" component={Player} />\n                            <Route path=\"/planning\" component={Planning} />\n                        </Grid>\n                    </main>\n                </Router>\n            </Provider>\n        </div>\n    )\n}\n\nexport default Root","import React from 'react';\nimport { render } from 'react-dom'\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./components/Store\"\nimport Root from \"./components/Root\";\n\nrender(<Root store={store} />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}