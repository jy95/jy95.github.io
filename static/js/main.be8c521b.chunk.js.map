{"version":3,"sources":["serviceWorker.js","actions/games.js","reducers/games.js","actions/planning.js","reducers/planning.js","reducers/index.js","components/Store.js","components/Home/Header.js","components/Home/MenuEntries.js","components/Home/Menu.js","components/YTPlayer/Player.js","components/Others/CenteredGrid.js","components/Others/CustomSnackbar.js","components/GamesView/CardEntry.js","components/GamesView/GamesSorters.js","components/GamesView/GenresSelect.js","components/GamesView/PlatformSelect.js","components/GamesView/GamesGallery.js","components/Planning/Planning.js","components/Home/styles.js","components/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","makeMultiCriteriaSort","criteria","a","b","i","length","comparatorResult","DURATION_REGEX","fetchingStarted","type","fetchingFinished","games","sortingGames","newSortersState","sortFunction","sortCriteriaOrderChanger","keys","filterGamesByGenres","genres","filterGamesByTitle","title","filterGamesByPlatform","platform","sortByNameASC","sortByReleaseDateASC","aa","bb","sortByDurationASC","durationAsInt","initialState","error","loading","sorters","currentSortFunction","state","functions","filters","platforms","selected_genres","selected_title","selected_platform","planning","rootReducer","combineReducers","action","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","Header","props","open","setOpen","classes","Fragment","CssBaseline","AppBar","position","className","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","edge","menuButton","hide","ListItemLink","icon","primary","to","entry_label","t","useTranslation","renderLink","React","useMemo","forwardRef","linkProps","ref","innerRef","Tooltip","ListItem","button","component","ListItemIcon","ListItemText","ENTRIES","List","Menu","container","Drawer","variant","drawer","drawerOpen","drawerClose","paper","toolbar","Divider","Player","id","useParams","url","useLocation","pathname","includes","controls","playing","width","height","CenteredBox","children","Grid","spacing","direction","alignItems","justify","style","minHeight","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","main","amber","fontSize","iconVariant","opacity","marginRight","message","display","CustomSnackbar","onClose","other","Icon","SnackbarContent","aria-describedby","key","CustomizedSnackbar","useState","handleClose","event","reason","Snackbar","autoHideDuration","useStyles","localVideoPlayerButton","breakpoints","down","gameCover","between","up","gameControls","justifyContent","paddingLeft","paddingBottom","CardEntry","game","Card","CardMedia","image","imagePath","CardActions","Link","url_type","playlistId","videoId","href","mapDispatchToProps","sort_games","field","dispatch","getState","previousState","newStates","newValue","map","change_sorting_order","currentIndex","indexOf","newSortOrder","arr","elementIndex","firstElement","secondElement","firstSliceIndex","secondSliceIndex","slice","swapSiblingElements","connect","handleSortChange","target","name","handleSortOrderChange","metadata","currentTarget","getAttribute","anchorEl","setAnchorEl","undefined","field_labels","sort_button_conditions","index","Button","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","checkedIcon","label","Object","sort_key","condition_check","size","filterByGenre","filterByTitle","genre_options","genre","sort","Autocomplete","multiple","openOnFocus","filterSelectedOptions","limitTags","options","getOptionLabel","option","getOptionSelected","value","Array","isArray","some","v","renderInput","params","TextField","_event","iconsSVG","filterByPlatform","renderOption","_state","SvgIcon","titleAccess","d","gameEntry","only","gamesCriteria","get_games","gamesData","parts","releaseDate","split","base_url","assign","process","coversRootPath","coverFile","defaultCoverFile","Date","parseInt","duration","replace","data","CenteredGrid","CircularProgress","Fab","searchTitle","requestedGenres","filter_conditions","push","search","RegExp","item","xs","md","rowGap","filter","every","condition","Viewer","this","get_scheduled_games","date_options","weekday","year","month","day","Timeline","align","scheduledGame","TimelineItem","TimelineOppositeContent","Typography","toLocaleDateString","TimelineSeparator","TimelineDot","status","TimelineConnector","TimelineContent","Paper","elevation","Component","withTranslation","root","zIndex","transition","transitions","create","easing","sharp","leavingScreen","marginLeft","enteringScreen","flexShrink","whiteSpace","overflowX","padding","mixins","content","flexGrow","Root","store","basicStyle","basename","path","GamesGallery","Planning","i18next","init","interpolation","escapeValue","lng","resources","fr","common","common_fr","en","common_en","render","I18nextProvider","i18n","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be8c521b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import gamesData from \"../data/games.json\";\n\nexport const FETCHING_REQUESTED = \"GAMES_REQUESTED\";\nexport const FETCHING_OK = \"GAMES_FETCHING_OK\";\nexport const FETCHING_FAILED = \"GAMES_FETCHING_FAILED\";\nexport const SORTING_GAMES = \"SORTING_GAMES\";\nexport const SORTING_ORDER_CHANGED = \"SORTING_ORDER_CHANGED\";\nexport const FILTERING_BY_GENRE = \"FILTERING_BY_GENRE\";\nexport const FILTERING_BY_TITLE = \"FILTERING_BY_TITLE\";\nexport const FILTERING_BY_PLATFORM = \"FILTERING_BY_PLATFORM\";\n\n// Inspired by https://stackoverflow.com/a/60068169/6149867\nfunction makeMultiCriteriaSort(criteria) {\n    return (a, b) => {\n        for(let i = 0; i < criteria.length; i++) {\n            const comparatorResult = criteria[i](a, b);\n            if (comparatorResult !== 0) {\n                return comparatorResult;\n            }\n        }\n        return 0;\n    }\n}\n\n// Swap element position in array with its sibling (left or right)\n// Exception cases are handled in change_sorting_order\nfunction swapSiblingElements(arr, elementIndex , direction) {\n    // elements to swap\n    const firstElement = (direction === \"up\") ? arr[elementIndex]: arr[elementIndex + 1];\n    const secondElement = (direction === \"up\") ? arr[elementIndex - 1] : arr[elementIndex];\n    // indexes for slice call\n    const firstSliceIndex = (direction === \"up\") ? elementIndex - 1 : elementIndex;\n    const secondSliceIndex = elementIndex + ( (direction === \"up\") ? 1 : 2);\n    // return new array\n    return [ \n        ...arr.slice(0, firstSliceIndex), \n        firstElement, \n        secondElement, \n        ...arr.slice(secondSliceIndex) \n    ];\n }\n// Regex for duration\nconst DURATION_REGEX = /(\\d+):(\\d+):(\\d+)/; \n\n// param à la place du () du genre ({title, password})\nexport const get_games = () => {\n    return (dispatch, getState) => {\n\n        dispatch(fetchingStarted());\n\n        // Build the object for component\n        let games = gamesData\n            .games\n            .map(game => {\n                const parts = game.releaseDate.split(\"/\");\n                const id = game.playlistId ?? game.videoId;\n                const base_url = (\n                    (game.playlistId) \n                        ? \"https://www.youtube.com/playlist?list=\" \n                        :  \"https://www.youtube.com/watch?v=\"\n                ) + id ;\n                const url_type = (game.playlistId) ? \"PLAYLIST\" : \"VIDEO\";\n                return Object.assign({}, game, {\n                    \"imagePath\": process.env.PUBLIC_URL + gamesData.coversRootPath + id + \"/\" + (game.coverFile ?? gamesData.defaultCoverFile),\n                    \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]),\n                    \"url\": base_url,\n                    \"url_type\": url_type,\n                    \"durationAsInt\": parseInt((game.duration || \"00:00:00\").replace(DURATION_REGEX, \"$1$2$3\"))\n                });\n            });\n\n        dispatch(fetchingFinished(games));\n\n    };\n};\n\n// Given field is the one that changed\nexport const sort_games = (field) => {\n    return (dispatch, getState) => {\n        const { \n            games : {\n                sorters: previousState \n            }\n        } = getState();\n        \n        let newStates = previousState.state;\n\n        // Invert previous state value for this field\n        const oldValue = newStates[field];\n        const newValue = (oldValue === \"ASC\") ? \"DESC\" : \"ASC\";\n        newStates = {\n            ...previousState.state,\n            [field]: newValue\n        }\n\n        // Decide the sort algorithm now\n        // Changed field should be the first criteria, other should be unchanged (following my simple order, from now)\n        const sortFunction = makeMultiCriteriaSort(\n            previousState\n                .keys\n                .map(criteria => {\n                    const sortFcts = previousState.functions[criteria];\n                    const state = newStates[criteria];\n                    return sortFcts[state];\n                })\n        );\n\n        // Update state\n        dispatch(sortingGames(newStates, sortFunction));\n        \n    };\n};\n\nexport const change_sorting_order = (field, direction) => {\n    return (dispatch, getState) => {\n        const { \n            games : {\n                sorters: previousState \n            }\n        } = getState();\n\n        // Get current position\n        const currentIndex = previousState.keys.indexOf(field);\n\n        // Some case shoud not possible\n        const wrongCase = \n            currentIndex === -1 ||\n            (currentIndex === 0 && direction === \"up\") ||\n            (currentIndex === previousState.keys.length -1 && direction === \"down\")\n        ;\n        // if nothing wrong, apply change\n        if (!wrongCase){\n            const newSortOrder = swapSiblingElements(previousState.keys, currentIndex, direction);\n            const sortFunction = makeMultiCriteriaSort(\n                newSortOrder\n                    .map(criteria => {\n                        const sortFcts = previousState.functions[criteria];\n                        const state = previousState.state[criteria];\n                        return sortFcts[state];\n                    })\n            );\n\n            dispatch(sortCriteriaOrderChanger(sortFunction, newSortOrder))\n        }\n    };\n};\n\nexport const filter_games_by_genre = (genres) => {\n    return (dispatch, getState) => {\n        dispatch(filterGamesByGenres(genres));\n    }\n}\n\nexport const filter_games_by_title = (title) => {\n    return (dispatch, getState) => {\n        dispatch(filterGamesByTitle(title));\n    }\n}\n\nexport const filter_games_by_platform = (platform) => {\n    return (dispatch, getState) => {\n        dispatch(filterGamesByPlatform(platform));\n    }\n}\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (games) => ({\n    type: FETCHING_OK,\n    games\n});\n\n// eslint-disable-next-line\nconst fetchingFailed = (error) => ({\n    type: FETCHING_FAILED,\n    error\n});\n\nconst sortingGames = (newSortersState, sortFunction) => ({\n    type: SORTING_GAMES,\n    newSortersState,\n    sortFunction\n});\n\nconst sortCriteriaOrderChanger = (sortFunction, keys) => ({\n    type: SORTING_ORDER_CHANGED,\n    sortFunction,\n    keys\n});\n\nconst filterGamesByGenres = (genres) => ({\n    type: FILTERING_BY_GENRE,\n    genres\n});\n\nconst filterGamesByTitle = (title) => ({\n    type: FILTERING_BY_TITLE,\n    title\n});\n\nconst filterGamesByPlatform = (platform) => ({\n    type: FILTERING_BY_PLATFORM,\n    platform\n});","import {\n    FETCHING_FAILED,\n    FETCHING_OK,\n    FETCHING_REQUESTED,\n    SORTING_GAMES,\n    SORTING_ORDER_CHANGED,\n    FILTERING_BY_GENRE,\n    FILTERING_BY_TITLE,\n    FILTERING_BY_PLATFORM\n} from \"../actions/games\"\n\n// search criterias\nconst sortByNameASC = (a, b) => (a.title < b.title) ? -1 : (a.title > b.title ? 1 : 0);\nconst sortByReleaseDateASC = (a, b) => {\n    let aa = a[\"releaseDate\"];\n    let bb = b[\"releaseDate\"];\n    return aa < bb ? -1 : (aa > bb ? 1 : 0);\n};\nconst sortByDurationASC = (a, b) => (a.durationAsInt < b.durationAsInt) ? -1 : (a.durationAsInt > b.durationAsInt ? 1 : 0);\n\nconst initialState = {\n    games: [],\n    error: null,\n    loading: false,\n    sorters: {\n        currentSortFunction: sortByNameASC,\n        state: {\n            \"name\": \"ASC\",\n            \"releaseDate\": \"ASC\",\n            \"duration\": \"ASC\"\n        },\n        keys: [\"name\", \"releaseDate\", \"duration\"],\n        functions: {\n            \"name\": {\n                \"ASC\": sortByNameASC,\n                \"DESC\": (a, b) => -sortByNameASC(a, b)\n            },\n            \"releaseDate\": {\n                \"ASC\": sortByReleaseDateASC,\n                \"DESC\": (a, b) => -sortByReleaseDateASC(a, b)\n            },\n            \"duration\": {\n                \"ASC\": sortByDurationASC,\n                \"DESC\": (a, b) => -sortByDurationASC(a, b)\n            }\n        }\n    },\n    filters: {\n        // Each one is also a key for translation\n        genres: [\n            \"Action\",\n            \"Adventure\",\n            \"Arcade\",\n            \"Board Games\",\n            \"Card\",\n            \"Casual\",\n            \"Educational\",\n            \"Family\",\n            \"Fighting\",\n            \"Indie\",\n            \"MMORPG\",\n            \"Platformer\",\n            \"Puzzle\",\n            \"RPG\",\n            \"Racing\",\n            \"Shooter\",\n            \"Simulation\",\n            \"Sports\",\n            \"Strategy\",\n            \"Misc\"\n        ],\n        platforms: [\n            \"PC\",\n            \"PS1\",\n            \"PS2\",\n            \"PS3\",\n            \"PSP\"\n        ],\n        selected_genres: [],\n        selected_title: \"\",\n        selected_platform: \"\"\n    }\n};\n\nexport default function games(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                games: action.games,\n                error: null\n            };\n        case FETCHING_FAILED:\n            return {\n                ...state,\n                loading: false,\n                games: [],\n                error: action.error\n            };\n        case SORTING_GAMES:\n            return {\n                ...state,\n                sorters: {\n                    ...state.sorters,\n                    currentSortFunction: action.sortFunction,\n                    state: {\n                        ...action.newSortersState\n                    }\n                }\n            };\n        case SORTING_ORDER_CHANGED:\n            return {\n                ...state,\n                sorters: {\n                    ...state.sorters,\n                    currentSortFunction: action.sortFunction,\n                    keys: action.keys\n                }\n            }\n        case FILTERING_BY_GENRE:\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    selected_genres: action.genres\n                }\n            }\n        case FILTERING_BY_TITLE:\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    selected_title: action.title\n                }\n            }\n        case FILTERING_BY_PLATFORM:\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    selected_platform: action.platform\n                }\n            }\n        default:\n            return state\n    }\n\n}","import gamesData from \"../data/scheduledGames.json\";\n\nexport const FETCHING_REQUESTED = \"PLANNING_REQUESTED\";\nexport const FETCHING_OK = \"PLANNING_FETCHING_OK\";\n\nexport const get_scheduled_games = () => {\n    return (dispatch, getState) => {\n\n        dispatch(fetchingStarted());\n        // prepare data\n        const planning = gamesData.map(scheduledGame => {\n            let releaseDate = scheduledGame[\"releaseDate\"];\n            const parts = releaseDate.split(\"/\");\n            return Object.assign({}, scheduledGame, { \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]) })\n        });\n        dispatch(fetchingFinished(planning));\n    };\n};\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (planning) => ({\n    type: FETCHING_OK,\n    planning\n});","import {\n    FETCHING_OK,\n    FETCHING_REQUESTED\n} from \"../actions/planning\"\n\nconst initialState = {\n    planning: [],\n    error: null,\n    loading: false\n};\n\nexport default function planning(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                planning: action.planning,\n                error: null\n            };\n        default:\n            return state\n    }\n\n}","import { combineReducers } from \"redux\"\n\nimport games from \"./games\";\nimport planning from \"./planning\"\n\nconst rootReducer = combineReducers({\n    games,\n    planning\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer  from '../reducers/index'\n\n/* eslint-disable no-underscore-dangle */\nexport default createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n/* eslint-enable */","import React from 'react';\nimport clsx from \"clsx\";\nimport {AppBar, CssBaseline, IconButton, Toolbar} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nexport default function Header(props) {\n\n    const {open, setOpen, classes} = props;\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    List\n} from '@material-ui/core';\n\nimport {\n    Link\n} from \"react-router-dom\"\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// icons\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nfunction ListItemLink(props) {\n    const { icon, primary, to } = props;\n    const { t } = useTranslation('common');\n    const entry_label = t(primary);\n\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef((linkProps, ref) => (\n                // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\n                // See https://github.com/ReactTraining/react-router/issues/6056\n                <Link to={to} {...linkProps} innerRef={ref} />\n            )),\n        [to],\n    );\n\n    return (\n        <Tooltip title={entry_label} aria-label={primary}>\n            <ListItem button component={renderLink}>\n                <ListItemIcon>{icon}</ListItemIcon>\n                <ListItemText primary={entry_label} />\n            </ListItem>\n        </Tooltip>\n    )\n\n}\n\nexport const ENTRIES = (\n    <List>\n        <ListItemLink\n            icon={<SportsEsportsIcon />}\n            primary={\"main.menuEntries.gamesKey\"}\n            to={\"/games\"}\n        />\n        <ListItemLink\n            icon={<ScheduleIcon />}\n            primary={\"main.menuEntries.planningKey\"}\n            to={\"/planning\"}\n        />\n    </List>\n);","\n// the menues entries\nimport {ENTRIES} from \"./MenuEntries\";\nimport {Divider, Drawer, IconButton} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport React from \"react\";\n\nexport default function Menu(props) {\n\n    const {container, setOpen, open, classes} = props;\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Drawer\n            container={container}\n            variant={\"permanent\"}\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n            open={open}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={handleDrawerClose}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            {ENTRIES}\n        </Drawer>\n    )\n}","import React from 'react'\nimport ReactPlayer from 'react-player/youtube'\nimport { useParams, useLocation } from 'react-router-dom'\n\nexport default function Player(props) {\n    const { id } = useParams();\n    const location = useLocation();\n    const YOUTUBE_BASE_PLAYLIST_LINK = \"https://www.youtube.com/playlist?list=\";\n    const YOUTUBE_BASE_VIDEO_LINK = \"https://www.youtube.com/watch?v=\";\n    const type = (location.pathname.includes(\"/playlist/\")) ? \"PLAYLIST\" : \"VIDEO\";\n    const url = (type === \"PLAYLIST\" ? YOUTUBE_BASE_PLAYLIST_LINK : YOUTUBE_BASE_VIDEO_LINK) + id;\n\n    return (\n        <ReactPlayer\n            controls={true}\n            url={url}\n            playing={true}\n            width='100%'\n            height='90vh'\n        />\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction CenteredBox(props) {\n    const {children} = props;\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{minHeight: '80vh'}}\n        >\n            {children}\n        </Grid>\n    )\n}\n\nCenteredBox.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CenteredBox;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nfunction CustomSnackbar(props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nCustomSnackbar.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nfunction CustomizedSnackbar(props) {\n    const [open, setOpen] = React.useState(true);\n    const {variant, message} = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <Snackbar\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n        >\n            <CustomSnackbar\n                onClose={handleClose}\n                variant={variant}\n                message={message}\n            />\n        </Snackbar>\n    )\n}\n\nCustomizedSnackbar.propTypes = {\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default CustomizedSnackbar;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Link} from 'react-router-dom';\n\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    localVideoPlayerButton : {\n        [theme.breakpoints.down('sm')]: {\n            display: \"none\"\n        }\n    },\n    gameCover: {\n        [theme.breakpoints.between('xs', 'md')]: {\n            height: 200\n        },\n        [theme.breakpoints.up('md')]: {\n            height: 150\n        },\n    },\n    gameControls : {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    }\n}));\n\nfunction CardEntry(props) {\n\n    const {game} = props;\n    const { t } = useTranslation('common');\n    const classes = useStyles(props);\n\n    return (\n        <Card>\n\n            <CardMedia\n                component=\"img\"\n                className={classes.gameCover}\n                image={game.imagePath}\n                title={game.title}\n            />\n\n            <CardActions className={classes.gameControls}>\n\n                <Tooltip title={t(\"gamesLibrary.actionsButton.watchHere\", { \"gameName\": game.title})} aria-label=\"Watch\" className={classes.localVideoPlayerButton}>\n                    <IconButton\n                        aria-label=\"play\"\n                        component={Link}\n                        to={\n                            game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId\n                        }\n                    >\n                        <PlayArrowIcon/>\n                    </IconButton>\n                </Tooltip>            \n\n                <Tooltip title={t(\"gamesLibrary.actionsButton.watchOnYt\", { \"gameName\": game.title})} aria-label=\"WatchOnYoutube\">\n                    <IconButton\n                        aria-label=\"share\"\n                        href={game.url}\n                    >\n                        <YouTubeIcon/>\n                    </IconButton>\n                </Tooltip>\n            </CardActions>\n\n        </Card>\n    );\n}\n\nexport default CardEntry;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Popover from '@material-ui/core/Popover';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\n// For sorting criteria reorder\n// Not used as it produces a bug\n//import ButtonGroup from '@material-ui/core/ButtonGroup';\n//import Switch from '@material-ui/core/Switch';\n\n// To display ASC / DESC\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\n// To move sort\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport {connect} from 'react-redux';\nimport {sort_games, change_sorting_order} from \"../../actions/games\";\n\n\n// Sort buttons of GamesGallery\nfunction GamesSorters(props) {\n    \n    // To handle criteria enabling (or disabling)\n    const handleSortChange = (event) => {\n        const field = event.target.name;\n        props.sort_games(field);\n    }\n\n    // To handle sort criteria \n    const handleSortOrderChange = (event) => {\n        // Warning : using IconButton, event.target doesn't work as expected\n        const metadata = event.currentTarget;\n        // fetch info\n        const field = metadata.name;\n        const type_of_sort_change = metadata.getAttribute(\"aria-label\");\n        const direction = (type_of_sort_change === \"upSorter\") ? \"up\" : \"down\";\n        props.change_sorting_order(field, direction);\n    }\n\n    const { state: sorters } = props;\n    const { t } = useTranslation('common');\n\n    // For Popover\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    const open = Boolean(anchorEl);\n    const id = open ? 'sort-popover' : undefined;\n\n    // map field to labels in translation file(s)\n    const field_labels = {\n        \"name\": \"gamesLibrary.sortLabels.byName\",\n        \"releaseDate\": \"gamesLibrary.sortLabels.byReleaseDate\",\n        \"duration\": \"gamesLibrary.sortLabels.byDuration\"\n    }\n    // labels for sort buttons (with condition)\n    const sort_button_conditions = {\n        \"upSorter\": (index) => index !== 0,\n        \"downSorter\": (index) => index !== sorters.keys.length -1,\n    }\n\n    return (\n        <>\n            <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                {t(\"gamesLibrary.sortButtonLabel\")}\n            </Button>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <FormControl component=\"fieldset\">\n                    <FormGroup>\n                        {\n                            sorters\n                                .keys\n                                .map( (criteria, index) => \n                                    <div\n                                        key={\"searchCriteria_\"+criteria}\n                                    >\n                                        <FormControlLabel\n                                            control={\n                                                <>\n                                                    <Checkbox \n                                                        checked={sorters.state[criteria] !== \"ASC\"}\n                                                        onChange={handleSortChange}\n                                                        name={criteria}\n                                                        checkedIcon={<ArrowDropUpIcon />}\n                                                        icon={<ArrowDropDownIcon />} \n                                                    />\n                                                </>\n                                            }\n                                            label={t(field_labels[criteria])}\n                                        />\n                                        {\n                                            // Object.keys as I need the following order : UP / DOWN\n                                            Object\n                                                .keys(sort_button_conditions)\n                                                .map(\n                                                    sort_key => {\n                                                        const condition_check = sort_button_conditions[sort_key];\n                                                        if (!condition_check(index)) {\n                                                            return null;\n                                                        } else {\n                                                            return (\n                                                                <IconButton \n                                                                    aria-label={sort_key} \n                                                                    name={criteria} \n                                                                    size=\"small\" \n                                                                    onClick={handleSortOrderChange}\n                                                                    key={criteria + \"_\"+ sort_key}\n                                                                >\n                                                                    {\n                                                                        (() => {\n                                                                            switch(sort_key){\n                                                                                case \"upSorter\":\n                                                                                    return <ArrowUpwardIcon fontSize=\"inherit\" />\n                                                                                case \"downSorter\":\n                                                                                    return <ArrowDownwardIcon fontSize=\"inherit\" />\n                                                                                default:\n                                                                                    return null;\n                                                                            }\n                                                                        })()\n                                                                    } \n                                                                </IconButton> \n                                                            )\n                                                        }\n                                                    }\n                                                )\n                                        }\n                                    </div>\n                                )\n                        }\n                    </FormGroup>\n                </FormControl>\n            </Popover>\n        </>\n    )\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    state: state.games.sorters,\n});\n\nconst mapDispatchToProps = {\n    sort_games,\n    change_sorting_order\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesSorters);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nimport {\n    filter_games_by_genre, \n    filter_games_by_title\n} from \"../../actions/games\";\n\n// Genres filter of GamesGallery\nfunction GenresSelect(props) {\n\n    const { filters } = props;\n    const { t } = useTranslation('common');\n\n    // Generate list of values for game genre\n    const genre_options = filters\n        .genres\n        .map(genre => ({\n            label: t(\"gamesLibrary.gamesGenres.\" + genre),\n            key: genre\n        }))\n        .sort( \n            (a, b) => (a.label < b.label) ? -1 : (a.label > b.label ? 1 : 0) \n        );\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                openOnFocus\n                filterSelectedOptions \n                id=\"select-game-genre\"\n                //style={{ width: 300 }}\n                limitTags={3}\n                options={genre_options}\n                getOptionLabel={(option) => option.label}\n                getOptionSelected={(option, value) => \n                    Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n                }\n                renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.genres\")} variant=\"outlined\" />}\n                onChange={(_event, value) => {\n                    const genres = (value) ? value : [];\n                    props.filterByGenre(genres);\n                }}\n                //value={filters.selected_genres}\n            />\n        </>\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    filters: state.games.filters,\n});\n\nconst mapDispatchToProps = {\n    filterByGenre: filter_games_by_genre, \n    filterByTitle: filter_games_by_title\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GenresSelect);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport {\n    filter_games_by_platform\n} from \"../../actions/games\";\n\n// icon \nconst iconsSVG = {\n    // WORKING\n    \"PS1\": \"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826.586.195 1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\",\n    \"PS2\": \"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513 0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292Z\",\n    \"PS3\": \"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375 0-.778-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\",\n    \"PSP\":  `\n        M 3.238281 9.3125 L 8.371094 9.3125 L 8.371094 10.832031 L 3.441406 10.832031 L 3.441406 12.152344 L 3.238281 12.152344 L 3.238281 10.632812 L 8.167969 10.632812 L 8.167969 9.511719 L 3.238281 9.511719 L 3.238281 9.3125 \n        M 14.777344 10.832031 L 14.777344 12.152344 L 14.578125 12.152344 L 14.578125 10.632812 L 19.503906 10.632812 L 19.503906 9.511719 L 14.578125 9.511719 L 14.578125 9.3125 L 19.707031 9.3125 L 19.707031 10.832031 L 14.777344 10.832031 \n        M 10.988281 9.3125 L 10.988281 11.953125 L 8.371094 11.953125 L 8.371094 12.152344 L 11.199219 12.152344 L 11.199219 9.511719 L 13.8125 9.511719 L 13.8125 9.3125 L 10.988281 9.3125\n    `,\n    \"PC\": `\n        M4.539062 7.515625 L 4.539062 13.886719 L 7.6875 13.886719 L 7.695312 11.738281 L 7.707031 9.597656 L 8.625 9.585938 L 9.542969 9.578125 L 10.546875 8.589844 L 11.550781 7.605469 L 11.550781 3.148438 L 10.527344 2.144531 L 9.507812 1.140625 L 4.539062 1.140625 Z \n        M8.28125 5.410156 L 8.289062 7.113281 L 8 7.101562 L 7.707031 7.089844 L 7.695312 5.40625 L 7.6875 3.722656 L 7.9375 3.714844 C 8.082031 3.707031 8.210938 3.703125 8.230469 3.703125 C 8.253906 3.707031 8.273438 4.308594 8.28125 5.410156 Z \n        M8.28125 5.410156 \n        M13.09375 2.148438 L 12.074219 3.148438 L 12.074219 11.917969 L 13.078125 12.902344 L 14.085938 13.886719 L 17.457031 13.886719 L 18.460938 12.898438 L 19.460938 11.917969 L 19.445312 8.417969 L 16.144531 8.417969 L 16.132812 9.878906 L 16.125 11.347656 L 15.601562 11.347656 L 15.601562 3.71875 L 16.125 3.71875 L 16.132812 4.925781 L 16.144531 6.132812 L 19.445312 6.132812 L 19.460938 3.148438 L 18.441406 2.148438 L 17.417969 1.140625 L 14.117188 1.140625 Z \n        M13.09375 2.148438\n    `\n}\n\nfunction PlatformSelect(props) {\n\n    const { filters } = props;\n    const { t } = useTranslation('common');\n\n    const options = filters\n        .platforms\n        .map(platform => ({\n            label: platform,\n            key: platform\n        }))\n\n    return (\n        <>\n            <Autocomplete\n                id=\"select-game-platform\"\n                openOnFocus\n                options={options}\n                getOptionLabel={(option) => option.label}\n                getOptionSelected={(option, value) => \n                    Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n                }\n                renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.platform\")} variant=\"outlined\" />}\n                renderOption={(option, _state) => (\n                    <>\n                        <SvgIcon titleAccess={option.label}>\n                            <path d={iconsSVG[option.key]} />\n                        </SvgIcon>\n                        {option.label}\n                    </>\n                )}\n                onChange={(_event, value) => {\n                    const platform = (value) ? value.key : \"\";\n                    props.filterByPlatform(platform);\n                }}\n                //value={filters.selected_genres}\n            />\n        </>\n    );\n}\n\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    filters: state.games.filters,\n});\n\nconst mapDispatchToProps = {\n    filterByPlatform: filter_games_by_platform, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PlatformSelect);","import React from \"react\";\nimport {connect} from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {get_games} from \"../../actions/games\";\n\n// Style\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fab from '@material-ui/core/Fab';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\n\n// Custom\n\nimport CenteredGrid from \"../Others/CenteredGrid\";\nimport SnackbarWrapper from \"../Others/CustomSnackbar\";\nimport CardEntry from \"./CardEntry\";\nimport GamesSorters from \"./GamesSorters\";\nimport GenresSelect from \"./GenresSelect\";\nimport PlatformSelect from \"./PlatformSelect\";\n\n// To check if platform match search critiria\nconst matches_platform_search = (platform) => (game) => game.platform === platform;\n\n// To check if title match search criteria (insensitive search)\nconst matches_title_search = (searchTitle) => (game) => game.title.search(new RegExp(searchTitle, 'i'));\n\n// To check if two arrays contains at least one element in common\nconst at_least_one_in_common = (requestedGenres) => (game) => requestedGenres.some(v => game.genres.indexOf(v.key) >= 0);\n\n// To dynamically change the number of items depending of browser\n\nconst useStyles = makeStyles((theme) => ({\n    gameEntry: {\n        [theme.breakpoints.only('xs')]: {\n            \"flex-basis\": \"calc((100% / 2) - 1%)\"\n        },\n        [theme.breakpoints.only('sm')]: {\n            \"flex-basis\": \"calc((100% / 4) - 1%)\"\n        },\n        [theme.breakpoints.only('md')]: {\n            \"flex-basis\": \"calc((100% / 8) - 1%)\"\n        },\n        [theme.breakpoints.up('lg')]: {\n            \"flex-basis\": \"calc((100% / 10) - 1%)\"\n        },\n    },\n    gamesCriteria: {\n        display: \"flex\",\n        [theme.breakpoints.down('sm')]: {\n            \"flex-direction\": \"column\",\n            \"align-items\": \"center\"\n        },\n        [theme.breakpoints.up('md')]: {\n            \"flex-direction\": \"row\",\n            \"justify-content\": \"flex-end\"\n        }\n    }\n}));    \n\n// The gallery component\nfunction GamesGallery(props) {\n\n    const {loading, error, data, filters, sortFunction} = props;\n    const classes = useStyles(props);\n\n    if (props.data.length === 0){\n        props.get_games();\n    }\n\n    if (loading) {\n        return <CenteredGrid>\n            <CircularProgress/>\n        </CenteredGrid>\n    }\n\n    if (error) {\n        return <>\n            <SnackbarWrapper\n                variant={\"error\"}\n                message={error}\n            />\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={() => {\n                        props.get_games();\n                    }}\n                >\n                    <AutorenewIcon/>\n                    Recharger\n                </Fab>\n            </CenteredGrid>\n        </>;\n    }\n\n    // prepare filter checks\n    let filter_conditions = [];\n    \n    // if provided platform filter\n    if (filters.platform.length !== 0) {\n        filter_conditions.push(matches_platform_search(filters.platform));\n    }\n\n    // if provided title filter\n    if (filters.title.length !== 0) {\n        filter_conditions.push(matches_title_search(filters.title));\n    }\n\n    // if provided genre filter\n    if (filters.genres.length !== 0) {\n        filter_conditions.push(at_least_one_in_common(filters.genres));\n    }\n\n    return (\n        <>\n            <Grid\n                container\n                className={classes.gamesCriteria}\n            >\n                <Grid item xs={12} md={2}>\n                    <PlatformSelect />\n                </Grid>\n                <Grid item xs={12} md={5}>\n                    <GenresSelect />\n                </Grid>\n                <Grid item xs={12} md={1}>\n                    <GamesSorters />\n                </Grid>\n            </Grid>\n    \n            <Grid\n                container\n                spacing={1}\n                style={\n                    {\n                        rowGap: \"15px\"\n                    }\n                }\n            >\n                {\n                    data\n                        .filter(game => filter_conditions.every(condition => condition(game)))\n                        .sort(sortFunction)\n                        .map(game => \n                                <Grid \n                                    key={game.playlistId ?? game.videoId} \n                                    item \n                                    className={classes.gameEntry}\n                                >\n                                    <CardEntry game={game}/>\n                                </Grid>\n                        )\n                }\n            </Grid>\n        </>\n    )\n    \n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.games.games,\n    filters: {\n        genres: state.games.filters.selected_genres,\n        title: state.games.filters.selected_title,\n        platform: state.games.filters.selected_platform,\n    },\n    sortFunction: state.games.sorters.currentSortFunction,\n    loading: state.games.loading,\n    error: state.games.error,\n});\n\nconst mapDispatchToProps = {\n    get_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesGallery);","import React from 'react';\nimport {connect} from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport {get_scheduled_games} from \"../../actions/planning\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CenteredGrid from \"../Others/CenteredGrid\";\n\n// Timeline\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\n// Style\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass Viewer extends React.Component {\n\n    componentDidMount() {\n        this.props.get_scheduled_games();\n    };\n\n    render() {\n\n        const {loading, data, t} = this.props;\n        const date_options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n\n        if (loading) {\n            return <CenteredGrid>\n                <CircularProgress/>\n            </CenteredGrid>\n        }\n\n        return (\n            //<CardsBox data={this.props.data}/>\n            <Timeline align=\"alternate\">\n                {\n                    data.map(scheduledGame => \n                        <TimelineItem\n                            key={scheduledGame[\"title\"]}\n                        >\n                            <TimelineOppositeContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {\n                                        scheduledGame[\"releaseDate\"]\n                                            .toLocaleDateString(undefined, date_options)\n                                    }\n                                </Typography>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineDot>\n                                    <Tooltip title={t(\"planning.states.\" + scheduledGame.status )} aria-label={scheduledGame.status}>\n                                        {\n                                            (() => {\n                                                switch(scheduledGame.status) {\n                                                    case \"RECORDED\":\n                                                        return <CheckCircleIcon />;\n                                                    case \"PENDING\":\n                                                        return <HourglassEmptyIcon />;\n                                                    default:\n                                                        return null;\n                                                }\n                                            })()\n                                        }\n                                    </Tooltip>\n                                </TimelineDot>\n                                <TimelineConnector />\n                            </TimelineSeparator>\n                            <TimelineContent>\n                                <Paper elevation={3} >\n                                    <Typography variant=\"h6\" component=\"h1\">\n                                        {scheduledGame[\"title\"]}\n                                    </Typography>\n                                </Paper>\n                            </TimelineContent>  \n                        </TimelineItem>\n                    )\n                }\n            </Timeline>\n        )\n\n    }\n\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.planning.planning,\n    loading: state.planning.loading,\n    error: state.planning.error,\n});\n\nconst mapDispatchToProps = {\n    get_scheduled_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTranslation(\"common\")(Viewer)\n);\n","import {makeStyles} from '@material-ui/core/styles';\n\n// A style sheet\nconst drawerWidth = 150;\nexport default makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n}));","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport Header from \"./Home/Header\";\nimport Menu from \"./Home/Menu\"\nimport Player from \"./YTPlayer/Player\";\nimport GamesGallery from \"./GamesView/GamesGallery\";\nimport Planning from \"./Planning/Planning\";\n\nimport Grid from '@material-ui/core/Grid';\nimport basicStyle from \"./Home/styles\"\n\nfunction Root({ store }) {\n\n    const classes = basicStyle();\n\n    // for drawser\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <Provider store={store}>\n                {/* https://github.com/facebook/create-react-app/issues/1765#issuecomment-327615099 */}\n                <Router basename={process.env.PUBLIC_URL} >\n                    <Header open={open} setOpen={setOpen} classes={classes}/>\n                    <Menu open={open} setOpen={setOpen} classes={classes}/>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Grid container>\n                            <Route path=\"/games\" component={GamesGallery} />\n                            <Route path=\"/playlist/:id\" component={Player} />\n                            <Route path=\"/video/:id\" component={Player} />\n                            <Route path=\"/planning\" component={Planning} />\n                        </Grid>\n                    </main>\n                </Router>\n            </Provider>\n        </div>\n    )\n}\n\nexport default Root","import React from 'react';\nimport { render } from 'react-dom'\n\n// For translation\nimport {I18nextProvider} from \"react-i18next\";\nimport i18next from \"i18next\";\n\nimport common_fr from \"./translations/fr/common.json\";\nimport common_en from \"./translations/en/common.json\";\n\n// Rest\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./components/Store\"\nimport Root from \"./components/Root\";\n\ni18next.init({\n    interpolation: { escapeValue: false },  // React already does escaping\n    lng: 'fr',                              // language to use\n    resources: {\n        fr: {\n            common: common_fr // 'common' is our custom namespace\n        },\n        en: {\n            common: common_en\n        }\n    }\n});\n\nrender(\n    <I18nextProvider i18n={i18next}>\n        <Root store={store} />\n    </I18nextProvider>, \n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}