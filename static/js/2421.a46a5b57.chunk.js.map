{"version":3,"file":"static/js/2421.a46a5b57.chunk.js","mappings":"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","sources":["components/GamesView/CardEntry.tsx","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js","components/GamesView/GamesSorters.tsx","services/sharedDefintion.tsx","components/GamesView/GenresSelect.tsx","components/GamesView/PlatformSelect.tsx","components/GamesView/TitleFilter.tsx","components/GamesView/GamesGalleryGrid.tsx","components/GamesView/PlatformIcons.tsx","components/Others/ReloadWrapper.tsx","../node_modules/react-use-infinite-loader/useInfiniteLoader.es5.js"],"sourcesContent":["import { Suspense, useState, lazy } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardActionArea from '@mui/material/CardActionArea';\n\nimport Image from '@jy95/material-ui-image';\nimport type { CardGame } from \"../../services/sharedDefintion\";\nconst CardDialog = lazy(() => import(\"./CardDialog\"));\n\nfunction CardEntry(props : {\n    game: CardGame;\n    [key: string | number | symbol] : any;\n}) {\n\n    // hooks\n    const navigate = useNavigate();\n\n    // props\n    const {game} = props;\n    const is_mobile_device = useMediaQuery( (theme : any) => theme.breakpoints.down('md'));\n\n    // state of context menu\n    const [contextMenuOpen,setContextMenuOpen] = useState(false);\n    \n    // consts\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.id : \"/video/\" + game.id;\n\n    function watchGame() {\n        if (is_mobile_device) {\n            window.location.href = gameURL;\n        } else {\n            navigate(local_path);\n        }\n    }\n\n    return (\n        <Card sx={{ position: \"relative\" }}>\n\n            <CardActionArea \n                onClick={watchGame}\n                onContextMenu={(event) => {\n                    event.preventDefault();\n                    setContextMenuOpen(true);\n                }}\n                sx={{ height: \"inherit\", zIndex: 1 }}\n            >\n                <CardMedia\n                    sx={{ zIndex: 1 }}\n                    title={gameTitle}\n                >\n                    <Image \n                        src={game.imagePath}\n                        srcSet={game.srcSet}\n                        sizes={game.sizes}\n                        alt={gameTitle}\n                        loading={\"lazy\"}\n                        disableSpinner={true}\n                    />\n                </CardMedia>\n\n            </CardActionArea>\n            <Suspense fallback={null}>\n                <CardDialog game={game} contextMenuState={[contextMenuOpen,setContextMenuOpen]} />\n            </Suspense>\n        </Card>\n    );\n}\n\nexport default CardEntry;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'filled' && _extends({\n    fontWeight: theme.typography.fontWeightMedium\n  }, theme.vars ? {\n    color: theme.vars.palette.Alert[`${color}FilledColor`],\n    backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n  } : {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n    color: theme.palette.getContrastText(theme.palette[color].main)\n  }));\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton;\n  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : CloseIcon;\n  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;\n  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(AlertCloseButton, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(AlertCloseIcon, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import { useState, Suspense, lazy } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n// To check what should happen when clicking on a game\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Button from '@mui/material/Button';\n\nimport { sortingGames } from \"../../services/gamesSlice\";\n// Hooks\nimport { useAppDispatch, useAppSelector } from \"../../hooks/typedRedux\";\n\n// TODO Idea For sorting criteria reorder\n//import Switch from '@mui/material/Switch';\n\n// Lazy\nconst Checkbox = lazy(() => import(\"@mui/material/Checkbox\"));\nconst Select = lazy(() => import(\"@mui/material/Select\"));\nconst NativeSelect = lazy(() => import(\"@mui/material/NativeSelect\"));\nconst MenuItem = lazy(() => import(\"@mui/material/MenuItem\"));\nconst InputLabel = lazy(() => import(\"@mui/material/InputLabel\"));\nconst FormControl = lazy(() => import(\"@mui/material/FormControl\"));\n\nconst List = lazy(() => import(\"@mui/material/List\"));\nconst ListItem = lazy(() => import(\"@mui/material/ListItem\"));\nconst ListItemText = lazy(() => import(\"@mui/material/ListItemText\"));\n\nconst Dialog = lazy(() => import(\"@mui/material/Dialog\"));\nconst DialogTitle = lazy(() => import(\"@mui/material/DialogTitle\"));\nconst DialogContent = lazy(() => import(\"@mui/material/DialogContent\"));\nconst DialogActions = lazy(() => import(\"@mui/material/DialogActions\"));\n\n// To display ASC / DESC\nconst ArrowDropUpIcon = lazy(() => import(\"@mui/icons-material/ArrowDropUp\"));\nconst ArrowDropDownIcon = lazy(() => import(\"@mui/icons-material/ArrowDropDown\"));\n\n// Sort buttons of GamesGallery\nfunction GamesSorters(_props : {[key: string | number | symbol] : any}) {\n\n    // hooks\n    const { t } = useTranslation('common');\n    const dispatch = useAppDispatch();\n\n    // state\n    const [ isDialogOpen, setDialogOpen ] = useState(false);\n    const sortState = useAppSelector((state) => state.games.sorters);\n    const isNative = useMediaQuery( (theme : any) => theme.breakpoints.down('md'));\n    let [ newSortState, setNewSortState ] = useState([...sortState]);\n\n    // map field to labels in translation file(s)\n    type sortLabels = 'name' | 'releaseDate' | 'duration';\n    const field_labels : {\n        [sortKey: string]: `gamesLibrary.sortLabels.${sortLabels}`\n    } = {\n        \"name\": \"gamesLibrary.sortLabels.name\",\n        \"releaseDate\": \"gamesLibrary.sortLabels.releaseDate\",\n        \"duration\": \"gamesLibrary.sortLabels.duration\"\n    }\n\n    // handle input change\n    const handleInputChange = (\n        params : {\n            index: number,\n            type: 'criteriaOrder' | 'changeFieldOrder'\n            field: 'name' | 'releaseDate' | 'duration'\n        }\n    ) => {\n        const index = params.index;\n        const modifiedState = [...newSortState];\n\n        switch (params.type) {\n            case \"criteriaOrder\":\n                const nextState = (modifiedState[index][1] === \"ASC\") ? \"DESC\" : \"ASC\";\n                modifiedState[index] = [ modifiedState[index][0], nextState]\n                setNewSortState(modifiedState);\n                break;\n\n            case \"changeFieldOrder\":\n                modifiedState[index] = [params.field, modifiedState[index][1]];\n                setNewSortState(modifiedState);\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    const CustomSelect = ({criteria, index} : {criteria: string, index: number}) => {\n        // shared props\n        const props = {\n            value: newSortState[index][0],\n            id: \"searchCriteria_\" + index,\n            label: t(\"gamesLibrary.sortForm.criteria\"),\n            onChange: (event : any) => handleInputChange({\n                    index,\n                    field: event.target.value.toString() as \"name\" | \"releaseDate\" | \"duration\", \n                    type: \"changeFieldOrder\"\n            })\n        }\n\n        if (isNative){\n            return <FormControl>\n                <InputLabel htmlFor={\"searchCriteria_\" + index}>\n                    {t(\"gamesLibrary.sortForm.criteria\")}\n                </InputLabel>\n                <NativeSelect\n                    {...props}\n                >\n                    {\n                        Object\n                            .entries(field_labels)\n                            .map( ([field, translationKey]) => \n                                <option value={field} key={field}>\n                                    {t(`${translationKey}` as const)}\n                                </option>\n                            )\n                    }\n                </NativeSelect>\n            </FormControl>\n        } else {\n            return <FormControl>\n                <InputLabel id={\"searchCriteriaLabel_\" + index}>\n                    {t(\"gamesLibrary.sortForm.criteria\")}\n                </InputLabel>\n                <Select\n                    {...props}\n                    labelId={\"searchCriteriaLabel_\" + index}\n                >\n                    {\n                        Object\n                            .entries(field_labels)\n                            .map( ([field, translationKey]) => \n                                <MenuItem value={field} key={field}>\n                                    {t(`${translationKey}` as const)}\n                                </MenuItem>\n                            )\n                    }\n                </Select>                \n            </FormControl>\n        }\n    }\n\n    return <>\n        <Button variant=\"contained\" onClick={() => setDialogOpen(true)}>\n            {t(\"gamesLibrary.sortButtonLabel\")}\n        </Button>\n        <Suspense fallback={null}>\n            <Dialog\n                //fullWidth\n                fullScreen={isNative}\n                open={isDialogOpen}\n                onClose={() => setDialogOpen(false)}\n                aria-labelledby=\"games-sorters-dialog\"\n            >\n                <DialogTitle id=\"games-sorters-dialog\">\n                    {t(\"gamesLibrary.sortForm.title\")}\n                </DialogTitle>\n                <DialogContent>\n                    <List>\n                        {\n                            newSortState.map( ([criteria, _], index) => <ListItem key={index}>\n                                <ListItemText primary={ t((index === 0) ? \"gamesLibrary.sortForm.firstSort\" : \"gamesLibrary.sortForm.nextSort\" ) }/>\n                                <CustomSelect \n                                    criteria={criteria}\n                                    index={index}\n                                    key={index}\n                                />\n                                <Checkbox\n                                    edge={'end'}\n                                    checked={newSortState[index][1] !== \"ASC\"}\n                                    onChange={\n                                        () => \n                                        handleInputChange({\n                                            index, \n                                            field: criteria, \n                                            type: \"criteriaOrder\"\n                                        })\n                                    }\n                                    checkedIcon={<ArrowDropUpIcon />}\n                                    icon={<ArrowDropDownIcon />} \n                                />\n                            </ListItem>)\n                        }\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={() => {\n                        // restore previous state\n                        setNewSortState(sortState);\n                        setDialogOpen(false);\n                    }}>\n                        {t(\"gamesLibrary.sortForm.cancelButton\")}\n                    </Button>\n                    {/* TODO replace that */}\n                    <Button autoFocus onClick={() => {\n                        setDialogOpen(false);\n                        dispatch(sortingGames(newSortState));\n                    }}>\n                        {t(\"gamesLibrary.sortForm.sortButton\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Suspense>\n    </>;\n}\n\nexport default GamesSorters;","export type Platform = \"PC\" | \"GBA\" | \"PSP\" | \"PS1\" | \"PS2\" | \"PS3\";\n\nexport const genre_list = [\n    \"Action\",\n    \"Adventure\",\n    \"Arcade\",\n    \"Board Games\",\n    \"Card\",\n    \"Casual\",\n    \"Educational\",\n    \"Family\",\n    \"Fighting\",\n    \"Indie\",\n    \"MMORPG\",\n    \"Platformer\",\n    \"Puzzle\",\n    \"RPG\",\n    \"Racing\",\n    \"Shooter\",\n    \"Simulation\",\n    \"Sports\",\n    \"Strategy\",\n    \"Misc\"\n] as const;\nexport type Genre = typeof genre_list[number];\n\n// structure used in data/games.json\ninterface BasicEntry {\n    /** @description Technical identifier for React - by default : playlistId | videoId */\n    id: string,\n    /** @description Title of the game, such as \"Beyond Good & Evil\" */\n    title: string;\n    /** @description Platform for that game */\n    platform: Platform;\n    /** @description Duration of the walkthrough (e.g. \"01:42:13\") */\n    duration?: string;\n    /** @description Genres of the game */\n    genres: Genre[];\n    /** @description When the game was released, such \"01/09/2005\" */\n    releaseDate: string;\n    /** @description When to display the game public, such as 20210412 (12/04/2021) */\n    availableAt?: number;\n    /** @description When to display the game public, such as 20210420 (20/04/2021) */\n    endAt?: number;\n    /** @description Name of the main cover file, such as \"cover.webp\" */\n    coverFile?: string;\n    /** @description Does game has responsive images to offer */\n    hasResponsiveImages?: boolean;\n}\n\nexport interface BasicVideo extends BasicEntry {\n    /** @description Video ID from Youtube - what you see after \"watch?v=\" */\n    videoId: string;\n}\n\nexport interface BasicPlaylist extends BasicEntry {\n    /** @description Playlist ID from Youtube, what you see after \"playlist?list=\" */\n    playlistId: string;\n}\n\n// structure used in data/games.json\nexport type BasicGame = BasicVideo | BasicPlaylist;\n\n// structure for Card entry\ninterface CardEntry {\n    /** @description Link to the main picture (for the card components) */\n    imagePath: string;\n    /** @description Responsive images */\n    srcSet?: string;\n    /** @description Responsive sizes */\n    sizes?: string;\n    /** @description Link to Youtube */\n    url: string;\n    /** @description Type of Youtube link */\n    url_type: 'PLAYLIST' | 'VIDEO';\n};\n\n// structured after parsing data/games.json\nexport interface EnhancedGame extends Omit<BasicGame, \"releaseDate\">, CardEntry {\n    /** @description When the game was released (Date(2020, 02, 02).getTime()) */\n    releaseDate: number;\n    /** @description \"duration\" into something useful for sorting */\n    durationAsInt: number;\n};\n\n// structure used for GameEntry and thus GameDialog\nexport interface CardGame extends Omit<BasicGame, \"releaseDate\" | \"genres\" | \"platform\">, CardEntry {};","import { useTranslation } from \"react-i18next\";\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\nimport { filteringByGenre, selectSelectedGenres } from \"../../services/gamesSlice\";\n// Hooks\nimport { useAppDispatch, useAppSelector } from \"../../hooks/typedRedux\";\n\nimport type { Genre as GenreValue } from \"../../services/sharedDefintion\";\n// Each one is also a key for translation\nimport { genre_list as GENRES } from \"../../services/sharedDefintion\";\n\n// Genres filter of GamesGallery\nfunction GenresSelect(_props : {[key: string | number | symbol] : any}) {\n\n    const dispatch = useAppDispatch();\n    const selectedGenres = useAppSelector(\n        (state) => selectSelectedGenres(state)\n    )\n    const { t } = useTranslation('common');\n\n    // Generate list of values for game genre\n    const genre_options : {\n        label: string,\n        key: GenreValue\n    }[] = GENRES\n        .map(genre => ({\n            label: t(`gamesLibrary.gamesGenres.${genre}` as const),\n            key: genre\n        }))\n        .sort( \n            (a, b) => (a.label < b.label) ? -1 : (a.label > b.label ? 1 : 0) \n        );\n\n    return <>\n        <Autocomplete\n            multiple\n            openOnFocus\n            filterSelectedOptions \n            id=\"select-game-genre\"\n            limitTags={3}\n            options={genre_options}\n            getOptionLabel={(option : any) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            value={selectedGenres.map(genre => ({\n                label: t(`gamesLibrary.gamesGenres.${genre as GenreValue}` as const),\n                key: genre\n            }))}\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.genres\") as string} />}\n            onChange={(_event, value) => {\n                dispatch(filteringByGenre(value.map(v => v.key)));\n            }}\n        />\n    </>;\n}\n\nexport default GenresSelect;","import { useTranslation } from \"react-i18next\";\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nimport { filterByPlatform, selectSelectedPlatform } from \"../../services/gamesSlice\";\n// Hooks\nimport { useAppDispatch, useAppSelector } from \"../../hooks/typedRedux\";\n\n// icons\nimport iconsSVG from \"./PlatformIcons\";\nimport type { Platform } from \"../../services/sharedDefintion\";\n\nconst PLATFORMS = [\n    \"GBA\",\n    \"PC\",\n    \"PS1\",\n    \"PS2\",\n    \"PS3\",\n    \"PSP\"\n];\n\nfunction PlatformSelect(_props : {[key: string | number | symbol] : any}) {\n\n    const { t } = useTranslation('common');\n    const dispatch = useAppDispatch();\n    const selectedPlatform = useAppSelector(\n        (state) => selectSelectedPlatform(state)\n    )\n\n    const options = PLATFORMS\n        .map(platform => ({\n            label: platform,\n            key: platform\n        }))\n\n    return <>\n        <Autocomplete\n            id=\"select-game-platform\"\n            openOnFocus\n            options={options}\n            getOptionLabel={(option: any) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.platform\")} />}\n            renderOption={(props, option, _state) => (\n                <li {...props} key={option.key}>\n                    <SvgIcon titleAccess={option.label}>\n                        {iconsSVG[option.key as Platform]}\n                    </SvgIcon>\n                    {option.label}\n                </li>\n            )}\n            onChange={(_event, value) => {\n                const platform = (value) ? (value as {[key: string]: any})?.key || value : \"\";\n                dispatch(filterByPlatform(platform));\n            }}\n            value={\n                selectedPlatform ? {\n                    key: selectedPlatform,\n                    label: selectedPlatform\n                } : null\n            }\n        />\n    </>;\n}\n\nexport default PlatformSelect;","import { useTranslation } from \"react-i18next\";\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\nimport {\n    filterByTitle,\n    selectSelectedTitle\n} \nfrom \"../../services/gamesSlice\";\n// Hooks\nimport { useAppDispatch, useAppSelector } from \"../../hooks/typedRedux\";\n\nfunction TitleFilter(_props : {[key: string | number | symbol] : any}) {\n\n    const { t } = useTranslation('common');\n    const dispatch = useAppDispatch();\n\n    // needed as this Autocomplete cannot have duplicate\n    const options = useAppSelector((state) => \n        [...new Set(state.games.games.map(game => game.title))]\n    );\n    const title : string  = useAppSelector(\n        (state) => selectSelectedTitle(state)\n    )\n\n    return <>\n        <Autocomplete\n            id=\"search-game-title\"\n            freeSolo\n            options={options}\n            value={title}\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.title\")} />}\n            onInputChange={(_event, value) => {\n                dispatch(filterByTitle(value));\n            }}\n        />\n    </>;\n\n}\n\nexport default TitleFilter;","import { useEffect, useCallback } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport { shallowEqual } from 'react-redux';\nimport useInfiniteLoader from 'react-use-infinite-loader';\nimport { useTranslation } from \"react-i18next\";\nimport Alert from '@mui/material/Alert';\n\n// Hooks\nimport { useAppDispatch, useAppSelector } from \"../../hooks/typedRedux\";\n\n// Style\nimport Grid from \"@mui/material/Grid\";\n\n// Custom\nimport ReloadWrapper from \"../Others/ReloadWrapper\";\nimport CardEntry from \"./CardEntry\";\nimport GamesSorters from \"./GamesSorters\";\nimport GenresSelect from \"./GenresSelect\";\nimport PlatformSelect from \"./PlatformSelect\";\nimport TitleFilter from \"./TitleFilter\";\n\n// Redux\nimport { \n    fetchGames,\n    scrollingFetching,\n    selectCurrentGames\n}\nfrom \"../../services/gamesSlice\";\nimport type { EnhancedGame } from \"../../services/sharedDefintion\";\n\nconst PREFIX = 'GamesGalleryGrid';\n\nconst classes = {\n    gamesCriteria: `${PREFIX}-gamesCriteria`,\n    loaderRef: `${PREFIX}-loaderRef`\n};\n\nconst StyledGamesGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    // inspired by the settings https://www.youtube.com/gaming uses ;)\n    [`& .${classes.gamesCriteria}`]: {\n        display: \"flex\",\n        [theme.breakpoints.down('md')]: {\n            flexDirection: \"column\",\n            rowGap: \"8px\"\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n        }\n    },\n    [`& .${classes.loaderRef}`]: {\n        width: \"1px\",\n        height: \"1px\",\n        position: \"absolute\"\n    }\n}));\n\n// The gallery component\nfunction GamesGalleryGrid(_props : {[key: string | number | symbol] : any}) {\n\n    const { t } = useTranslation('common');\n    const dispatch = useAppDispatch();\n\n    // Current displayed games\n    const currentGames = useAppSelector(\n        (state) => selectCurrentGames(state)\n    );\n\n    const {\n        loading,\n        error,\n        currentItemCount,\n        totalItems,\n        activeFilters,\n        sorters,\n        initialLoad,\n        scrollLoading\n    } = useAppSelector((state) => state.games, shallowEqual);\n\n    const canLoadMore = (currentItemCount <= totalItems);\n\n    // on mount, load data (only once)\n    useEffect(() => {\n        dispatch(fetchGames({currentFilters: activeFilters, sortStates: sorters}))\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps \n        []\n    );\n\n    // render row\n    const renderRow = (game : EnhancedGame) =>\n        <Grid \n            key={game.id}\n            item\n            xs={6}\n            md={4}\n            lg={1.5}\n        >\n            <CardEntry game={game}/>\n    </Grid>;\n\n    const loadMoreGames = useCallback( () => {\n        dispatch(scrollingFetching());\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps \n        []\n    );\n\n    const { loaderRef } = useInfiniteLoader({\n        loadMore: loadMoreGames,\n        canLoadMore,\n        initialise: !initialLoad,\n        debug: false,\n    });\n\n    return (\n        <ReloadWrapper \n            loading={loading}\n            error={error}\n            reloadFct={() => {dispatch(fetchGames({currentFilters: activeFilters, sortStates: sorters}))}}\n            component={\n                <StyledGamesGallery>\n                    <Grid\n                        container\n                        className={classes.gamesCriteria}\n                    >\n                        <Grid item xs={12} md={1}>\n                            <GamesSorters />\n                        </Grid>\n                        <Grid item xs={12} md={2}>\n                            <PlatformSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <GenresSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TitleFilter />\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        container\n                        spacing={1}\n                        style={\n                            {\n                                rowGap: \"15px\"\n                            }\n                        }\n                    >\n                        {\n                            currentGames\n                                // render row\n                                .map(renderRow)\n                        }\n                    </Grid>\n                    {!initialLoad && <div ref={loaderRef as any} className={classes.loaderRef} />}\n                    {scrollLoading && <Alert severity=\"info\">{t(\"common.loading\")}</Alert>}\n                    {!canLoadMore && <Alert severity=\"info\">{t(\"common.noResults\")}</Alert>}\n                </StyledGamesGallery>\n            }\n        />\n    );\n}\n\nexport default GamesGalleryGrid;","const platformIcons = {\n    \"PS1\": <path d=\"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826s1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\"/>,\n    \"PS2\": <path d=\"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513.0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292z\"/>,\n    \"PS3\": <path d=\"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375s-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\"/>,\n    \"PSP\":  <>\n        <path d=\"M3.238 9.313h5.133v1.52h-4.93v1.32h-.203v-1.52h4.93V9.512h-4.93v-.199m11.539 1.519v1.32h-.199v-1.52h4.926v-1.12h-4.926v-.199h5.129v1.52h-4.93\"/>\n        <path d=\"M10.988 9.313v2.641H8.371v.199h2.828V9.512h2.613v-.199h-2.824\"/>\n    </>,\n    \"PC\": <>\n        <path d=\"M4.539 7.516v6.371h3.148l.008-2.148.012-2.141.918-.012.918-.008 1.004-.988 1.004-.984V3.148l-1.023-1.004-1.02-1.004H4.539z\"/>\n        <path d=\"M8.281 5.41l.008 1.703L8 7.102l-.293-.012-.012-1.684-.008-1.684.25-.008.293-.012c.023.004.043.605.051 1.707zm4.813-3.262l-1.02 1v8.77l1.004.984 1.008.984h3.371l1.004-.988 1-.98-.016-3.5h-3.301l-.012 1.461-.008 1.469h-.523V3.719h.523l.008 1.207.012 1.207h3.301l.016-2.984-1.02-1-1.023-1.008h-3.301z\"/>\n    </>,\n    \"GBA\": <path d=\"M12 19.199c-2.543 0-4.32-.238-5.281-.77-.191-.094-.336-.141-.43-.141-2.879-.098-4.32-1.105-4.898-1.73-.285-.289-.43-.621-.43-1.055 0-2.113.094-6 .48-7.488.191-.766.91-1.297 1.727-1.297s2.063-.77 2.883-1.488c.379-.285.813-.43 1.246-.43h9.453c.48 0 .961.191 1.25.48.625.574 1.969 1.438 2.832 1.438.816 0 1.535.531 1.727 1.297.336 1.297.48 4.656.48 7.441 0 .434-.145.766-.43 1.055-.625.625-2.02 1.633-4.898 1.727-.191 0-.336.051-.383.098-.863.574-2.641.863-5.328.863zm-5.711-1.871c.238 0 .527.098.863.242.48.238 1.68.668 4.848.668 3.359 0 4.465-.477 4.75-.668.242-.195.578-.289.961-.289 2.594-.098 3.84-1.059 4.223-1.441.098-.098.145-.238.145-.383 0-2.641-.141-6-.477-7.152-.098-.336-.434-.574-.77-.574C19.535 7.73 18 6.625 17.328 6c-.191-.191-.434-.191-.578-.191H7.297c-.191 0-.434.098-.625.242-.285.238-2.016 1.629-3.504 1.629-.383 0-.672.242-.766.578-.336 1.199-.48 4.559-.48 7.246 0 .145.047.289.145.387.383.379 1.629 1.34 4.223 1.438zM3.84 8.641h.961v2.879H3.84zm-.961 1.918v-.957h2.883v.957zm17.52-1.918a.74.74 0 0 1 .723.719.74.74 0 0 1-.723.719.74.74 0 0 1-.719-.719.74.74 0 0 1 .719-.719zm-1.437 1.438a.74.74 0 0 1 .719.723.74.74 0 0 1-.719.719.74.74 0 0 1-.723-.719.74.74 0 0 1 .723-.723zm-13.25 3.793c.098-.238 0-.527-.191-.621l-1.441-.723c-.238-.098-.527 0-.621.191-.098.242 0 .531.191.625l1.441.719c.047.047.141.047.191.047.191.051.336-.043.43-.238zm0 1.922c.098-.242 0-.527-.191-.625l-1.441-.719c-.238-.098-.527 0-.621.191-.098.238 0 .527.191.625l1.441.719c.047.047.141.047.191.047.191.047.336-.047.43-.238zm10.129.047H8.16c-.574 0-.961-.383-.961-.961V8.641c0-.578.387-.961.961-.961h7.68c.574 0 .961.383.961.961v6.238c0 .578-.387.961-.961.961zM8.16 8.641v6.238h7.68V8.641zm10.414 5.23l1.922-.961c.094-.047.145-.191.094-.336-.047-.094-.191-.145-.336-.094l-1.918.961c-.098.047-.145.191-.098.336.051.094.145.145.191.145.098 0 .145 0 .145-.051zm0 .961l1.922-.961c.094-.047.145-.191.094-.336-.047-.094-.191-.145-.336-.094l-1.918.957c-.098.051-.145.191-.098.336.051.098.145.145.191.145.098 0 .145 0 .145-.047zm0 .961l1.922-.961c.094-.047.145-.191.094-.336-.047-.098-.191-.145-.336-.098l-1.918.961c-.098.051-.145.191-.098.336.051.098.145.145.191.145.098 0 .145 0 .145-.047zm0 0\"/>\n}\nexport default platformIcons;","import { Suspense, lazy } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// Icons\nconst CircularProgress = lazy(() => import(\"@mui/material/CircularProgress\"));\nconst Fab = lazy(() => import(\"@mui/material/Fab\"));\nconst AutorenewIcon = lazy(() => import(\"@mui/icons-material/Autorenew\"));\n\n// Custom\nconst CenteredGrid = lazy(() => import(\"./CenteredGrid\"));\n\n// The reload wrapper component\nfunction ReloadWrapper(props : {\n    loading: boolean;\n    error: Error | null | undefined;\n    reloadFct: () => any;\n    component: JSX.Element;\n    [key: string | number | symbol] : any\n}) {\n\n    const {loading, error, component, reloadFct} = props;\n    const { t } = useTranslation('common');\n\n    return <Suspense fallback={null}>\n        {loading && <CenteredGrid><CircularProgress/></CenteredGrid>}\n        {error && <>\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>}\n        { ( !loading && !error) && <>{component}</> }\n    </Suspense>\n}\n\nexport default ReloadWrapper;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useInfiniteLoader;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction useInfiniteLoader(_ref) {\n  var _ref$startFromPage = _ref.startFromPage,\n      startFromPage = _ref$startFromPage === void 0 ? 0 : _ref$startFromPage,\n      loadMore = _ref.loadMore,\n      _ref$canLoadMore = _ref.canLoadMore,\n      canLoadMore = _ref$canLoadMore === void 0 ? false : _ref$canLoadMore,\n      _ref$initialise = _ref.initialise,\n      initialise = _ref$initialise === void 0 ? true : _ref$initialise,\n      _ref$rootMargin = _ref.rootMargin,\n      rootMargin = _ref$rootMargin === void 0 ? \"100px 0px 0px 0px\" : _ref$rootMargin,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 0 : _ref$threshold,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? false : _ref$debug;\n\n  function log() {\n    if (debug) {\n      var _console;\n\n      // eslint-disable-next-line no-console\n      (_console = console).log.apply(_console, arguments);\n    }\n  }\n\n  if (typeof loadMore !== \"function\") {\n    throw new TypeError(\"useInfiniteLoader: loadMore must be a function and is required\");\n  }\n\n  var loaderRef = _react.default.useRef(null);\n\n  var page = _react.default.useRef(startFromPage);\n\n  var observer = _react.default.useRef(null);\n\n  function resetPage() {\n    page.current = startFromPage;\n  }\n\n  _react.default.useEffect(function () {\n    if (!observer.current && initialise === true) {\n      log(\"Initialised\");\n      observer.current = new IntersectionObserver(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 1),\n            target = _ref3[0];\n\n        log(\"Observer invoked\");\n\n        if (target.intersectionRatio <= 0) {\n          log(\"Intersection ratio not met, bailing\");\n          return;\n        }\n\n        if (canLoadMore === false) {\n          log(\"Can load more is false, bailing\");\n          return;\n        }\n\n        log(\"Loading more...\");\n        loadMore(page.current);\n        page.current += 1;\n      }, {\n        rootMargin: rootMargin,\n        threshold: threshold\n      });\n\n      if (loaderRef.current) {\n        log(\"Observing loader ref\");\n        observer.current.observe(loaderRef.current);\n      }\n    }\n\n    return function () {\n      if (observer && observer.current) {\n        observer.current.disconnect();\n        observer.current = undefined;\n      }\n    };\n  }, [canLoadMore, loadMore, page, initialise]);\n\n  return {\n    loaderRef: loaderRef,\n    page: page.current,\n    resetPage: resetPage\n  };\n}\n"],"names":["CardDialog","lazy","props","navigate","useNavigate","game","is_mobile_device","useMediaQuery","theme","breakpoints","down","_useState","useState","_useState2","_slicedToArray","contextMenuOpen","setContextMenuOpen","gameTitle","title","gameURL","url","local_path","url_type","id","_jsxs","Card","sx","position","children","_jsx","CardActionArea","onClick","window","location","href","onContextMenu","event","preventDefault","height","zIndex","CardMedia","Image","src","imagePath","srcSet","sizes","alt","loading","disableSpinner","Suspense","fallback","contextMenuState","getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createSvgIcon","d","_excluded","AlertRoot","styled","Paper","name","overridesResolver","styles","ownerState","root","variant","concat","capitalize","color","severity","_ref3","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","backgroundColor","display","padding","_defineProperty","vars","Alert","light","alertClasses","icon","main","border","fontWeight","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","minWidth","overflow","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","_ref","_slots$closeButton","_ref2","_slots$closeIcon","_slotProps$closeButto","_slotProps$closeIcon","useThemeProps","className","_props$closeText","closeText","_props$components","components","_props$componentsProp","componentsProps","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","_props$slotProps","slotProps","_props$slots","slots","_props$variant","other","_objectWithoutPropertiesLoose","classes","composeClasses","useUtilityClasses","AlertCloseButton","closeButton","CloseButton","IconButton","AlertCloseIcon","closeIcon","CloseIcon","closeButtonProps","closeIconProps","elevation","clsx","size","Checkbox","Select","NativeSelect","MenuItem","InputLabel","FormControl","List","ListItem","ListItemText","Dialog","DialogTitle","DialogContent","DialogActions","ArrowDropUpIcon","ArrowDropDownIcon","_props","t","useTranslation","dispatch","useAppDispatch","isDialogOpen","setDialogOpen","sortState","useAppSelector","state","games","sorters","isNative","_useState3","_toConsumableArray","_useState4","newSortState","setNewSortState","field_labels","handleInputChange","params","index","modifiedState","type","nextState","field","CustomSelect","criteria","value","label","onChange","target","toString","htmlFor","_objectSpread","Object","entries","map","translationKey","labelId","_ref4","_ref5","_Fragment","Button","fullScreen","open","_ref6","_ref7","primary","edge","checked","checkedIcon","autoFocus","sortingGames","genre_list","selectedGenres","selectSelectedGenres","genre_options","GENRES","genre","key","sort","a","b","Autocomplete","multiple","openOnFocus","filterSelectedOptions","limitTags","options","getOptionLabel","option","isOptionEqualToValue","Array","isArray","some","v","renderInput","TextField","_event","filteringByGenre","PLATFORMS","selectedPlatform","selectSelectedPlatform","platform","renderOption","_state","_createElement","SvgIcon","titleAccess","iconsSVG","filterByPlatform","Set","selectSelectedTitle","freeSolo","onInputChange","filterByTitle","PREFIX","gamesCriteria","loaderRef","StyledGamesGallery","_$concat","flexDirection","rowGap","up","justifyContent","width","currentGames","selectCurrentGames","_useAppSelector","shallowEqual","currentItemCount","totalItems","activeFilters","initialLoad","scrollLoading","canLoadMore","useEffect","fetchGames","currentFilters","sortStates","loadMoreGames","useCallback","scrollingFetching","useInfiniteLoader","loadMore","initialise","debug","ReloadWrapper","reloadFct","component","Grid","container","item","xs","md","GamesSorters","PlatformSelect","GenresSelect","TitleFilter","spacing","style","lg","CardEntry","platformIcons","CircularProgress","Fab","AutorenewIcon","CenteredGrid","exports","_ref$startFromPage","startFromPage","_ref$canLoadMore","_ref$initialise","_ref$rootMargin","rootMargin","_ref$threshold","threshold","_ref$debug","log","_console","console","apply","arguments","TypeError","_react","default","useRef","page","observer","current","IntersectionObserver","arr","i","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","call","slice","constructor","from","test","_unsupportedIterableToArray","_nonIterableRest","intersectionRatio","observe","disconnect","resetPage","obj","require","__esModule","len","arr2"],"sourceRoot":""}