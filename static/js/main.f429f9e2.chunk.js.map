{"version":3,"sources":["serviceWorker.js","actions/games.js","reducers/games.js","actions/planning.js","reducers/planning.js","actions/themeColor.js","reducers/themeColor.js","actions/tests.js","reducers/tests.js","actions/latestVideos.js","reducers/latestVideos.js","actions/miscellaneous.js","reducers/miscellaneous.js","reducers/index.js","components/Store.js","components/Home/HeaderLanguages.js","components/Home/Header.js","components/Home/Drawer.js","components/Home/Menu.js","components/YTPlayer/Player.js","components/Others/CenteredGrid.js","components/Others/CustomSnackbar.js","components/Others/ReloadWrapper.js","components/GamesView/CardDialog.js","components/GamesView/CardEntry.js","components/GamesView/GamesSorters.js","components/GamesView/GenresSelect.js","components/GamesView/PlatformIcons.js","components/GamesView/PlatformSelect.js","components/GamesView/TitleFilter.js","components/GamesView/GamesGallery.js","components/Planning/PlanningColumns.js","components/Planning/PlanningFrenchLabels.js","components/Planning/Planning.js","components/Tests/TestsGallery.js","components/LatestVideos/LatestVideosGallery.js","components/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","FETCHING_REQUESTED","FETCHING_OK","FETCHING_FAILED","SORTING_GAMES","SORTING_ORDER_CHANGED","FILTERING_BY_GENRE","FILTERING_BY_TITLE","FILTERING_BY_PLATFORM","makeMultiCriteriaSort","criteria","a","b","i","length","comparatorResult","DURATION_REGEX","filter_games_by_title","title","dispatch","getState","filterGamesByTitle","fetchingStarted","type","fetchingFinished","games","sortingGames","newSortersState","sortFunction","sortCriteriaOrderChanger","keys","filterGamesByGenres","genres","filterGamesByPlatform","platform","sortByNameASC","Intl","Collator","compare","sortByReleaseDateASC","aa","bb","sortByDurationASC","durationAsInt","initialState","error","loading","sorters","currentSortFunction","state","functions","filters","platforms","selected_genres","selected_title","selected_platform","planning","SET_THEME_COLOR","setThemeColor","color","mode","manualSetThemeColor","autoSetThemeColor","systemColor","currentColor","CACHED_RESPONSE","parser","require","items","latestFetchedDate","fetchingCached","fetchingFailed","undefined","mapRSSItemToGame","map","item","videoId","link","replace","SET_DRAWER_OPEN","setDrawerOpen","drawerOpen","_","setDrawer","rootReducer","combineReducers","action","tests","latestVideos","themeColor","miscellaneous","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","headerLanguages","id","gradientUnits","x1","y1","x2","y2","gradientTransform","offset","stopColor","stopOpacity","stroke","fillRule","d","fill","fillOpacity","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","mapDispatchToProps","connect","isDark","props","useTranslation","t","i18n","Fragment","CssBaseline","position","Toolbar","IconButton","aria-label","onClick","edge","sx","marginRight","display","size","Switch","checked","onChange","event","target","checkedIcon","icon","style","yellow","flexGrow","Object","languages_with_icons","language","Tooltip","changeLanguage","SvgIcon","DrawerHeader","alignItems","justifyContent","padding","spacing","mixins","toolbar","openedMixin","closedMixin","overflowX","breakpoints","up","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","Main","easeOut","ListItemLink","primary","to","entry_label","matchUrl","useRouteMatch","renderLink","React","useMemo","forwardRef","linkProps","ref","innerRef","ListItem","button","component","selected","ListItemIcon","ListItemText","ENTRIES","container","variant","Divider","List","entry","key","Player","useParams","url","useLocation","pathname","includes","controls","playing","height","CenteredBox","children","Grid","direction","minHeight","PREFIX","classes","success","info","warning","iconVariant","message","StyledSnackbar","Snackbar","backgroundColor","green","palette","dark","main","amber","fontSize","opacity","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","CustomSnackbar","className","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","CustomizedSnackbar","useState","setOpen","handleClose","reason","autoHideDuration","_state","reloadFct","CenteredGrid","CircularProgress","Fab","CardDialog","history","useHistory","useTheme","fullScreen","useMediaQuery","down","enqueueSnackbar","useSnackbar","game","contextMenuState","contextMenuOpen","setContextMenuOpen","gameTitle","gameURL","local_path","url_type","playlistId","dialog_options","push","href","navigator","clipboard","writeText","clipboardData","setData","encodeURIComponent","Dialog","aria-labelledby","DialogTitle","DialogContent","option","divider","text","DialogActions","Button","autoFocus","gameRoot","gameCover","MuiCardActionArea","StyledCard","Card","CardEntry","is_mobile_device","label_for_game","CardActionArea","onContextMenu","preventDefault","root","CardMedia","src","imagePath","sort_games","field","previousState","newStates","newValue","change_sorting_order","currentIndex","indexOf","newSortOrder","arr","elementIndex","firstElement","secondElement","firstSliceIndex","secondSliceIndex","slice","swapSiblingElements","handleSortChange","name","handleSortOrderChange","metadata","currentTarget","getAttribute","anchorEl","setAnchorEl","field_labels","sort_button_conditions","index","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","FormGroup","FormControlLabel","control","Checkbox","label","sort_key","condition_check","filterByGenre","filterByTitle","genre_options","genre","sort","Autocomplete","multiple","openOnFocus","filterSelectedOptions","limitTags","options","getOptionLabel","isOptionEqualToValue","value","Array","isArray","some","v","renderInput","params","TextField","_event","platformIcons","filterByPlatform","renderOption","titleAccess","iconsSVG","Set","freeSolo","onInputChange","gameEntry","gamesCriteria","StyledGamesGallery","only","flexBasis","flexDirection","rowGap","get_games","currentDate","Date","integerDate","getFullYear","getMonth","getDate","reduce","acc","cur","gamesData","filter","hasOwnProperty","availableAt","parts","releaseDate","split","base_url","assign","process","coversRootPath","coverFile","defaultCoverFile","parseInt","data","useEffect","searchTitle","requestedGenres","filter_conditions","search","RegExp","currentGames","every","condition","xs","md","planningColumns","date_options","headerName","headerAlign","renderCell","toLocaleDateString","frenchLabels","rootGridLabel","noRowsLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerTotalRows","footerPaginationRowsPerPage","toolbarExport","toolbarExportLabel","toolbarExportCSV","get_scheduled_games","elem","min","max","endAt","scheduledGame","columns","getTableColumns","weekday","year","month","day","customLocaleText","startsWith","customTranslation","rows","disableSelectionOnClick","disableColumnFilter","autoHeight","localeText","components","GridToolbar","StyledTestsGallery","get_tests","visible","StyledLatestVideosGallery","get_latest_videos","previousItems","previousFetchedDate","dateNow","d1","d2","Math","abs","round","getTime","pred","parseURL","PROXY_URL","then","feed","catch","materialUI_languages","fr","frFR","en","enUS","Component","themeSettings","openMenu","store","maxSnack","Box","basename","exact","path","render","GamesGallery","Planning","TestsGallery","LatestVideosGallery","currentLanguage","createTheme","ThemeProvider","resources","common","i18next","use","detector","initReactI18next","init","interpolation","escapeValue","fallbackLng","supportedLngs","StyledEngineProvider","injectFirst","I18nextProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f429f9e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import gamesData from \"../data/games.json\";\n\nexport const FETCHING_REQUESTED = \"GAMES_REQUESTED\";\nexport const FETCHING_OK = \"GAMES_FETCHING_OK\";\nexport const FETCHING_FAILED = \"GAMES_FETCHING_FAILED\";\nexport const SORTING_GAMES = \"SORTING_GAMES\";\nexport const SORTING_ORDER_CHANGED = \"SORTING_ORDER_CHANGED\";\nexport const FILTERING_BY_GENRE = \"FILTERING_BY_GENRE\";\nexport const FILTERING_BY_TITLE = \"FILTERING_BY_TITLE\";\nexport const FILTERING_BY_PLATFORM = \"FILTERING_BY_PLATFORM\";\n\n// Inspired by https://stackoverflow.com/a/60068169/6149867\nfunction makeMultiCriteriaSort(criteria) {\n    return (a, b) => {\n        for(let i = 0; i < criteria.length; i++) {\n            const comparatorResult = criteria[i](a, b);\n            if (comparatorResult !== 0) {\n                return comparatorResult;\n            }\n        }\n        return 0;\n    }\n}\n\n// Swap element position in array with its sibling (left or right)\n// Exception cases are handled in change_sorting_order\nfunction swapSiblingElements(arr, elementIndex , direction) {\n    // elements to swap\n    const firstElement = (direction === \"up\") ? arr[elementIndex]: arr[elementIndex + 1];\n    const secondElement = (direction === \"up\") ? arr[elementIndex - 1] : arr[elementIndex];\n    // indexes for slice call\n    const firstSliceIndex = (direction === \"up\") ? elementIndex - 1 : elementIndex;\n    const secondSliceIndex = elementIndex + ( (direction === \"up\") ? 1 : 2);\n    // return new array\n    return [ \n        ...arr.slice(0, firstSliceIndex), \n        firstElement, \n        secondElement, \n        ...arr.slice(secondSliceIndex) \n    ];\n }\n// Regex for duration\nconst DURATION_REGEX = /(\\d+):(\\d+):(\\d+)/; \n\n// param à la place du () du genre ({title, password})\nexport const get_games = () => {\n    return (dispatch, getState) => {\n        const {\n            games: {\n                games: previousFetchedGames\n            }\n        } = getState();\n\n        if (previousFetchedGames.length === 0) {\n            dispatch(fetchingStarted());\n\n            // current date as integer (quicker comparaison)\n            const currentDate = new Date();\n            const integerDate = [\n                currentDate.getFullYear() * 10000,\n                (currentDate.getMonth() + 1) * 100,\n                currentDate.getDate()\n            ].reduce((acc, cur) => acc + cur, 0);\n\n            // Build the object for component\n            let games = gamesData\n                .games\n                // hide not yet public games on channel\n                .filter(game => !game.hasOwnProperty(\"availableAt\") || game.availableAt <= integerDate)\n                .map(game => {\n                    const parts = game.releaseDate.split(\"/\");\n                    const id = game.playlistId ?? game.videoId;\n                    const base_url = (\n                        (game.playlistId) \n                            ? \"https://www.youtube.com/playlist?list=\" \n                            :  \"https://www.youtube.com/watch?v=\"\n                    ) + id ;\n                    const url_type = (game.playlistId) ? \"PLAYLIST\" : \"VIDEO\";\n                    return Object.assign({}, game, {\n                        \"imagePath\": process.env.PUBLIC_URL + gamesData.coversRootPath + id + \"/\" + (game.coverFile ?? gamesData.defaultCoverFile),\n                        \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]),\n                        \"url\": base_url,\n                        \"url_type\": url_type,\n                        \"durationAsInt\": parseInt((game.duration || \"00:00:00\").replace(DURATION_REGEX, \"$1$2$3\"))\n                    });\n                });\n\n            dispatch(fetchingFinished(games));\n        }\n\n    };\n};\n\n// Given field is the one that changed\nexport const sort_games = (field) => {\n    return (dispatch, getState) => {\n        const { \n            games : {\n                sorters: previousState \n            }\n        } = getState();\n        \n        let newStates = previousState.state;\n\n        // Invert previous state value for this field\n        const oldValue = newStates[field];\n        const newValue = (oldValue === \"ASC\") ? \"DESC\" : \"ASC\";\n        newStates = {\n            ...previousState.state,\n            [field]: newValue\n        }\n\n        // Decide the sort algorithm now\n        // Changed field should be the first criteria, other should be unchanged (following my simple order, from now)\n        const sortFunction = makeMultiCriteriaSort(\n            previousState\n                .keys\n                .map(criteria => {\n                    const sortFcts = previousState.functions[criteria];\n                    const state = newStates[criteria];\n                    return sortFcts[state];\n                })\n        );\n\n        // Update state\n        dispatch(sortingGames(newStates, sortFunction));\n        \n    };\n};\n\nexport const change_sorting_order = (field, direction) => {\n    return (dispatch, getState) => {\n        const { \n            games : {\n                sorters: previousState \n            }\n        } = getState();\n\n        // Get current position\n        const currentIndex = previousState.keys.indexOf(field);\n\n        // Some case shoud not possible\n        const wrongCase = \n            currentIndex === -1 ||\n            (currentIndex === 0 && direction === \"up\") ||\n            (currentIndex === previousState.keys.length -1 && direction === \"down\")\n        ;\n        // if nothing wrong, apply change\n        if (!wrongCase){\n            const newSortOrder = swapSiblingElements(previousState.keys, currentIndex, direction);\n            const sortFunction = makeMultiCriteriaSort(\n                newSortOrder\n                    .map(criteria => {\n                        const sortFcts = previousState.functions[criteria];\n                        const state = previousState.state[criteria];\n                        return sortFcts[state];\n                    })\n            );\n\n            dispatch(sortCriteriaOrderChanger(sortFunction, newSortOrder))\n        }\n    };\n};\n\nexport const filter_games_by_genre = (genres) => {\n    return (dispatch, getState) => {\n        dispatch(filterGamesByGenres(genres));\n    }\n}\n\nexport const filter_games_by_title = (title) => {\n    return (dispatch, getState) => {\n        dispatch(filterGamesByTitle(title));\n    }\n}\n\nexport const filter_games_by_platform = (platform) => {\n    return (dispatch, getState) => {\n        dispatch(filterGamesByPlatform(platform));\n    }\n}\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (games) => ({\n    type: FETCHING_OK,\n    games\n});\n\n// eslint-disable-next-line\nconst fetchingFailed = (error) => ({\n    type: FETCHING_FAILED,\n    error\n});\n\nconst sortingGames = (newSortersState, sortFunction) => ({\n    type: SORTING_GAMES,\n    newSortersState,\n    sortFunction\n});\n\nconst sortCriteriaOrderChanger = (sortFunction, keys) => ({\n    type: SORTING_ORDER_CHANGED,\n    sortFunction,\n    keys\n});\n\nconst filterGamesByGenres = (genres) => ({\n    type: FILTERING_BY_GENRE,\n    genres\n});\n\nconst filterGamesByTitle = (title) => ({\n    type: FILTERING_BY_TITLE,\n    title\n});\n\nconst filterGamesByPlatform = (platform) => ({\n    type: FILTERING_BY_PLATFORM,\n    platform\n});","import {\n    FETCHING_FAILED,\n    FETCHING_OK,\n    FETCHING_REQUESTED,\n    SORTING_GAMES,\n    SORTING_ORDER_CHANGED,\n    FILTERING_BY_GENRE,\n    FILTERING_BY_TITLE,\n    FILTERING_BY_PLATFORM\n} from \"../actions/games\"\n\n// search criterias\nconst sortByNameASC = (a, b) => new Intl.Collator().compare(a.title, b.title);\nconst sortByReleaseDateASC = (a, b) => {\n    let aa = a[\"releaseDate\"];\n    let bb = b[\"releaseDate\"];\n    return aa < bb ? -1 : (aa > bb ? 1 : 0);\n};\nconst sortByDurationASC = (a, b) => (a.durationAsInt < b.durationAsInt) ? -1 : (a.durationAsInt > b.durationAsInt ? 1 : 0);\n\nconst initialState = {\n    games: [],\n    error: null,\n    loading: false,\n    sorters: {\n        currentSortFunction: sortByNameASC,\n        state: {\n            \"name\": \"ASC\",\n            \"releaseDate\": \"ASC\",\n            \"duration\": \"ASC\"\n        },\n        keys: [\"name\", \"releaseDate\", \"duration\"],\n        functions: {\n            \"name\": {\n                \"ASC\": sortByNameASC,\n                \"DESC\": (a, b) => -sortByNameASC(a, b)\n            },\n            \"releaseDate\": {\n                \"ASC\": sortByReleaseDateASC,\n                \"DESC\": (a, b) => -sortByReleaseDateASC(a, b)\n            },\n            \"duration\": {\n                \"ASC\": sortByDurationASC,\n                \"DESC\": (a, b) => -sortByDurationASC(a, b)\n            }\n        }\n    },\n    filters: {\n        // Each one is also a key for translation\n        genres: [\n            \"Action\",\n            \"Adventure\",\n            \"Arcade\",\n            \"Board Games\",\n            \"Card\",\n            \"Casual\",\n            \"Educational\",\n            \"Family\",\n            \"Fighting\",\n            \"Indie\",\n            \"MMORPG\",\n            \"Platformer\",\n            \"Puzzle\",\n            \"RPG\",\n            \"Racing\",\n            \"Shooter\",\n            \"Simulation\",\n            \"Sports\",\n            \"Strategy\",\n            \"Misc\"\n        ],\n        platforms: [\n            \"GBA\",\n            \"PC\",\n            \"PS1\",\n            \"PS2\",\n            \"PS3\",\n            \"PSP\"\n        ],\n        selected_genres: [],\n        selected_title: \"\",\n        selected_platform: \"\"\n    }\n};\n\nexport default function games(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                games: action.games,\n                error: null\n            };\n        case FETCHING_FAILED:\n            return {\n                ...state,\n                loading: false,\n                games: [],\n                error: action.error\n            };\n        case SORTING_GAMES:\n            return {\n                ...state,\n                sorters: {\n                    ...state.sorters,\n                    currentSortFunction: action.sortFunction,\n                    state: {\n                        ...action.newSortersState\n                    }\n                }\n            };\n        case SORTING_ORDER_CHANGED:\n            return {\n                ...state,\n                sorters: {\n                    ...state.sorters,\n                    currentSortFunction: action.sortFunction,\n                    keys: action.keys\n                }\n            }\n        case FILTERING_BY_GENRE:\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    selected_genres: action.genres\n                }\n            }\n        case FILTERING_BY_TITLE:\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    selected_title: action.title\n                }\n            }\n        case FILTERING_BY_PLATFORM:\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    selected_platform: action.platform\n                }\n            }\n        default:\n            return state\n    }\n\n}","import gamesData from \"../data/scheduledGames.json\";\n\nexport const FETCHING_REQUESTED = \"PLANNING_REQUESTED\";\nexport const FETCHING_OK = \"PLANNING_FETCHING_OK\";\n\nexport const get_scheduled_games = () => {\n    return (dispatch, getState) => {\n        const {\n            planning: {\n                planning: previousFetchedPlanning\n            }\n        } = getState();\n\n        if (previousFetchedPlanning.length === 0) {\n            \n            dispatch(fetchingStarted());\n\n            // current date as integer (quicker comparaison)\n            const currentDate = new Date();\n            const integerDate = [\n                currentDate.getFullYear() * 10000,\n                (currentDate.getMonth() + 1) * 100,\n                currentDate.getDate()\n            ].reduce((acc, cur) => acc + cur, 0);\n\n            // a scheduled game should only be displayed with these specific conditions\n            const should_be_displayed = (elem, min, max) => elem <= max || elem <= min;\n\n            const planning = gamesData\n                .filter(game => should_be_displayed(integerDate, game.availableAt, game.endAt) )\n                .map(scheduledGame => {\n                    let releaseDate = scheduledGame[\"releaseDate\"];\n                    const parts = releaseDate.split(\"/\");\n                    return Object.assign(\n                        {}, \n                        scheduledGame, \n                        { \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]) }\n                    );\n                });\n    \n            dispatch(fetchingFinished(planning));\n        }\n\n    };\n};\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (planning) => ({\n    type: FETCHING_OK,\n    planning\n});","import {\n    FETCHING_OK,\n    FETCHING_REQUESTED\n} from \"../actions/planning\"\n\nconst initialState = {\n    planning: [],\n    error: null,\n    loading: false\n};\n\nexport default function planning(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                planning: action.planning,\n                error: null\n            };\n        default:\n            return state\n    }\n\n}","export const SET_THEME_COLOR = \"SET_THEME_COLOR\";\n\nexport const setThemeColor = ({color, mode}) => {\n    return (dispatch, getState) => {\n        if (mode === \"manual\") {\n            dispatch(manualSetThemeColor(color))\n        } else {\n            dispatch(autoSetThemeColor(color))\n        }\n    }\n}\n\nconst manualSetThemeColor = (color) => ({\n    type: SET_THEME_COLOR,\n    color,\n    mode: \"manual\"\n});\n\nconst autoSetThemeColor = (color) => ({\n    type: SET_THEME_COLOR,\n    color,\n    systemColor: color,\n    mode: \"auto\"\n})\n\n","import {\n    SET_THEME_COLOR\n} from \"../actions/themeColor\"\n\nconst initialState = {\n    currentColor: 'light',\n    mode: 'manual',\n    systemColor: 'light'\n};\n\nexport default function themeColor(state = initialState, action) {\n\n    switch (action.type) {\n        case SET_THEME_COLOR:\n            return {\n                ...state,\n                currentColor: action.color,\n                mode: action.mode,\n                systemColor: (action.mode === \"auto\") ? action.color : state.systemColor\n            };\n        default:\n            return state\n    }\n\n}","import gamesData from \"../data/tests.json\";\n\nexport const FETCHING_REQUESTED = \"TESTS_REQUESTED\";\nexport const FETCHING_OK = \"TESTS_FETCHING_OK\";\n\n// Regex for duration\nconst DURATION_REGEX = /(\\d+):(\\d+):(\\d+)/;\n\nexport const get_tests = () => {\n    return (dispatch, getState) => {\n        const {\n            tests: {\n                games: previousFetchedTests\n            }\n        } = getState();\n\n        if (previousFetchedTests.length === 0) {\n\n            dispatch(fetchingStarted());\n\n            // Build the object for component\n            let games = gamesData\n                .games\n                .filter(game => game?.visible !== false) // not display not yet public games on channel\n                .map(game => {\n                    const parts = game.releaseDate.split(\"/\");\n                    const id = game.playlistId ?? game.videoId;\n                    const base_url = (\n                        (game.playlistId) \n                            ? \"https://www.youtube.com/playlist?list=\" \n                            :  \"https://www.youtube.com/watch?v=\"\n                    ) + id ;\n                    const url_type = (game.playlistId) ? \"PLAYLIST\" : \"VIDEO\";\n                    return Object.assign({}, game, {\n                        \"imagePath\": process.env.PUBLIC_URL + gamesData.coversRootPath + id + \"/\" + (game.coverFile ?? gamesData.defaultCoverFile),\n                        \"releaseDate\": new Date(+parts[2], parts[1] -1, +parts[0]),\n                        \"url\": base_url,\n                        \"url_type\": url_type,\n                        \"durationAsInt\": parseInt((game.duration || \"00:00:00\").replace(DURATION_REGEX, \"$1$2$3\"))\n                    });\n                });\n    \n            dispatch(fetchingFinished(games));\n            \n        }\n\n    };\n};\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (games) => ({\n    type: FETCHING_OK,\n    games\n});","import {\n    FETCHING_REQUESTED,\n    FETCHING_OK\n} from \"../actions/tests\"\n\nconst initialState = {\n    games: []\n};\n\nexport default function tests(state = initialState, action) {\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                games: action.games,\n                error: null\n            };\n        default:\n            return state\n    }\n}","export const FETCHING_REQUESTED = \"LATEST_VIDEOS_REQUESTED\";\nexport const FETCHING_OK = \"LATEST_VIDEOS_FETCHING_OK\";\nexport const FETCHING_FAILED = \"LATEST_VIDEOS_FETCHING_FAILED\";\nexport const CACHED_RESPONSE = \"LATEST_VIDEOS_FETCHING_CACHED\";\n\n// rss url\nconst PROXY_URL = \"https://cors.bridged.cc/\"; // Because Youtube, I have to pass by a proxy\nconst RSS_YOUTUBE_BASE_PATH = \"https://www.youtube.com/feeds/videos.xml?channel_id=\";\nconst YOUTUBE_CHANNEL_ID = \"UCG0N7IV-C43AM9psxslejCQ\";\nconst FEED_URL = PROXY_URL + RSS_YOUTUBE_BASE_PATH + YOUTUBE_CHANNEL_ID;\n\n// Youtube updates by default rss feed each 15 minutes\nconst YOUTUBE_REFRESH_TIME_IN_MINUTES = 15;\n\n// rss parser\nlet Parser = require('rss-parser');\nlet parser = new Parser();\n\n// to compute delay in minutes between two dates (d1 : previous / d2 : current)\nconst diff_minutes = (d1, d2) => Math.abs(\n    Math.round(\n        (d2.getTime() - d1.getTime()) / 1000\n    )\n);\n\n// param à la place du () du genre ({title, password})\nexport const get_latest_videos = () => {\n    return (dispatch, getState) => {\n        const {\n            latestVideos: {\n                items: previousItems,\n                latestFetchedDate: previousFetchedDate\n            }\n        } = getState();\n\n        const dateNow = new Date();\n        const shouldRequest = [\n            () => previousItems.length === 0,\n            () => (previousFetchedDate && diff_minutes(previousFetchedDate, dateNow) >= YOUTUBE_REFRESH_TIME_IN_MINUTES)\n        ].some(pred => pred() === true);\n\n        if (shouldRequest){\n            dispatch(fetchingStarted());\n            parser\n                .parseURL(FEED_URL)\n                .then(feed => feed.items)\n                .then(items => dispatch(fetchingFinished(items,dateNow)) )\n                .catch(error => dispatch(fetchingFailed(error)) );\n        } else {\n            dispatch(fetchingCached(previousItems));\n        }\n\n    }\n};\n\nconst fetchingStarted = () => ({\n    type: FETCHING_REQUESTED\n});\n\nconst fetchingFinished = (items,latestFetchedDate) => ({\n    type: FETCHING_OK,\n    items,\n    latestFetchedDate\n});\n\nconst fetchingCached = (items) => ({\n    type: CACHED_RESPONSE,\n    items\n});\n\nconst fetchingFailed = (error) => ({\n    type: FETCHING_FAILED,\n    error\n});","import {\n    FETCHING_FAILED,\n    FETCHING_OK,\n    FETCHING_REQUESTED,\n    CACHED_RESPONSE\n} from \"../actions/latestVideos\";\n\nconst initialState = {\n    items: [],\n    latestFetchedDate: undefined,\n    loading: false,\n    error: null\n}\n\nfunction mapRSSItemToGame(items) {\n    return items\n        .map(item => {\n            const videoId = item.link.replace(\"https://www.youtube.com/watch?v=\",\"\");\n            return {\n                \"videoId\": videoId,\n                \"title\": item.title,\n                \"url\": item.link,\n                \"url_type\": \"VIDEO\",\n                \"imagePath\": \"https://i.ytimg.com/vi_webp/\" + videoId + \"/0.webp\",\n            }\n        });\n}\n\nexport default function latestVideos(state = initialState, action) {\n    switch (action.type) {\n        case FETCHING_REQUESTED:\n            return {\n              ...state,\n              loading: true\n            };\n        case FETCHING_OK:\n            return {\n                ...state,\n                loading: false,\n                items: mapRSSItemToGame(action.items),\n                latestFetchedDate: action.latestFetchedDate,\n                error: null\n            };\n        case CACHED_RESPONSE:\n            return {\n                ...state,\n                loading: false,\n                error: null\n            }\n        case FETCHING_FAILED:\n            return {\n                ...state,\n                loading: false,\n                items: [],\n                error: action.error\n            };\n        default: \n            return state;\n    }\n}\n","export const SET_DRAWER_OPEN = \"SET_DRAWER_OPEN\";\n\nexport const setDrawerOpen = (drawerOpen) => {\n    return (dispatch, _) => {\n        dispatch(setDrawer(drawerOpen));\n    }\n};\n\nconst setDrawer = (drawerOpen) => ({\n    type: SET_DRAWER_OPEN,\n    drawerOpen\n});","import {\n    SET_DRAWER_OPEN\n} from \"../actions/miscellaneous\"\n\n// for stuff I had to share between 2 or more components\nconst initialState = {\n    drawerOpen: false\n};\n\nexport default function miscellaneous(state = initialState, action) {\n\n    switch (action.type) {\n        case SET_DRAWER_OPEN:\n            return {\n                ...state,\n                drawerOpen: action.drawerOpen\n            };\n        default:\n            return state\n    }\n\n}","import { combineReducers } from \"redux\"\n\nimport games from \"./games\";\nimport planning from \"./planning\"\nimport themeColor from \"./themeColor\";\nimport tests from \"./tests\";\nimport latestVideos from \"./latestVideos\";\nimport miscellaneous from \"./miscellaneous\"\n\nconst rootReducer = combineReducers({\n    games,\n    tests,\n    planning,\n    latestVideos,\n    themeColor,\n    miscellaneous\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer  from '../reducers/index'\n\n/* eslint-disable no-underscore-dangle */\nexport default createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n/* eslint-enable */","import React from 'react';\n\nconst headerLanguages = {\n    'fr': (\n        <>\n            <defs>\n                <linearGradient id=\"a\" gradientUnits=\"userSpaceOnUse\" x1=\"132.08\" y1=\"-595.051\" x2=\"160.305\" y2=\"-595.051\" gradientTransform=\"matrix(-.28916 0 0 -.28916 46.353 -160.113)\">\n                    <stop offset=\"0\" stopColor=\"#1a4697\" stopOpacity=\"1\"/>\n                    <stop offset=\"1\" stopColor=\"#3150a3\" stopOpacity=\"1\"/>\n                </linearGradient>\n            </defs>\n            <g stroke=\"none\" fillRule=\"nonzero\">\n                <path d=\"M23.898 11.95c0-5.274-3.418-9.747-8.16-11.333v22.664c4.742-1.582 8.16-6.054 8.16-11.332zm0 0\" fill=\"#ed2224\" fillOpacity=\"1\"/>\n                <path d=\"M0 11.95c0 5.277 3.418 9.75 8.16 11.331V.617C3.418 2.203 0 6.676 0 11.95zm0 0\" fill=\"url(#a)\"/>\n                <path d=\"M11.95 23.898c1.323 0 2.597-.218 3.788-.617V.617a11.925 11.925 0 0 0-7.578 0v22.664c1.192.399 2.465.617 3.79.617zm0 0\" fill=\"#f9f9f9\" fillOpacity=\"1\"/>\n            </g>\n        </>\n    ),\n    'en': (\n        <>\n            <g stroke=\"none\" fillRule=\"nonzero\" fillOpacity=\"1\">\n                <path d=\"M24 12c0 6.629-5.371 12-12 12S0 18.629 0 12 5.371 0 12 0s12 5.371 12 12zm0 0\" fill=\"#f0f0f0\"/>\n                <path d=\"M11.477 12H24c0-1.082-.145-2.133-.414-3.129h-12.11zm0 0M11.477 5.738h10.761a11.982 11.982 0 0 0-2.77-3.129h-7.991zm0 0M12 24c2.824 0 5.422-.977 7.469-2.61H4.53A11.938 11.938 0 0 0 12 24zm0 0M1.762 18.262h20.476a11.963 11.963 0 0 0 1.348-3.133H.414c.3 1.117.758 2.168 1.348 3.133zm0 0\" fill=\"#d80027\"/>\n                <path d=\"M5.559 1.875h1.093l-1.015.738.386 1.196-1.015-.739-1.02.739.336-1.032a12.076 12.076 0 0 0-2.328 2.594h.352l-.649.469c-.101.168-.195.34-.289.512l.309.953-.578-.418c-.141.3-.274.613-.391.93l.34 1.05h1.258l-1.016.738.387 1.196-1.016-.739-.61.442C.032 10.992 0 11.492 0 12h12V0C9.629 0 7.418.688 5.559 1.875zm.464 8.926l-1.015-.739-1.02.739.39-1.196-1.019-.738h1.258l.39-1.199.388 1.2h1.257l-1.015.737zm-.386-4.692l.386 1.196-1.015-.739-1.02.739.39-1.196-1.019-.738h1.258l.39-1.195.388 1.195h1.257zm4.691 4.692l-1.015-.739-1.02.739.39-1.196-1.019-.738h1.258l.39-1.199.387 1.2h1.258l-1.02.737zm-.39-4.692l.39 1.196-1.015-.739-1.02.739.39-1.196-1.019-.738h1.258l.39-1.195L9.7 5.37h1.258zm0-3.496l.39 1.196-1.015-.739-1.02.739.39-1.196-1.019-.738h1.258L9.312.68 9.7 1.875h1.258zm0 0\" fill=\"#0052b4\"/>\n            </g>\n        </>\n    )\n};\n\nexport default headerLanguages;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useTranslation} from \"react-i18next\";\n\n// React Material UI\nimport {CssBaseline, IconButton, Toolbar} from \"@mui/material\";\nimport MuiAppBar from '@mui/material/AppBar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/styles';\n\n// Icons for switch\nimport Brightness5Icon from '@mui/icons-material/Brightness5'; // sun\nimport Brightness4Icon from '@mui/icons-material/Brightness4'; // moon\nimport { yellow } from '@mui/material/colors';\n\n// Icons for languages\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Tooltip from '@mui/material/Tooltip';\n\n// Redux actions\nimport {setThemeColor} from \"../../actions/themeColor\";\nimport {setDrawerOpen} from \"../../actions/miscellaneous\"\n\n// Custom icons\nimport languages_with_icons from \"./HeaderLanguages\";\n\n// styled AppBar\nconst drawerWidth = 240;\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n}));\n\n// main component\nfunction Header(props) {\n\n    const [t, i18n] = useTranslation('common');\n    const {drawerOpen} = props;\n\n    const handleDrawerOpen = () => {\n        props.setDrawerOpen(true);\n    };\n\n    const handleDarkMode = (event) => {\n        const color = (event.target.checked) ? \"dark\" : \"light\";\n        props.setThemeColor({color, mode: \"manual\"});\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                open={drawerOpen}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{\n                            marginRight: '36px',\n                            ...(drawerOpen && { display: 'none' }),\n                        }}\n                        size=\"large\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Switch \n                        checked={props.isDark}\n                        onChange={handleDarkMode}\n                        checkedIcon={<Brightness4Icon color=\"action\" />}\n                        icon={<Brightness5Icon style={{ color: yellow[500] }}/>}\n                        color=\"default\"\n                    />\n                    <div style={{flexGrow: 1}}/>\n                    <div>\n                        {\n                            Object\n                                .keys(languages_with_icons)\n                                .map(language =>\n                                    <Tooltip title={t(\"header.languages.\" + language)} key={language}>\n                                        <IconButton onClick={() => i18n.changeLanguage(language)} size=\"large\">\n                                            <SvgIcon>\n                                                {languages_with_icons[language]}\n                                            </SvgIcon>\n                                        </IconButton>\n                                    </Tooltip>                   \n                                )\n                        }\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    isDark: state.themeColor.currentColor === \"dark\",\n    drawerOpen: state.miscellaneous.drawerOpen\n});\n\nconst mapDispatchToProps = {\n    setThemeColor,\n    setDrawerOpen\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);","import { styled } from '@mui/styles';\nimport MuiDrawer from '@mui/material/Drawer';\n\n// drawerWidth\nexport const drawerWidth = 240;\n\n// styled drawer header\nexport const DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\n// Drawer Mixins\nexport const openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n});\n  \nexport const closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n});\n\n// styled Drawer\nexport const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      ...(open && {\n        ...openedMixin(theme),\n        '& .MuiDrawer-paper': openedMixin(theme),\n      }),\n      ...(!open && {\n        ...closedMixin(theme),\n        '& .MuiDrawer-paper': closedMixin(theme),\n      }),\n    }),\n);\n\n// styled Main\nexport const Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    //marginLeft: `-${drawerWidth}px`, // Disabled as the render when menu is closed without it is ok\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      //marginLeft: 0, // Disabled as not used above\n    }),\n  }),\n);","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {useTranslation} from \"react-i18next\";\n\n// Material UI\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Tooltip from '@mui/material/Tooltip';\n\n// Router\nimport {\n    Link,\n    useRouteMatch\n} from \"react-router-dom\"\n\n// icons\nimport SportsEsportsIcon from '@mui/icons-material/SportsEsports';\nimport ScheduleIcon from '@mui/icons-material/Schedule';\nimport ExtensionIcon from '@mui/icons-material/Extension';\nimport VideoLibraryIcon from '@mui/icons-material/VideoLibrary';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\n\n// Redux action\nimport {setDrawerOpen} from \"../../actions/miscellaneous\"\n\n// Styled components\nimport { Drawer, DrawerHeader } from \"./Drawer\";\n\n// List Item\nfunction ListItemLink(props) {\n    const { icon, primary, to } = props;\n    const { t } = useTranslation('common');\n    const entry_label = t(primary);\n\n    const matchUrl = useRouteMatch(to) !== null;\n\n    const renderLink = React.useMemo(\n        () =>\n            React.forwardRef((linkProps, ref) => (\n                // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\n                // See https://github.com/ReactTraining/react-router/issues/6056\n                <Link to={to} {...linkProps} innerRef={ref} />\n            )),\n        [to],\n    );\n\n    return (\n        <Tooltip title={entry_label} aria-label={primary}>\n            <ListItem button component={renderLink} selected={matchUrl}>\n                <ListItemIcon>{icon}</ListItemIcon>\n                <ListItemText primary={entry_label} />\n            </ListItem>\n        </Tooltip>\n    )\n};\n\n// entries\nconst ENTRIES = [\n    {\n        \"icon\": <SportsEsportsIcon />,\n        \"primary\": \"main.menuEntries.gamesKey\",\n        \"to\": \"/games\"\n    },\n    {\n        \"icon\": <ScheduleIcon />,\n        \"primary\": \"main.menuEntries.planningKey\",\n        \"to\": \"/planning\"\n    },\n    {\n        \"icon\": <ExtensionIcon />,\n        \"primary\": \"main.menuEntries.testsKey\",\n        \"to\": \"/tests\"  \n    },\n    {\n        \"icon\": <VideoLibraryIcon />,\n        \"primary\": \"main.menuEntries.latestVideosKey\",\n        \"to\": \"/latest\"\n    }\n]\n\n// Main component\nfunction Menu(props) {\n\n    const {container, open} = props;\n\n    const handleDrawerClose = () => {\n        props.setDrawerOpen(false);\n    };\n\n    return (\n        <Drawer\n            container={container}\n            variant={\"permanent\"}\n            open={open}\n        >\n            <DrawerHeader>\n                <IconButton onClick={handleDrawerClose} size=\"large\">\n                    <ChevronLeftIcon />\n                </IconButton>                \n            </DrawerHeader>\n            <Divider />\n            <List>\n                {\n                    ENTRIES.map(entry => <ListItemLink {...entry} key={entry.to} />)\n                }\n            </List>\n        </Drawer>\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    open: state.miscellaneous.drawerOpen\n});\n\nconst mapDispatchToProps = {\n    setDrawerOpen\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Menu);","import React from 'react'\nimport ReactPlayer from 'react-player/youtube'\nimport { useParams, useLocation } from 'react-router-dom'\n\nexport default function Player(props) {\n    const { id } = useParams();\n    const location = useLocation();\n    const YOUTUBE_BASE_PLAYLIST_LINK = \"https://www.youtube.com/playlist?list=\";\n    const YOUTUBE_BASE_VIDEO_LINK = \"https://www.youtube.com/watch?v=\";\n    const type = (location.pathname.includes(\"/playlist/\")) ? \"PLAYLIST\" : \"VIDEO\";\n    const url = (type === \"PLAYLIST\" ? YOUTUBE_BASE_PLAYLIST_LINK : YOUTUBE_BASE_VIDEO_LINK) + id;\n\n    return (\n        <ReactPlayer\n            controls={true}\n            url={url}\n            playing={true}\n            width='100%'\n            height='90vh'\n        />\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@mui/material/Grid\";\n\nfunction CenteredBox(props) {\n    const {children} = props;\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            style={{minHeight: '80vh'}}\n        >\n            {children}\n        </Grid>\n    );\n}\n\nCenteredBox.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CenteredBox;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { amber, green } from '@mui/material/colors';\nimport IconButton from '@mui/material/IconButton';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport Snackbar from '@mui/material/Snackbar';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nconst PREFIX = 'CustomizedSnackbar';\n\nconst classes = {\n    success: `${PREFIX}-success`,\n    error: `${PREFIX}-error`,\n    info: `${PREFIX}-info`,\n    warning: `${PREFIX}-warning`,\n    icon: `${PREFIX}-icon`,\n    iconVariant: `${PREFIX}-iconVariant`,\n    message: `${PREFIX}-message`\n};\n\nconst StyledSnackbar = styled(Snackbar)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.success}`]: {\n        backgroundColor: green[600],\n    },\n    [`& .${classes.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    [`& .${classes.info}`]: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    [`& .${classes.warning}`]: {\n        backgroundColor: amber[700],\n    },\n    [`& .${classes.icon}`]: {\n        fontSize: 20,\n    },\n    [`& .${classes.iconVariant}`]: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    [`& .${classes.message}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.success}`]: {\n        backgroundColor: green[600],\n    },\n    [`& .${classes.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    [`& .${classes.info}`]: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    [`& .${classes.warning}`]: {\n        backgroundColor: amber[700],\n    },\n    [`& .${classes.icon}`]: {\n        fontSize: 20,\n    },\n    [`& .${classes.iconVariant}`]: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    [`& .${classes.message}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nfunction CustomSnackbar(props) {\n\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                    size=\"large\">\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nCustomSnackbar.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nfunction CustomizedSnackbar(props) {\n    const [open, setOpen] = React.useState(true);\n    const {variant, message} = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <StyledSnackbar\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n        >\n            <CustomSnackbar\n                onClose={handleClose}\n                variant={variant}\n                message={message}\n            />\n        </StyledSnackbar>\n    );\n}\n\nCustomizedSnackbar.propTypes = {\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default CustomizedSnackbar;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// Icons\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Fab from '@mui/material/Fab';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\n\n// Custom\nimport CenteredGrid from \"./CenteredGrid\";\nimport SnackbarWrapper from \"./CustomSnackbar\";\n\n// The reload wrapper component\nfunction ReloadWrapper(props) {\n\n    const {loading, error, component, reloadFct} = props;\n    const { t } = useTranslation('common');\n\n    if (loading) {\n        return <CenteredGrid>\n            <CircularProgress/>\n        </CenteredGrid>\n    }\n\n    if (error) {\n        return <>\n            <SnackbarWrapper\n                variant={\"error\"}\n                message={error}\n            />\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>;\n    }\n    \n    return component;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = _state => ({});\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReloadWrapper);\n","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// For full screen Dialog \nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// For Dialog\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n// For a custom contextMenu (nice for UI)\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\n\n// For snackbars\nimport { useSnackbar } from 'notistack';\n\n// Icons for contextMenu\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport RedditIcon from '@mui/icons-material/Reddit';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport FacebookIcon from '@mui/icons-material/Facebook';\n\n// labels\nconst LABEL_WATCH_ON_YT = \"gamesLibrary.actionsButton.watchOnYt\";\nconst LABEL_WATCH_HERE = \"gamesLibrary.actionsButton.watchHere\";\nconst LABEL_COPY_LINK = \"gamesLibrary.actionsButton.copyLink\";\nconst LABEL_TWITTER = \"gamesLibrary.actionsButton.shareOnTwitter\";\nconst LABEL_FACEBOOK = \"gamesLibrary.actionsButton.shareOnFacebook\";\nconst LABEL_REDDIT = \"gamesLibrary.actionsButton.shareOnReddit\";\nconst LABEL_CLOSE_BUTTON = \"gamesLibrary.actionsButton.closeContextMenu\";\nconst LABEL_COPIED_LINK = \"gamesLibrary.snackbarsMessages.copiedLink\";\n\nfunction CardDialog(props) {\n    \n    // hooks\n    const { t } = useTranslation('common');\n    const history = useHistory();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n    const { enqueueSnackbar } = useSnackbar();\n\n    // props\n    const {game, contextMenuState: [contextMenuOpen,setContextMenuOpen]} = props;\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId;\n\n    // dialog options\n    const dialog_options = [\n        // Watch here\n        {\n            \"key\": \"watchHere\",\n            \"icon\": () => <PlayArrowIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_WATCH_HERE, { \"gameName\": gameTitle}),\n            \"onClick\": () => {\n                setContextMenuOpen(false);\n                history.push(local_path);\n            }\n        },\n        // watch on Youtube\n        {\n            \"key\": \"watchOnYoutube\",\n            \"icon\": () => <YouTubeIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_WATCH_ON_YT, { \"gameName\": gameTitle}),\n            \"onClick\": () => {\n                setContextMenuOpen(false);\n                window.location.href = gameURL;\n            }\n        },\n        // Copy link\n        {\n            \"key\": \"copyLink\",\n            \"divider\": true,\n            \"icon\": () => <FileCopyIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_COPY_LINK),\n            \"onClick\": async () => {\n                if (navigator.clipboard !== undefined) {//Chrome\n                    await navigator.clipboard.writeText(gameURL);\n                } else if(window.clipboardData) { // Internet Explorer\n                    window.clipboardData.setData(\"text/plain\", gameURL);\n                }\n                enqueueSnackbar(\n                    t(LABEL_COPIED_LINK, { \"gameName\": gameTitle }),\n                    {\n                        \"variant\": \"success\",\n                        \"autoHideDuration\": 2500\n                    }\n                )\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Twitter\n        {\n            \"key\": \"share-on-twitter\",\n            \"icon\": () => <TwitterIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_TWITTER),\n            \"onClick\": () => {\n                window.open(\"https://twitter.com/intent/tweet?url=\" + encodeURIComponent(gameURL), \"_blank\");\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Facebook\n        {\n            \"key\": \"share-on-facebook\",\n            \"icon\": () => <FacebookIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_FACEBOOK),\n            \"onClick\": () => {\n                window.open(\"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(gameURL), \"_blank\")\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Reddit\n        {\n            \"key\": \"share-on-reddit\",\n            \"icon\": () => <RedditIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_REDDIT),\n            \"onClick\": () => {\n                window.open(\"http://www.reddit.com/submit?title=\" + encodeURIComponent(gameTitle) + \"&url=\" + encodeURIComponent(gameURL) + \"&title=\",\"_blank\")\n                setContextMenuOpen(false);\n            }\n        }\n    ];\n\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            aria-labelledby=\"game-context-dialog-title\"\n            open={contextMenuOpen}\n            onClose={() => setContextMenuOpen(false)}\n        >\n            <DialogTitle id=\"game-context-dialog-title\">\n                {gameTitle}    \n            </DialogTitle>\n            <DialogContent>\n                <List>\n                    {\n                        dialog_options.map(option => \n                            <ListItem\n                                onClick={option.onClick}\n                                divider={option.divider || false}\n                                key={option.key}\n                            >\n                                <ListItemIcon>\n                                    {option.icon()}\n                                </ListItemIcon>\n                                <ListItemText primary={option.text} />\n                            </ListItem>\n                        )  \n                    }\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={() => {setContextMenuOpen(false)}}>{t(LABEL_CLOSE_BUTTON)}</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default CardDialog;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// To check what should happen when clicking on a game\nimport { useTheme, styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardActionArea from '@mui/material/CardActionArea';\n\nimport Tooltip from '@mui/material/Tooltip';\nimport Image from '@jy95/material-ui-image';\n\nimport CardDialog from \"./CardDialog\";\n\nconst PREFIX = 'CardEntry';\n\nconst classes = {\n    gameRoot: `${PREFIX}-gameRoot`,\n    gameCover: `${PREFIX}-gameCover`,\n    MuiCardActionArea: `${PREFIX}-MuiCardActionArea`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.gameRoot}`]: {\n        position: \"relative\",\n        height: \"100%\"\n    },\n    [`& .${classes.gameCover}`]: {\n        zIndex: 1,\n        height: \"inherit\"\n    },\n    [`& .${classes.MuiCardActionArea}`]: {\n        height: \"inherit\",\n        zIndex: 1\n    }\n}));\n\nfunction CardEntry(props) {\n\n    // hooks\n    const theme = useTheme();\n    const { t } = useTranslation('common');\n    const history = useHistory();\n\n    // props\n    const {game} = props;\n\n    const is_mobile_device = useMediaQuery(theme.breakpoints.down('md'));\n\n    // state of context menu\n    const [contextMenuOpen,setContextMenuOpen] = React.useState(false);\n    \n    // labels\n    const LABEL_WATCH_ON_YT = \"gamesLibrary.actionsButton.watchOnYt\";\n    const LABEL_WATCH_HERE = \"gamesLibrary.actionsButton.watchHere\";\n\n    // consts\n    const label_for_game = (is_mobile_device) ? LABEL_WATCH_ON_YT : LABEL_WATCH_HERE;\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId;\n\n    function watchGame() {\n        if (is_mobile_device) {\n            window.location.href = gameURL;\n        } else {\n            history.push(local_path);\n        }\n    }\n\n    return (\n        <StyledCard className={classes.gameRoot}>\n\n            <Tooltip title={t(label_for_game, { \"gameName\": gameTitle})} aria-label=\"WatchGame\">\n                <CardActionArea \n                    onClick={watchGame}\n                    onContextMenu={(event) => {\n                        event.preventDefault();\n                        setContextMenuOpen(true);\n                    }}\n                    classes={{root: classes.MuiCardActionArea}}\n                >\n                    <CardMedia\n                        className={classes.gameCover}\n                        title={gameTitle}\n                    >\n                        <Image src={game.imagePath} />\n                    </CardMedia>\n\n                </CardActionArea>\n            </Tooltip>\n            <CardDialog game={game} contextMenuState={[contextMenuOpen,setContextMenuOpen]} />\n            \n        </StyledCard>\n    );\n}\n\nexport default CardEntry;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport Popover from '@mui/material/Popover';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n\n// For sorting criteria reorder\n// Not used as it produces a bug\n//import ButtonGroup from '@mui/material/ButtonGroup';\n//import Switch from '@mui/material/Switch';\n\n// To display ASC / DESC\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\n// To move sort\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nimport {connect} from 'react-redux';\nimport {sort_games, change_sorting_order} from \"../../actions/games\";\n\n\n// Sort buttons of GamesGallery\nfunction GamesSorters(props) {\n    \n    // To handle criteria enabling (or disabling)\n    const handleSortChange = (event) => {\n        const field = event.target.name;\n        props.sort_games(field);\n    }\n\n    // To handle sort criteria \n    const handleSortOrderChange = (event) => {\n        // Warning : using IconButton, event.target doesn't work as expected\n        const metadata = event.currentTarget;\n        // fetch info\n        const field = metadata.name;\n        const type_of_sort_change = metadata.getAttribute(\"aria-label\");\n        const direction = (type_of_sort_change === \"upSorter\") ? \"up\" : \"down\";\n        props.change_sorting_order(field, direction);\n    }\n\n    const { state: sorters } = props;\n    const { t } = useTranslation('common');\n\n    // For Popover\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    const open = Boolean(anchorEl);\n    const id = open ? 'sort-popover' : undefined;\n\n    // map field to labels in translation file(s)\n    const field_labels = {\n        \"name\": \"gamesLibrary.sortLabels.byName\",\n        \"releaseDate\": \"gamesLibrary.sortLabels.byReleaseDate\",\n        \"duration\": \"gamesLibrary.sortLabels.byDuration\"\n    }\n    // labels for sort buttons (with condition)\n    const sort_button_conditions = {\n        \"upSorter\": (index) => index !== 0,\n        \"downSorter\": (index) => index !== sorters.keys.length -1,\n    }\n\n    return <>\n        <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n            {t(\"gamesLibrary.sortButtonLabel\")}\n        </Button>\n        <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <FormControl component=\"fieldset\" variant=\"standard\">\n                <FormGroup>\n                    {\n                        sorters\n                            .keys\n                            .map( (criteria, index) => \n                                <div\n                                    key={\"searchCriteria_\"+criteria}\n                                >\n                                    <FormControlLabel\n                                        control={\n                                            <>\n                                                <Checkbox \n                                                    checked={sorters.state[criteria] !== \"ASC\"}\n                                                    onChange={handleSortChange}\n                                                    name={criteria}\n                                                    checkedIcon={<ArrowDropUpIcon />}\n                                                    icon={<ArrowDropDownIcon />} \n                                                />\n                                            </>\n                                        }\n                                        label={t(field_labels[criteria])}\n                                        variant=\"standard\" />\n                                    {\n                                        // Object.keys as I need the following order : UP / DOWN\n                                        Object\n                                            .keys(sort_button_conditions)\n                                            .map(\n                                                sort_key => {\n                                                    const condition_check = sort_button_conditions[sort_key];\n                                                    if (!condition_check(index)) {\n                                                        return null;\n                                                    } else {\n                                                        return (\n                                                            <IconButton \n                                                                aria-label={sort_key} \n                                                                name={criteria} \n                                                                size=\"small\" \n                                                                onClick={handleSortOrderChange}\n                                                                key={criteria + \"_\"+ sort_key}\n                                                            >\n                                                                {\n                                                                    (() => {\n                                                                        switch(sort_key){\n                                                                            case \"upSorter\":\n                                                                                return <ArrowUpwardIcon fontSize=\"inherit\" />\n                                                                            case \"downSorter\":\n                                                                                return <ArrowDownwardIcon fontSize=\"inherit\" />\n                                                                            default:\n                                                                                return null;\n                                                                        }\n                                                                    })()\n                                                                } \n                                                            </IconButton> \n                                                        )\n                                                    }\n                                                }\n                                            )\n                                    }\n                                </div>\n                            )\n                    }\n                </FormGroup>\n            </FormControl>\n        </Popover>\n    </>;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    state: state.games.sorters,\n});\n\nconst mapDispatchToProps = {\n    sort_games,\n    change_sorting_order\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesSorters);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\nimport {\n    filter_games_by_genre, \n    filter_games_by_title\n} from \"../../actions/games\";\n\n// Genres filter of GamesGallery\nfunction GenresSelect(props) {\n\n    const { filters } = props;\n    const { t } = useTranslation('common');\n\n    // Generate list of values for game genre\n    const genre_options = filters\n        .genres\n        .map(genre => ({\n            label: t(\"gamesLibrary.gamesGenres.\" + genre),\n            key: genre\n        }))\n        .sort( \n            (a, b) => (a.label < b.label) ? -1 : (a.label > b.label ? 1 : 0) \n        );\n\n    return <>\n        <Autocomplete\n            multiple\n            openOnFocus\n            filterSelectedOptions \n            id=\"select-game-genre\"\n            //style={{ width: 300 }}\n            limitTags={3}\n            options={genre_options}\n            getOptionLabel={(option) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.genres\")} />}\n            onChange={(_event, value) => {\n                const genres = (value) ? value : [];\n                props.filterByGenre(genres);\n            }}\n            //value={filters.selected_genres}\n        />\n    </>;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    filters: state.games.filters,\n});\n\nconst mapDispatchToProps = {\n    filterByGenre: filter_games_by_genre, \n    filterByTitle: filter_games_by_title\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GenresSelect);","const platformIcons = {\n    \"PS1\": \"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826.586.195 1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\",\n    \"PS2\": \"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513 0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292Z\",\n    \"PS3\": \"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375 0-.778-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\",\n    \"PSP\":  `\n        M 3.238281 9.3125 L 8.371094 9.3125 L 8.371094 10.832031 L 3.441406 10.832031 L 3.441406 12.152344 L 3.238281 12.152344 L 3.238281 10.632812 L 8.167969 10.632812 L 8.167969 9.511719 L 3.238281 9.511719 L 3.238281 9.3125 \n        M 14.777344 10.832031 L 14.777344 12.152344 L 14.578125 12.152344 L 14.578125 10.632812 L 19.503906 10.632812 L 19.503906 9.511719 L 14.578125 9.511719 L 14.578125 9.3125 L 19.707031 9.3125 L 19.707031 10.832031 L 14.777344 10.832031 \n        M 10.988281 9.3125 L 10.988281 11.953125 L 8.371094 11.953125 L 8.371094 12.152344 L 11.199219 12.152344 L 11.199219 9.511719 L 13.8125 9.511719 L 13.8125 9.3125 L 10.988281 9.3125\n    `,\n    \"PC\": `\n        M4.539062 7.515625 L 4.539062 13.886719 L 7.6875 13.886719 L 7.695312 11.738281 L 7.707031 9.597656 L 8.625 9.585938 L 9.542969 9.578125 L 10.546875 8.589844 L 11.550781 7.605469 L 11.550781 3.148438 L 10.527344 2.144531 L 9.507812 1.140625 L 4.539062 1.140625 Z \n        M8.28125 5.410156 L 8.289062 7.113281 L 8 7.101562 L 7.707031 7.089844 L 7.695312 5.40625 L 7.6875 3.722656 L 7.9375 3.714844 C 8.082031 3.707031 8.210938 3.703125 8.230469 3.703125 C 8.253906 3.707031 8.273438 4.308594 8.28125 5.410156 Z \n        M8.28125 5.410156 \n        M13.09375 2.148438 L 12.074219 3.148438 L 12.074219 11.917969 L 13.078125 12.902344 L 14.085938 13.886719 L 17.457031 13.886719 L 18.460938 12.898438 L 19.460938 11.917969 L 19.445312 8.417969 L 16.144531 8.417969 L 16.132812 9.878906 L 16.125 11.347656 L 15.601562 11.347656 L 15.601562 3.71875 L 16.125 3.71875 L 16.132812 4.925781 L 16.144531 6.132812 L 19.445312 6.132812 L 19.460938 3.148438 L 18.441406 2.148438 L 17.417969 1.140625 L 14.117188 1.140625 Z \n        M13.09375 2.148438\n    `,\n    \"GBA\": `\n        M 12 19.199219 C 9.457031 19.199219 7.679688 18.960938 6.71875 18.429688 C 6.527344 18.335938 6.382812 18.289062 6.289062 18.289062 C 3.410156 18.191406 1.96875 17.183594 1.390625 16.558594 C 1.105469 16.269531 0.960938 15.9375 0.960938 15.503906 C 0.960938 13.390625 1.054688 9.503906 1.441406 8.015625 C 1.632812 7.25 2.351562 6.71875 3.167969 6.71875 C 3.984375 6.71875 5.230469 5.949219 6.050781 5.230469 C 6.429688 4.945312 6.863281 4.800781 7.296875 4.800781 L 16.75 4.800781 C 17.230469 4.800781 17.710938 4.992188 18 5.28125 C 18.625 5.855469 19.96875 6.71875 20.832031 6.71875 C 21.648438 6.71875 22.367188 7.25 22.558594 8.015625 C 22.894531 9.3125 23.039062 12.671875 23.039062 15.457031 C 23.039062 15.890625 22.894531 16.222656 22.609375 16.511719 C 21.984375 17.136719 20.589844 18.144531 17.710938 18.238281 C 17.519531 18.238281 17.375 18.289062 17.328125 18.335938 C 16.464844 18.910156 14.6875 19.199219 12 19.199219 Z \n        M 6.289062 17.328125 C 6.527344 17.328125 6.816406 17.425781 7.152344 17.570312 C 7.632812 17.808594 8.832031 18.238281 12 18.238281 C 15.359375 18.238281 16.464844 17.761719 16.75 17.570312 C 16.992188 17.375 17.328125 17.28125 17.710938 17.28125 C 20.304688 17.183594 21.550781 16.222656 21.933594 15.839844 C 22.03125 15.742188 22.078125 15.601562 22.078125 15.457031 C 22.078125 12.816406 21.9375 9.457031 21.601562 8.304688 C 21.503906 7.96875 21.167969 7.730469 20.832031 7.730469 C 19.535156 7.730469 18 6.625 17.328125 6 C 17.136719 5.808594 16.894531 5.808594 16.75 5.808594 L 7.296875 5.808594 C 7.105469 5.808594 6.863281 5.90625 6.671875 6.050781 C 6.386719 6.289062 4.65625 7.679688 3.167969 7.679688 C 2.785156 7.679688 2.496094 7.921875 2.402344 8.257812 C 2.066406 9.457031 1.921875 12.816406 1.921875 15.503906 C 1.921875 15.648438 1.96875 15.792969 2.066406 15.890625 C 2.449219 16.269531 3.695312 17.230469 6.289062 17.328125 Z \n        M 3.839844 8.640625 L 4.800781 8.640625 L 4.800781 11.519531 L 3.839844 11.519531 Z \n        M 2.878906 10.558594 L 2.878906 9.601562 L 5.761719 9.601562 L 5.761719 10.558594 Z \n        M 20.398438 8.640625 C 20.785156 8.640625 21.121094 8.976562 21.121094 9.359375 C 21.121094 9.742188 20.785156 10.078125 20.398438 10.078125 C 20.015625 10.078125 19.679688 9.742188 19.679688 9.359375 C 19.679688 8.976562 20.015625 8.640625 20.398438 8.640625 Z \n        M 18.960938 10.078125 C 19.34375 10.078125 19.679688 10.414062 19.679688 10.800781 C 19.679688 11.183594 19.34375 11.519531 18.960938 11.519531 C 18.574219 11.519531 18.238281 11.183594 18.238281 10.800781 C 18.238281 10.414062 18.574219 10.078125 18.960938 10.078125 Z \n        M 5.710938 13.871094 C 5.808594 13.632812 5.710938 13.34375 5.519531 13.25 L 4.078125 12.527344 C 3.839844 12.429688 3.550781 12.527344 3.457031 12.71875 C 3.359375 12.960938 3.457031 13.25 3.648438 13.34375 L 5.089844 14.0625 C 5.136719 14.109375 5.230469 14.109375 5.28125 14.109375 C 5.472656 14.160156 5.617188 14.066406 5.710938 13.871094 Z \n        M 5.710938 15.792969 C 5.808594 15.550781 5.710938 15.265625 5.519531 15.167969 L 4.078125 14.449219 C 3.839844 14.351562 3.550781 14.449219 3.457031 14.640625 C 3.359375 14.878906 3.457031 15.167969 3.648438 15.265625 L 5.089844 15.984375 C 5.136719 16.03125 5.230469 16.03125 5.28125 16.03125 C 5.472656 16.078125 5.617188 15.984375 5.710938 15.792969 Z \n        M 15.839844 15.839844 L 8.160156 15.839844 C 7.585938 15.839844 7.199219 15.457031 7.199219 14.878906 L 7.199219 8.640625 C 7.199219 8.0625 7.585938 7.679688 8.160156 7.679688 L 15.839844 7.679688 C 16.414062 7.679688 16.800781 8.0625 16.800781 8.640625 L 16.800781 14.878906 C 16.800781 15.457031 16.414062 15.839844 15.839844 15.839844 Z \n        M 8.160156 8.640625 L 8.160156 14.878906 L 15.839844 14.878906 L 15.839844 8.640625 Z \n        M 18.574219 13.871094 L 20.496094 12.910156 C 20.589844 12.863281 20.640625 12.71875 20.589844 12.574219 C 20.542969 12.480469 20.398438 12.429688 20.253906 12.480469 L 18.335938 13.441406 C 18.238281 13.488281 18.191406 13.632812 18.238281 13.777344 C 18.289062 13.871094 18.382812 13.921875 18.429688 13.921875 C 18.527344 13.921875 18.574219 13.921875 18.574219 13.871094 Z \n        M 18.574219 14.832031 L 20.496094 13.871094 C 20.589844 13.824219 20.640625 13.679688 20.589844 13.535156 C 20.542969 13.441406 20.398438 13.390625 20.253906 13.441406 L 18.335938 14.398438 C 18.238281 14.449219 18.191406 14.589844 18.238281 14.734375 C 18.289062 14.832031 18.382812 14.878906 18.429688 14.878906 C 18.527344 14.878906 18.574219 14.878906 18.574219 14.832031 Z \n        M 18.574219 15.792969 L 20.496094 14.832031 C 20.589844 14.785156 20.640625 14.640625 20.589844 14.496094 C 20.542969 14.398438 20.398438 14.351562 20.253906 14.398438 L 18.335938 15.359375 C 18.238281 15.410156 18.191406 15.550781 18.238281 15.695312 C 18.289062 15.792969 18.382812 15.839844 18.429688 15.839844 C 18.527344 15.839844 18.574219 15.839844 18.574219 15.792969 Z \n        M 18.574219 15.792969 \n    `\n}\nexport default platformIcons;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nimport {\n    filter_games_by_platform\n} from \"../../actions/games\";\n\n// icons\nimport iconsSVG from \"./PlatformIcons\";\n\nfunction PlatformSelect(props) {\n\n    const { filters } = props;\n    const { t } = useTranslation('common');\n\n    const options = filters\n        .platforms\n        .map(platform => ({\n            label: platform,\n            key: platform\n        }))\n\n    return <>\n        <Autocomplete\n            id=\"select-game-platform\"\n            openOnFocus\n            options={options}\n            getOptionLabel={(option) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.platform\")} />}\n            renderOption={(props, option, _state) => (\n                <li {...props} key={option.key}>\n                    <SvgIcon titleAccess={option.label}>\n                        <path d={iconsSVG[option.key]} />\n                    </SvgIcon>\n                    {option.label}\n                </li>\n            )}\n            onChange={(_event, value) => {\n                const platform = (value) ? value.key : \"\";\n                props.filterByPlatform(platform);\n            }}\n            //value={filters.selected_genres}\n        />\n    </>;\n}\n\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    filters: state.games.filters,\n});\n\nconst mapDispatchToProps = {\n    filterByPlatform: filter_games_by_platform, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PlatformSelect);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\nimport {\n    filter_games_by_title\n} from \"../../actions/games\";\n\nfunction TitleFilter(props) {\n\n    const { title, filterByTitle, games } = props;\n    const { t } = useTranslation('common');\n    // needed as this Autocomplete cannot have duplicate\n    const options = [...new Set(games.map(game => game.title))];\n\n    return <>\n        <Autocomplete\n            id=\"search-game-title\"\n            freeSolo\n            options={options}\n            value={title}\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.title\")} />}\n            onInputChange={(_event, value) => {\n                filterByTitle(value);\n            }}\n        />\n    </>;\n\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    title: state.games.filters.selected_title,\n});\n\nconst mapDispatchToProps = {\n    filterByTitle: filter_games_by_title, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TitleFilter);","import React from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {connect} from 'react-redux';\nimport {get_games} from \"../../actions/games\";\n\n// Style\n\nimport Grid from \"@mui/material/Grid\";\n\n// Custom\nimport ReloadWrapper from \"../Others/ReloadWrapper\";\n\nimport CardEntry from \"./CardEntry\";\nimport GamesSorters from \"./GamesSorters\";\nimport GenresSelect from \"./GenresSelect\";\nimport PlatformSelect from \"./PlatformSelect\";\nimport TitleFilter from \"./TitleFilter\";\n\nconst PREFIX = 'GamesGallery';\n\nconst classes = {\n    gameEntry: `${PREFIX}-gameEntry`,\n    gamesCriteria: `${PREFIX}-gamesCriteria`\n};\n\nconst StyledGamesGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    // inspired by the settings https://www.youtube.com/gaming uses ;)\n    [`& .${classes.gameEntry}`]: {\n        // 2 items on [0, sm]\n        [theme.breakpoints.only('xs')]: {\n            flexBasis: \"calc((100% / 2) - 1%)\"\n        },\n        // 4 items on [sm, md[\n        [theme.breakpoints.only('sm')]: {\n            flexBasis: \"calc((100% / 4) - 1%)\"\n        },\n        // 8 items on [md, infinity]\n        [theme.breakpoints.up('md')]: {\n            flexBasis: \"calc((100% / 8) - 1%)\"\n        },\n    },\n    [`& .${classes.gamesCriteria}`]: {\n        display: \"flex\",\n        [theme.breakpoints.down('md')]: {\n            flexDirection: \"column\",\n            rowGap: \"8px\"\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n        }\n    }\n}));\n\n// To check if platform match search critiria\nconst matches_platform_search = (platform) => (game) => game.platform === platform;\n\n// To check if title match search criteria (insensitive search)\nconst matches_title_search = (searchTitle) => (game) => game.title.search(new RegExp(searchTitle, 'i')) >= 0;\n\n// To check if two arrays contains at least one element in common\nconst at_least_one_in_common = (requestedGenres) => (game) => requestedGenres.some(v => game.genres.indexOf(v.key) >= 0);\n\n// The gallery component\nfunction GamesGallery(props) {\n\n    const {loading, error, data, filters, sortFunction} = props;\n\n    // on mount, load data (only once)\n    React.useEffect(() => {\n        props.get_games();\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    // prepare filter checks\n    let filter_conditions = [];\n    \n    // if provided platform filter\n    if (filters.platform.length !== 0) {\n        filter_conditions.push(matches_platform_search(filters.platform));\n    }\n\n    // if provided title filter\n    if (filters.title.length !== 0) {\n        filter_conditions.push(matches_title_search(filters.title));\n    }\n\n    // if provided genre filter\n    if (filters.genres.length !== 0) {\n        filter_conditions.push(at_least_one_in_common(filters.genres));\n    }\n\n    // Apply filters\n    const currentGames = data\n        .filter(game => filter_conditions.every(condition => condition(game)))\n        .sort(sortFunction);\n\n    return (\n        <ReloadWrapper \n            loading={loading}\n            error={error}\n            reloadFct={() => {props.get_games();}}\n            component={\n                <StyledGamesGallery>\n                    <Grid\n                        container\n                        className={classes.gamesCriteria}\n                    >\n                        <Grid item xs={12} md={4}>\n                            <TitleFilter games={currentGames} />\n                        </Grid>\n                        <Grid item xs={12} md={2}>\n                            <PlatformSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <GenresSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={1}>\n                            <GamesSorters />\n                        </Grid>\n                    </Grid>\n            \n                    <Grid\n                        container\n                        spacing={1}\n                        style={\n                            {\n                                rowGap: \"15px\"\n                            }\n                        }\n                    >\n                        {\n                            currentGames\n                                .map(game => \n                                        <Grid \n                                            key={game.playlistId ?? game.videoId} \n                                            item \n                                            className={classes.gameEntry}\n                                        >\n                                            <CardEntry game={game}/>\n                                        </Grid>\n                                )\n                        }\n                    </Grid>\n                </StyledGamesGallery>\n            }\n        />\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.games.games,\n    filters: {\n        genres: state.games.filters.selected_genres,\n        title: state.games.filters.selected_title,\n        platform: state.games.filters.selected_platform,\n    },\n    sortFunction: state.games.sorters.currentSortFunction,\n    loading: state.games.loading,\n    error: state.games.error\n});\n\nconst mapDispatchToProps = {\n    get_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesGallery);","import React from 'react';\n\n// icons\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport HourglassEmptyIcon from '@mui/icons-material/HourglassEmpty';\nimport SvgIcon from '@mui/material/SvgIcon';\n\n// Others\nimport Tooltip from '@mui/material/Tooltip';\n\n// Platform icons\nimport iconsSVG from \"../GamesView/PlatformIcons\";\n\n// columns definitions\nconst planningColumns = (t, date_options, language) => [\n    {\n        field: \"title\", \n        headerName: t(\"planning.columns.title\"),\n        headerAlign: 'center',\n        renderCell: (params) => (\n            <Tooltip title={params.value} aria-label={params.value}>\n                <div>\n                    {params.value}\n                </div>\n            </Tooltip>\n        ),\n        width: 270\n    },\n    {\n        field: \"platform\",\n        headerName: t(\"planning.columns.platform\"),\n        //headerAlign: 'center',\n        //align: 'center',\n        renderCell: (params) => (\n            <SvgIcon titleAccess={params.value}>\n                <path d={iconsSVG[params.value]} />\n            </SvgIcon>\n        ),\n        width: 160\n    },\n    {\n        field: \"releaseDate\", \n        headerName: t(\"planning.columns.releaseDate\"),\n        headerAlign: 'center',\n        renderCell: (params) => (\n            <>\n                {params.value.toLocaleDateString(language, date_options)}\n            </>\n        ),\n        width: 220\n    },\n    {\n        field: \"status\",\n        headerName: t(\"planning.columns.status\"),\n        //headerAlign: 'center',\n        renderCell: (params) => (\n            <Tooltip title={t(\"planning.states.\" + params.value )} aria-label={params.value}>\n                {\n                    (() => {\n                        switch(params.value) {\n                            case \"RECORDED\":\n                                return <CheckCircleIcon />;\n                            case \"PENDING\":\n                                return <HourglassEmptyIcon />;\n                            default:\n                                return null;\n                        }\n                    })()\n                }   \n            </Tooltip>\n        ),\n        width: 130\n    }\n];\n\nexport default planningColumns;","const frenchLabels = {\n    // Root\n    rootGridLabel: \"Planning\",\n    noRowsLabel: \"Plus de jeux planifié\",\n    errorOverlayDefaultLabel: \"Une erreur s'est produite\",\n\n    // Density selector toolbar button text\n    toolbarDensity: \"Densité\",\n    toolbarDensityLabel: \"Densité\",\n    toolbarDensityCompact: \"Compact\",\n    toolbarDensityStandard: \"Standard\",\n    toolbarDensityComfortable: \"Confortable\",\n\n    // Columns selector toolbar button text\n    toolbarColumns: \"Colonnes\",\n    toolbarColumnsLabel: \"Afficher le sélecteur de colonne\",\n\n    // Filters toolbar button text\n    toolbarFilters: \"Filtres\",\n    toolbarFiltersLabel: \"Afficher les filtres\",\n    toolbarFiltersTooltipHide: \"Cacher les filtres\",\n    toolbarFiltersTooltipShow: \"Afficher les filtres\",\n    toolbarFiltersTooltipActive: (count) => `${count} filtre(s) actifs`,\n\n    // Columns panel text\n    columnsPanelTextFieldLabel: \"Rechercher la colonne\",\n    columnsPanelTextFieldPlaceholder: \"Nom de la colonne\",\n    columnsPanelDragIconLabel: \"Réordonner la colonne\",\n    columnsPanelShowAllButton: \"Afficher tout\",\n    columnsPanelHideAllButton: \"Cacher tout\",\n\n    // Filter panel text\n    filterPanelAddFilter: \"Ajouter un filtre\",\n    filterPanelDeleteIconLabel: \"Supprimer\",\n    filterPanelOperators: \"Opérateur\",\n    filterPanelOperatorAnd: \"Et\",\n    filterPanelOperatorOr: \"Ou\",\n    filterPanelColumns: \"Colonne\",\n\n    // Column menu text\n    columnMenuLabel: \"Menu\",\n    columnMenuShowColumns: \"Afficher les colonnes\",\n    columnMenuFilter: \"Filtrer\",\n    columnMenuHideColumn: \"Cacher\",\n    columnMenuUnsort: \"Défaire le tri\",\n    columnMenuSortAsc: \"Tri croissant\",\n    columnMenuSortDesc: \"Tri décroissant\",\n\n    // Column header text\n    columnHeaderFiltersTooltipActive: (count) => `${count} filtre(s) actifs`,\n    columnHeaderFiltersLabel: \"Afficher les filtres\",\n    columnHeaderSortIconLabel: \"Trier\",\n\n    // Total rows footer text\n    footerTotalRows: \"Total de jeux planifiés :\",\n\n    // Pagination footer text\n    footerPaginationRowsPerPage: \"Lignes par page :\",\n\n    // Export\n    toolbarExport: \"Export\",\n    toolbarExportLabel: \"Export\",\n    toolbarExportCSV: \"Export en CSV\"\n};\n\nexport default frenchLabels;","import React from 'react';\nimport {connect} from 'react-redux';\nimport i18n from 'i18next';\nimport {useTranslation} from \"react-i18next\";\n\n// Material UI\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n\n// Realod Wrapper\nimport ReloadWrapper from \"../Others/ReloadWrapper\";\n// columns definitions\nimport getTableColumns from \"./PlanningColumns\";\n// Custom French translation\nimport customTranslation from \"./PlanningFrenchLabels\";\n\n// Redux actions\nimport {get_scheduled_games} from \"../../actions/planning\";\n\nfunction Viewer(props) {\n\n    const {loading, error, data} = props;\n    const { t } = useTranslation('common');\n\n    // on mount, load data (only once)\n    React.useEffect(() => {\n        props.get_scheduled_games();\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    )\n\n    const date_options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n    const language = i18n.language;\n    const columns = getTableColumns(t, date_options, language);\n    const customLocaleText = (language.startsWith(\"fr\")) ? customTranslation : {};\n\n    return <ReloadWrapper \n        loading={loading}\n        error={error}\n        reloadFct={() => {props.get_scheduled_games();}}\n        component={\n            <div style={{ height: 450, width: '100%' }}>\n                <div style={{ display: 'flex', height: '100%' }}>\n                    <div style={{ flexGrow: 1 }}>\n                        <DataGrid \n                            rows={data} \n                            columns={columns} \n                            disableSelectionOnClick \n                            //disableExtendRowFullWidth // No needed for now\n                            disableColumnFilter // or filterable: false in each column\n                            autoHeight  \n                            localeText={customLocaleText}\n                            components={{ Toolbar: GridToolbar }}\n                        />\n                    </div>\n                </div>\n            </div>            \n        } \n    />\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.planning.planning,\n    loading: state.planning.loading,\n    error: state.planning.error,\n});\n\nconst mapDispatchToProps = {\n    get_scheduled_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Viewer);\n","import React from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {connect} from 'react-redux';\nimport {get_tests} from \"../../actions/tests\";\n\n// Custom\nimport ReloadWrapper from \"../Others/ReloadWrapper\";\nimport CardEntry from \"../GamesView/CardEntry\";\n\n// Style\nimport Grid from \"@mui/material/Grid\";\n\nconst PREFIX = 'TestsGallery';\n\nconst classes = {\n    gameEntry: `${PREFIX}-gameEntry`,\n    gamesCriteria: `${PREFIX}-gamesCriteria`\n};\n\nconst StyledTestsGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.gameEntry}`]: {\n        [theme.breakpoints.only('xs')]: {\n            flexBasis: \"calc((100% / 1) - 1%)\"\n        },\n        [theme.breakpoints.only('sm')]: {\n            flexBasis: \"calc((100% / 2) - 1%)\"\n        },\n        [theme.breakpoints.only('md')]: {\n            flexBasis: \"calc((100% / 4) - 1%)\"\n        },\n        [theme.breakpoints.up('lg')]: {\n            flexBasis: \"calc((100% / 5) - 1%)\"\n        },\n    },\n    [`& .${classes.gamesCriteria}`]: {\n        display: \"flex\",\n        [theme.breakpoints.down('md')]: {\n            flexDirection: \"column\",\n            rowGap: \"8px\"\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n        }\n    }\n}));\n\n// The gallery component\nfunction TestsGallery(props) {\n\n    const {loading, error, data} = props;\n\n    // on mount, load data (only once)\n    React.useEffect(() => {\n        props.get_tests();\n    }, \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ReloadWrapper  \n            loading={loading}\n            error={error}\n            reloadFct={() => {props.get_tests();}}\n            component={\n                <StyledTestsGallery>    \n                    <Grid\n                        container\n                        spacing={1}\n                        style={\n                            {\n                                rowGap: \"15px\"\n                            }\n                        }\n                    >\n                        {\n                            data\n                                .map(game => \n                                        <Grid \n                                            key={game.playlistId ?? game.videoId} \n                                            item \n                                            className={classes.gameEntry}\n                                        >\n                                            <CardEntry game={game}/>\n                                        </Grid>\n                                )\n                        }\n                    </Grid>\n                </StyledTestsGallery>            \n            }\n        />\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.tests.games\n});\n\nconst mapDispatchToProps = {\n    get_tests\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TestsGallery);","import React from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {connect} from 'react-redux';\nimport {get_latest_videos} from \"../../actions/latestVideos\";\n\n// Custom\nimport ReloadWrapper from \"../Others/ReloadWrapper\";\n\n// Style\nimport Grid from \"@mui/material/Grid\";\nimport CardEntry from \"../GamesView/CardEntry\";\n\nconst PREFIX = 'LatestVideosGallery';\n\nconst classes = {\n    gameEntry: `${PREFIX}-gameEntry`,\n    gamesCriteria: `${PREFIX}-gamesCriteria`\n};\n\nconst StyledLatestVideosGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.gameEntry}`]: {\n        [theme.breakpoints.only('xs')]: {\n            flexBasis: \"calc((100% / 1) - 1%)\"\n        },\n        [theme.breakpoints.only('sm')]: {\n            flexBasis: \"calc((100% / 2) - 1%)\"\n        },\n        [theme.breakpoints.only('md')]: {\n            flexBasis: \"calc((100% / 4) - 1%)\"\n        },\n        [theme.breakpoints.up('lg')]: {\n            flexBasis: \"calc((100% / 5) - 1%)\"\n        },\n    },\n    [`& .${classes.gamesCriteria}`]: {\n        display: \"flex\",\n        [theme.breakpoints.down('md')]: {\n            flexDirection: \"column\",\n            rowGap: \"8px\"\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n        }\n    }\n}));\n\n// The gallery component\nfunction LatestVideosGallery(props) {\n\n    const {loading, error, data} = props;\n\n    // on mount, load data (only once)\n    React.useEffect(() => {\n        props.get_latest_videos();\n    }, \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ReloadWrapper \n            loading={loading}\n            error={error}\n            reloadFct={() => {props.get_latest_videos();}}\n            component={\n                <StyledLatestVideosGallery>    \n                    <Grid\n                        container\n                        spacing={1}\n                        style={\n                            {\n                                rowGap: \"15px\"\n                            }\n                        }\n                    >\n                        {\n                            data\n                                .map(game => \n                                        <Grid \n                                            key={game.playlistId ?? game.videoId} \n                                            item \n                                            className={classes.gameEntry}\n                                        >\n                                            <CardEntry game={game}/>\n                                        </Grid>\n                                )\n                        }\n                    </Grid>\n                </StyledLatestVideosGallery>            \n            }\n        />\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    data: state.latestVideos.items\n});\n\nconst mapDispatchToProps = {\n    get_latest_videos\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LatestVideosGallery);","import React from 'react'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { Provider, connect } from 'react-redux'\nimport i18n from 'i18next';\n\n// snackbars\nimport { SnackbarProvider } from 'notistack';\n\n// Dark mode\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// MUI components\nimport Box from '@mui/material/Box';\n\n// languages\nimport {frFR, enUS} from '@mui/material/locale';\n\n// Components\nimport Header from \"./Home/Header\";\nimport Menu from \"./Home/Menu\"\nimport Player from \"./YTPlayer/Player\";\nimport GamesGallery from \"./GamesView/GamesGallery\";\nimport Planning from \"./Planning/Planning\";\nimport TestsGallery from \"./Tests/TestsGallery\";\nimport LatestVideosGallery from \"./LatestVideos/LatestVideosGallery\";\nimport { DrawerHeader, Main } from \"./Home/Drawer\";\n\n// Redux action\nimport {setThemeColor} from \"../actions/themeColor\";\n\n// Languages for Material UI\nconst materialUI_languages = {\n    fr: frFR,\n    en: enUS\n}\n\nfunction Root(props) {\n\n    const { store, openMenu } = props;\n\n    return (\n        <SnackbarProvider \n            maxSnack={3}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n        >\n            <Box sx={{ display: 'flex' }}>\n                <Provider store={store}>\n                    {/* https://github.com/facebook/create-react-app/issues/1765#issuecomment-327615099 */}\n                    <Router basename={process.env.PUBLIC_URL} >\n                        <Header />\n                        <Menu />\n                            <Main open={ openMenu } >\n                                <DrawerHeader />\n                                <Route exact path=\"/\" render={() => <Redirect to=\"/games\" />}/>\n                                <Route path=\"/games\" component={GamesGallery} />\n                                <Route path=\"/playlist/:id\" component={Player} />\n                                <Route path=\"/video/:id\" component={Player} />\n                                <Route path=\"/planning\" component={Planning} />\n                                <Route path=\"/tests\" component={TestsGallery} />\n                                <Route path=\"/latest\" component={LatestVideosGallery} />\n                            </Main>\n                    </Router>\n                </Provider>\n            </Box>\n        </SnackbarProvider>\n    )\n}\n\nfunction withThemeProvider(Component) {\n    function WithThemeProvider(props) {\n        // for theme Color\n        const { setThemeColor, themeSettings} = props;\n        const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n        const systemColor = prefersDarkMode ? \"dark\" : \"light\";\n\n        // for language of the app\n        const currentLanguage = i18n.language;\n\n        // Two case handled here :\n        // 1) When user comes to the site and have different color that default\n        // 2) When user changes on the fly its preferred system color\n        React.useEffect(() => {\n            if (themeSettings.systemColor !== systemColor) {\n                setThemeColor({color: systemColor, mode: \"auto\"});\n            }\n        },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            [themeSettings.systemColor, systemColor]\n        );\n\n        // Prepare theme for possible darkmode\n        const theme = React.useMemo(\n            () =>\n                createTheme({\n                    palette: {\n                        mode: themeSettings.currentColor,\n                    },\n                }, materialUI_languages[currentLanguage]),\n            [currentLanguage, themeSettings.currentColor],\n        );\n        return (\n            <ThemeProvider theme={theme}>\n                <Component {...props} />\n            </ThemeProvider>\n        );\n    }\n    return WithThemeProvider;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    themeSettings: state.themeColor,\n    openMenu: state.miscellaneous.drawerOpen\n});\n\nconst mapDispatchToProps = {\n    setThemeColor\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withThemeProvider(Root));","import React from 'react';\nimport { render } from 'react-dom'\n\n// Common\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./components/Store\"\nimport Root from \"./components/Root\";\n\n// For v4 to v5 migration \nimport { StyledEngineProvider } from '@mui/material/styles';\n\n// For translation\nimport {I18nextProvider, initReactI18next} from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport i18next from \"i18next\";\n\nimport common_fr from \"./translations/fr/common.json\";\nimport common_en from \"./translations/en/common.json\";\n\n// the translations\nconst resources = {\n    fr: {\n        common: common_fr // 'common' is our custom namespace\n    },\n    en: {\n        common: common_en\n    }\n}\n\ni18next\n    .use(detector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        interpolation: { escapeValue: false },  // React already does escaping\n        //lng: \"fr\", // the language to use by default // <--- turn off for detection to work\n        fallbackLng: 'fr', // if detected lng is not available\n        supportedLngs: ['fr', 'en'],\n        resources\n    });\n\nrender(\n    <StyledEngineProvider injectFirst>\n        <I18nextProvider i18n={i18next}>\n            <Root store={store} />\n        </I18nextProvider>\n    </StyledEngineProvider>, \n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}