{"version":3,"file":"static/js/673.3cd18e4f.chunk.js","mappings":"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","sources":["components/GamesView/PlatformIcons.tsx","components/Others/ReloadWrapper.tsx","components/Planning/PlanningColumns.tsx","components/Planning/Planning.tsx"],"sourcesContent":["const platformIcons = {\n    \"PS1\": <>\n        <path d=\"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826s1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\"/>\n    </>,\n    \"PS2\": <>\n        <path d=\"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513.0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292z\"/>\n    </>,\n    \"PS3\": <>\n        <path d=\"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375s-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\"/>\n    </>,\n    \"PSP\":  <>\n        <path d=\"M3.238 9.313h5.133v1.52h-4.93v1.32h-.203v-1.52h4.93V9.512h-4.93v-.199m11.539 1.519v1.32h-.199v-1.52h4.926v-1.12h-4.926v-.199h5.129v1.52h-4.93\"/>\n        <path d=\"M10.988 9.313v2.641H8.371v.199h2.828V9.512h2.613v-.199h-2.824\"/>\n    </>,\n    \"PC\": <>\n        <path d=\"M4.539 7.516v6.371h3.148l.008-2.148.012-2.141.918-.012.918-.008 1.004-.988 1.004-.984V3.148l-1.023-1.004-1.02-1.004H4.539z\"/>\n        <path d=\"M8.281 5.41l.008 1.703L8 7.102l-.293-.012-.012-1.684-.008-1.684.25-.008.293-.012c.023.004.043.605.051 1.707zm4.813-3.262l-1.02 1v8.77l1.004.984 1.008.984h3.371l1.004-.988 1-.98-.016-3.5h-3.301l-.012 1.461-.008 1.469h-.523V3.719h.523l.008 1.207.012 1.207h3.301l.016-2.984-1.02-1-1.023-1.008h-3.301z\"/>\n    </>,\n    \"GBA\": <>\n        <path d=\"M12 19.199c-2.543 0-4.32-.238-5.281-.77-.191-.094-.336-.141-.43-.141-2.879-.098-4.32-1.105-4.898-1.73-.285-.289-.43-.621-.43-1.055 0-2.113.094-6 .48-7.488.191-.766.91-1.297 1.727-1.297s2.063-.77 2.883-1.488c.379-.285.813-.43 1.246-.43h9.453c.48 0 .961.191 1.25.48.625.574 1.969 1.438 2.832 1.438.816 0 1.535.531 1.727 1.297.336 1.297.48 4.656.48 7.441 0 .434-.145.766-.43 1.055-.625.625-2.02 1.633-4.898 1.727-.191 0-.336.051-.383.098-.863.574-2.641.863-5.328.863zm-5.711-1.871c.238 0 .527.098.863.242.48.238 1.68.668 4.848.668 3.359 0 4.465-.477 4.75-.668.242-.195.578-.289.961-.289 2.594-.098 3.84-1.059 4.223-1.441.098-.098.145-.238.145-.383 0-2.641-.141-6-.477-7.152-.098-.336-.434-.574-.77-.574C19.535 7.73 18 6.625 17.328 6c-.191-.191-.434-.191-.578-.191H7.297c-.191 0-.434.098-.625.242-.285.238-2.016 1.629-3.504 1.629-.383 0-.672.242-.766.578-.336 1.199-.48 4.559-.48 7.246 0 .145.047.289.145.387.383.379 1.629 1.34 4.223 1.438zM3.84 8.641h.961v2.879H3.84zm-.961 1.918v-.957h2.883v.957zm17.52-1.918a.74.74 0 0 1 .723.719.74.74 0 0 1-.723.719.74.74 0 0 1-.719-.719.74.74 0 0 1 .719-.719zm-1.437 1.438a.74.74 0 0 1 .719.723.74.74 0 0 1-.719.719.74.74 0 0 1-.723-.719.74.74 0 0 1 .723-.723zm-13.25 3.793c.098-.238 0-.527-.191-.621l-1.441-.723c-.238-.098-.527 0-.621.191-.098.242 0 .531.191.625l1.441.719c.047.047.141.047.191.047.191.051.336-.043.43-.238zm0 1.922c.098-.242 0-.527-.191-.625l-1.441-.719c-.238-.098-.527 0-.621.191-.098.238 0 .527.191.625l1.441.719c.047.047.141.047.191.047.191.047.336-.047.43-.238zm10.129.047H8.16c-.574 0-.961-.383-.961-.961V8.641c0-.578.387-.961.961-.961h7.68c.574 0 .961.383.961.961v6.238c0 .578-.387.961-.961.961zM8.16 8.641v6.238h7.68V8.641zm10.414 5.23l1.922-.961c.094-.047.145-.191.094-.336-.047-.094-.191-.145-.336-.094l-1.918.961c-.098.047-.145.191-.098.336.051.094.145.145.191.145.098 0 .145 0 .145-.051zm0 .961l1.922-.961c.094-.047.145-.191.094-.336-.047-.094-.191-.145-.336-.094l-1.918.957c-.098.051-.145.191-.098.336.051.098.145.145.191.145.098 0 .145 0 .145-.047zm0 .961l1.922-.961c.094-.047.145-.191.094-.336-.047-.098-.191-.145-.336-.098l-1.918.961c-.098.051-.145.191-.098.336.051.098.145.145.191.145.098 0 .145 0 .145-.047zm0 0\"/>\n    </>\n}\nexport default platformIcons;","import { Suspense, lazy } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// Icons\nconst CircularProgress = lazy(() => import(\"@mui/material/CircularProgress\"));\nconst Fab = lazy(() => import(\"@mui/material/Fab\"));\nconst AutorenewIcon = lazy(() => import(\"@mui/icons-material/Autorenew\"));\n\n// Custom\nconst CenteredGrid = lazy(() => import(\"./CenteredGrid\"));\n\n// The reload wrapper component\nfunction ReloadWrapper(props : {\n    loading: boolean;\n    error: Error | null | undefined;\n    reloadFct: () => any;\n    component: JSX.Element;\n    [key: string | number | symbol] : any\n}) {\n\n    const {loading, error, component, reloadFct} = props;\n    const { t } = useTranslation('common');\n\n    return <Suspense fallback={null}>\n        {loading && <CenteredGrid><CircularProgress/></CenteredGrid>}\n        {error && <>\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>}\n        { ( !loading && !error) && <>{component}</> }\n    </Suspense>\n}\n\nexport default ReloadWrapper;\n","// icons\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport HourglassEmptyIcon from '@mui/icons-material/HourglassEmpty';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport type { GridRenderCellParams, GridColDef } from '@mui/x-data-grid';\n\n// Others\nimport Tooltip from '@mui/material/Tooltip';\n\n// Platform icons\nimport iconsSVG from \"../GamesView/PlatformIcons\";\nimport type { Platform } from '../../services/sharedDefintion';\n\nconst renderNumberAsDate = (language : string, date_options : any) => (params : GridRenderCellParams<string | undefined>) => <>\n    { (params.value) ? new Date(params.value).toLocaleDateString(language, date_options) : null }\n</>\n\n// columns definitions\nconst planningColumns = (t : (key: string, ...rest : any) => string, date_options : any, language : string) => [\n    {\n        field: \"title\", \n        headerName: t(\"planning.columns.title\"),\n        headerAlign: 'center',\n        renderCell: (params : GridRenderCellParams) => (\n            <Tooltip title={params.value} aria-label={params.value}>\n                <div>\n                    {params.value}\n                </div>\n            </Tooltip>\n        ),\n        width: 270\n    },\n    {\n        field: \"platform\",\n        headerName: t(\"planning.columns.platform\"),\n        renderCell: (params : GridRenderCellParams) => (\n            <SvgIcon titleAccess={params.value}>\n                {iconsSVG[params.value as Platform]}\n            </SvgIcon>\n        ),\n        width: 160\n    },\n    {\n        field: \"releaseDate\", \n        headerName: t(\"planning.columns.releaseDate\"),\n        headerAlign: 'center',\n        renderCell: renderNumberAsDate(language, date_options),\n        width: 220\n    },\n    {\n        field: \"endDate\", \n        headerName: t(\"planning.columns.endDate\"),\n        headerAlign: 'center',\n        renderCell: renderNumberAsDate(language, date_options),\n        width: 220,\n        hide: true\n    },\n    {\n        field: \"status\",\n        headerName: t(\"planning.columns.status\"),\n        renderCell: (params : GridRenderCellParams) => (\n            <Tooltip title={t(\"planning.states.\" + params.value )} aria-label={params.value}>\n                { \n                    (params.value === \"RECORDED\") ? <CheckCircleIcon /> : <HourglassEmptyIcon />\n                }\n            </Tooltip>\n        ),\n        width: 130\n    }\n] as GridColDef[];\n\nexport default planningColumns;","import { useEffect } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Material UI\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport type { GridSlotsComponent } from '@mui/x-data-grid';\n\n// Realod Wrapper\nimport ReloadWrapper from \"../Others/ReloadWrapper\";\n// columns definitions\nimport getTableColumns from \"./PlanningColumns\";\nimport { useAsyncMemo } from \"../../hooks/useAsyncMemo\";\n\n// Redux\nimport { fetchPlanning } from \"../../services/planningSlice\";\nimport type { RootState, AppDispatch } from '../Store';\n\nfunction Viewer(_props : {[key: string | number | symbol] : any}) {\n\n    const dispatch: AppDispatch = useDispatch();\n    const loading = useSelector((state: RootState) => state.planning.loading);\n    const error = useSelector((state: RootState) => state.planning.error);\n    const data = useSelector((state: RootState) => state.planning.planning);\n    const { t } = useTranslation('common');\n\n    // on mount, load data (only once)\n    useEffect(() => {\n        dispatch(fetchPlanning());\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    )\n\n    const date_options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n\n    const { i18n } = useTranslation('common');\n    const language = i18n.language;\n    const columns = getTableColumns(t, date_options, language);\n    const customLocaleText = useAsyncMemo(async () => {\n        switch(language) {\n            case 'fr':\n                const { \n                    frFR : {\n                        components : {\n                            MuiDataGrid : {\n                                defaultProps : {\n                                    localeText\n                                }\n                            }\n                        }\n                    }\n                } = await import(\"@mui/x-data-grid\");\n                return localeText;\n            // English is by default built-in in @mui package, so no need to include\n            default:\n                return {};\n        }\n    }, [language], {} as any);\n\n    let components : Partial<GridSlotsComponent> = {\n        Toolbar: GridToolbar\n    };\n\n    return <ReloadWrapper \n        loading={loading}\n        error={error}\n        reloadFct={() => {dispatch(fetchPlanning());}}\n        component={\n            <div style={{ height: 450, width: '100%' }}>\n                <div style={{ display: 'flex', height: '100%' }}>\n                    <div style={{ flexGrow: 1 }}>\n                        <DataGrid \n                            rows={data} \n                            columns={columns} \n                            disableSelectionOnClick \n                            //disableExtendRowFullWidth // No needed for now\n                            disableColumnFilter // or filterable: false in each column\n                            autoHeight  \n                            localeText={customLocaleText}\n                            components={components}\n                            sortingOrder={['asc', 'desc']}\n                            initialState={{\n                                sorting: {\n                                  sortModel: [{ field: 'releaseDate', sort: 'asc' }],\n                                },\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>            \n        } \n    />\n}\n\nexport default Viewer;\n"],"names":["platformIcons","d","CircularProgress","lazy","Fab","AutorenewIcon","CenteredGrid","props","loading","error","component","reloadFct","t","useTranslation","Suspense","fallback","variant","size","color","onClick","renderNumberAsDate","language","date_options","params","value","Date","toLocaleDateString","field","headerName","headerAlign","renderCell","Tooltip","title","width","SvgIcon","titleAccess","iconsSVG","hide","CheckCircle","HourglassEmpty","_props","dispatch","useDispatch","useSelector","state","planning","data","useEffect","fetchPlanning","i18n","columns","getTableColumns","weekday","year","month","day","customLocaleText","useAsyncMemo","localeText","frFR","components","MuiDataGrid","defaultProps","Toolbar","GridToolbar","ReloadWrapper","style","height","display","flexGrow","DataGrid","rows","disableSelectionOnClick","disableColumnFilter","autoHeight","sortingOrder","initialState","sorting","sortModel","sort"],"sourceRoot":""}