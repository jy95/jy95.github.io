{"version":3,"file":"static/js/89.ec46d1c5.chunk.js","mappings":"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","sources":["components/GamesView/CardDialog.tsx"],"sourcesContent":["import { lazy } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\n// For full screen Dialog \nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// For snackbars\nimport { useSnackbar } from 'notistack';\nimport type { CardGame } from \"../../services/sharedDefintion\";\n\n// For Dialog\nconst Dialog = lazy(() => import(\"@mui/material/Dialog\"));\nconst DialogActions = lazy(() => import(\"@mui/material/DialogActions\"));\nconst DialogContent = lazy(() => import(\"@mui/material/DialogContent\"));\nconst DialogTitle = lazy(() => import(\"@mui/material/DialogTitle\"));\n\n// For a custom contextMenu (nice for UI)\nconst List = lazy(() => import(\"@mui/material/List\"));\nconst ListItem = lazy(() => import(\"@mui/material/ListItem\"));\nconst ListItemIcon = lazy(() => import(\"@mui/material/ListItemIcon\"));\nconst ListItemText = lazy(() => import(\"@mui/material/ListItemText\"));\nconst Button = lazy(() => import(\"@mui/material/Button\"));\n\n// Icons for contextMenu\nconst YouTubeIcon = lazy(() => import(\"@mui/icons-material/YouTube\"));\nconst PlayArrowIcon = lazy(() => import(\"@mui/icons-material/PlayArrow\"));\nconst FileCopyIcon = lazy(() => import(\"@mui/icons-material/FileCopy\"));\nconst RedditIcon = lazy(() => import(\"@mui/icons-material/Reddit\"));\nconst TwitterIcon = lazy(() => import(\"@mui/icons-material/Twitter\"));\nconst FacebookIcon = lazy(() => import(\"@mui/icons-material/Facebook\"));\n\n// labels\nconst LABEL_WATCH_ON_YT = \"gamesLibrary.actionsButton.watchOnYt\";\nconst LABEL_WATCH_HERE = \"gamesLibrary.actionsButton.watchHere\";\nconst LABEL_COPY_LINK = \"gamesLibrary.actionsButton.copyLink\";\nconst LABEL_TWITTER = \"gamesLibrary.actionsButton.shareOnTwitter\";\nconst LABEL_FACEBOOK = \"gamesLibrary.actionsButton.shareOnFacebook\";\nconst LABEL_REDDIT = \"gamesLibrary.actionsButton.shareOnReddit\";\nconst LABEL_CLOSE_BUTTON = \"gamesLibrary.actionsButton.closeContextMenu\";\nconst LABEL_COPIED_LINK = \"gamesLibrary.snackbarsMessages.copiedLink\";\n\nfunction CardDialog(props : {\n    game: CardGame;\n    contextMenuState : [boolean, (x: boolean) => void]\n}) {\n    \n    // hooks\n    const { t } = useTranslation('common');\n    const navigate = useNavigate();\n    const fullScreen = useMediaQuery( (theme : any) => theme.breakpoints.down('md'));\n    const { enqueueSnackbar } = useSnackbar();\n\n    // props\n    const {game, contextMenuState: [contextMenuOpen,setContextMenuOpen]} = props;\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.id : \"/video/\" + game.id;\n\n    // dialog options\n    const dialog_options = [\n        // Watch here\n        {\n            \"key\": \"watchHere\",\n            \"icon\": () => <PlayArrowIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_WATCH_HERE, { \"gameName\": gameTitle}),\n            \"onClick\": () => {\n                setContextMenuOpen(false);\n                navigate(local_path);\n            }\n        },\n        // watch on Youtube\n        {\n            \"key\": \"watchOnYoutube\",\n            \"icon\": () => <YouTubeIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_WATCH_ON_YT, { \"gameName\": gameTitle}),\n            \"onClick\": () => {\n                setContextMenuOpen(false);\n                window.location.href = gameURL;\n            }\n        },\n        // Copy link\n        {\n            \"key\": \"copyLink\",\n            \"divider\": true,\n            \"icon\": () => <FileCopyIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_COPY_LINK),\n            \"onClick\": async () => {\n                if (navigator.clipboard !== undefined) {\n                    await navigator.clipboard.writeText(gameURL);\n                    enqueueSnackbar(\n                        t(LABEL_COPIED_LINK, { \"gameName\": gameTitle }),\n                        {\n                            \"variant\": \"success\",\n                            \"autoHideDuration\": 2500\n                        }\n                    )\n                    setContextMenuOpen(false);\n                }\n            }\n        },\n        // Share on Twitter\n        {\n            \"key\": \"share-on-twitter\",\n            \"icon\": () => <TwitterIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_TWITTER),\n            \"onClick\": () => {\n                window.open(\"https://twitter.com/intent/tweet?url=\" + encodeURIComponent(gameURL), \"_blank\");\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Facebook\n        {\n            \"key\": \"share-on-facebook\",\n            \"icon\": () => <FacebookIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_FACEBOOK),\n            \"onClick\": () => {\n                window.open(\"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(gameURL), \"_blank\")\n                setContextMenuOpen(false);\n            }\n        },\n        // Share on Reddit\n        {\n            \"key\": \"share-on-reddit\",\n            \"icon\": () => <RedditIcon fontSize=\"small\"/>,\n            \"text\": t(LABEL_REDDIT),\n            \"onClick\": () => {\n                window.open(\"http://www.reddit.com/submit?title=\" + encodeURIComponent(gameTitle) + \"&url=\" + encodeURIComponent(gameURL) + \"&title=\",\"_blank\")\n                setContextMenuOpen(false);\n            }\n        }\n    ];\n\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            aria-labelledby=\"game-context-dialog-title\"\n            open={contextMenuOpen}\n            onClose={() => setContextMenuOpen(false)}\n        >\n            <DialogTitle id=\"game-context-dialog-title\">\n                {gameTitle}    \n            </DialogTitle>\n            <DialogContent>\n                <List>\n                    {\n                        dialog_options.map(option => \n                            <ListItem\n                                onClick={option.onClick}\n                                divider={option.divider || false}\n                                key={option.key}\n                            >\n                                <ListItemIcon>\n                                    {option.icon()}\n                                </ListItemIcon>\n                                <ListItemText primary={option.text} />\n                            </ListItem>\n                        )  \n                    }\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={() => {setContextMenuOpen(false)}}>{t(LABEL_CLOSE_BUTTON)}</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default CardDialog;"],"names":["Dialog","lazy","DialogActions","DialogContent","DialogTitle","List","ListItem","ListItemIcon","ListItemText","Button","YouTubeIcon","PlayArrowIcon","FileCopyIcon","RedditIcon","TwitterIcon","FacebookIcon","props","t","useTranslation","navigate","useNavigate","fullScreen","useMediaQuery","theme","breakpoints","down","enqueueSnackbar","useSnackbar","game","contextMenuState","contextMenuOpen","setContextMenuOpen","gameTitle","title","gameURL","url","local_path","url_type","id","dialog_options","fontSize","window","location","href","undefined","navigator","clipboard","writeText","open","encodeURIComponent","onClose","map","option","onClick","divider","icon","primary","text","key","autoFocus"],"sourceRoot":""}