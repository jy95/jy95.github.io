{"version":3,"file":"static/js/8065.a155e83a.chunk.js","mappings":"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","sources":["components/GamesView/PlatformIcons.tsx","components/Others/ReloadWrapper.tsx","components/Planning/PlanningColumns.tsx","components/Planning/PlanningFrenchLabels.tsx","components/Planning/Planning.tsx"],"sourcesContent":["const platformIcons = {\n    \"PS1\": \"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826.586.195 1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\",\n    \"PS2\": \"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513 0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292Z\",\n    \"PS3\": \"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375 0-.778-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\",\n    \"PSP\":  `\n        M 3.238281 9.3125 L 8.371094 9.3125 L 8.371094 10.832031 L 3.441406 10.832031 L 3.441406 12.152344 L 3.238281 12.152344 L 3.238281 10.632812 L 8.167969 10.632812 L 8.167969 9.511719 L 3.238281 9.511719 L 3.238281 9.3125 \n        M 14.777344 10.832031 L 14.777344 12.152344 L 14.578125 12.152344 L 14.578125 10.632812 L 19.503906 10.632812 L 19.503906 9.511719 L 14.578125 9.511719 L 14.578125 9.3125 L 19.707031 9.3125 L 19.707031 10.832031 L 14.777344 10.832031 \n        M 10.988281 9.3125 L 10.988281 11.953125 L 8.371094 11.953125 L 8.371094 12.152344 L 11.199219 12.152344 L 11.199219 9.511719 L 13.8125 9.511719 L 13.8125 9.3125 L 10.988281 9.3125\n    `,\n    \"PC\": `\n        M4.539062 7.515625 L 4.539062 13.886719 L 7.6875 13.886719 L 7.695312 11.738281 L 7.707031 9.597656 L 8.625 9.585938 L 9.542969 9.578125 L 10.546875 8.589844 L 11.550781 7.605469 L 11.550781 3.148438 L 10.527344 2.144531 L 9.507812 1.140625 L 4.539062 1.140625 Z \n        M8.28125 5.410156 L 8.289062 7.113281 L 8 7.101562 L 7.707031 7.089844 L 7.695312 5.40625 L 7.6875 3.722656 L 7.9375 3.714844 C 8.082031 3.707031 8.210938 3.703125 8.230469 3.703125 C 8.253906 3.707031 8.273438 4.308594 8.28125 5.410156 Z \n        M8.28125 5.410156 \n        M13.09375 2.148438 L 12.074219 3.148438 L 12.074219 11.917969 L 13.078125 12.902344 L 14.085938 13.886719 L 17.457031 13.886719 L 18.460938 12.898438 L 19.460938 11.917969 L 19.445312 8.417969 L 16.144531 8.417969 L 16.132812 9.878906 L 16.125 11.347656 L 15.601562 11.347656 L 15.601562 3.71875 L 16.125 3.71875 L 16.132812 4.925781 L 16.144531 6.132812 L 19.445312 6.132812 L 19.460938 3.148438 L 18.441406 2.148438 L 17.417969 1.140625 L 14.117188 1.140625 Z \n        M13.09375 2.148438\n    `,\n    \"GBA\": `\n        M 12 19.199219 C 9.457031 19.199219 7.679688 18.960938 6.71875 18.429688 C 6.527344 18.335938 6.382812 18.289062 6.289062 18.289062 C 3.410156 18.191406 1.96875 17.183594 1.390625 16.558594 C 1.105469 16.269531 0.960938 15.9375 0.960938 15.503906 C 0.960938 13.390625 1.054688 9.503906 1.441406 8.015625 C 1.632812 7.25 2.351562 6.71875 3.167969 6.71875 C 3.984375 6.71875 5.230469 5.949219 6.050781 5.230469 C 6.429688 4.945312 6.863281 4.800781 7.296875 4.800781 L 16.75 4.800781 C 17.230469 4.800781 17.710938 4.992188 18 5.28125 C 18.625 5.855469 19.96875 6.71875 20.832031 6.71875 C 21.648438 6.71875 22.367188 7.25 22.558594 8.015625 C 22.894531 9.3125 23.039062 12.671875 23.039062 15.457031 C 23.039062 15.890625 22.894531 16.222656 22.609375 16.511719 C 21.984375 17.136719 20.589844 18.144531 17.710938 18.238281 C 17.519531 18.238281 17.375 18.289062 17.328125 18.335938 C 16.464844 18.910156 14.6875 19.199219 12 19.199219 Z \n        M 6.289062 17.328125 C 6.527344 17.328125 6.816406 17.425781 7.152344 17.570312 C 7.632812 17.808594 8.832031 18.238281 12 18.238281 C 15.359375 18.238281 16.464844 17.761719 16.75 17.570312 C 16.992188 17.375 17.328125 17.28125 17.710938 17.28125 C 20.304688 17.183594 21.550781 16.222656 21.933594 15.839844 C 22.03125 15.742188 22.078125 15.601562 22.078125 15.457031 C 22.078125 12.816406 21.9375 9.457031 21.601562 8.304688 C 21.503906 7.96875 21.167969 7.730469 20.832031 7.730469 C 19.535156 7.730469 18 6.625 17.328125 6 C 17.136719 5.808594 16.894531 5.808594 16.75 5.808594 L 7.296875 5.808594 C 7.105469 5.808594 6.863281 5.90625 6.671875 6.050781 C 6.386719 6.289062 4.65625 7.679688 3.167969 7.679688 C 2.785156 7.679688 2.496094 7.921875 2.402344 8.257812 C 2.066406 9.457031 1.921875 12.816406 1.921875 15.503906 C 1.921875 15.648438 1.96875 15.792969 2.066406 15.890625 C 2.449219 16.269531 3.695312 17.230469 6.289062 17.328125 Z \n        M 3.839844 8.640625 L 4.800781 8.640625 L 4.800781 11.519531 L 3.839844 11.519531 Z \n        M 2.878906 10.558594 L 2.878906 9.601562 L 5.761719 9.601562 L 5.761719 10.558594 Z \n        M 20.398438 8.640625 C 20.785156 8.640625 21.121094 8.976562 21.121094 9.359375 C 21.121094 9.742188 20.785156 10.078125 20.398438 10.078125 C 20.015625 10.078125 19.679688 9.742188 19.679688 9.359375 C 19.679688 8.976562 20.015625 8.640625 20.398438 8.640625 Z \n        M 18.960938 10.078125 C 19.34375 10.078125 19.679688 10.414062 19.679688 10.800781 C 19.679688 11.183594 19.34375 11.519531 18.960938 11.519531 C 18.574219 11.519531 18.238281 11.183594 18.238281 10.800781 C 18.238281 10.414062 18.574219 10.078125 18.960938 10.078125 Z \n        M 5.710938 13.871094 C 5.808594 13.632812 5.710938 13.34375 5.519531 13.25 L 4.078125 12.527344 C 3.839844 12.429688 3.550781 12.527344 3.457031 12.71875 C 3.359375 12.960938 3.457031 13.25 3.648438 13.34375 L 5.089844 14.0625 C 5.136719 14.109375 5.230469 14.109375 5.28125 14.109375 C 5.472656 14.160156 5.617188 14.066406 5.710938 13.871094 Z \n        M 5.710938 15.792969 C 5.808594 15.550781 5.710938 15.265625 5.519531 15.167969 L 4.078125 14.449219 C 3.839844 14.351562 3.550781 14.449219 3.457031 14.640625 C 3.359375 14.878906 3.457031 15.167969 3.648438 15.265625 L 5.089844 15.984375 C 5.136719 16.03125 5.230469 16.03125 5.28125 16.03125 C 5.472656 16.078125 5.617188 15.984375 5.710938 15.792969 Z \n        M 15.839844 15.839844 L 8.160156 15.839844 C 7.585938 15.839844 7.199219 15.457031 7.199219 14.878906 L 7.199219 8.640625 C 7.199219 8.0625 7.585938 7.679688 8.160156 7.679688 L 15.839844 7.679688 C 16.414062 7.679688 16.800781 8.0625 16.800781 8.640625 L 16.800781 14.878906 C 16.800781 15.457031 16.414062 15.839844 15.839844 15.839844 Z \n        M 8.160156 8.640625 L 8.160156 14.878906 L 15.839844 14.878906 L 15.839844 8.640625 Z \n        M 18.574219 13.871094 L 20.496094 12.910156 C 20.589844 12.863281 20.640625 12.71875 20.589844 12.574219 C 20.542969 12.480469 20.398438 12.429688 20.253906 12.480469 L 18.335938 13.441406 C 18.238281 13.488281 18.191406 13.632812 18.238281 13.777344 C 18.289062 13.871094 18.382812 13.921875 18.429688 13.921875 C 18.527344 13.921875 18.574219 13.921875 18.574219 13.871094 Z \n        M 18.574219 14.832031 L 20.496094 13.871094 C 20.589844 13.824219 20.640625 13.679688 20.589844 13.535156 C 20.542969 13.441406 20.398438 13.390625 20.253906 13.441406 L 18.335938 14.398438 C 18.238281 14.449219 18.191406 14.589844 18.238281 14.734375 C 18.289062 14.832031 18.382812 14.878906 18.429688 14.878906 C 18.527344 14.878906 18.574219 14.878906 18.574219 14.832031 Z \n        M 18.574219 15.792969 L 20.496094 14.832031 C 20.589844 14.785156 20.640625 14.640625 20.589844 14.496094 C 20.542969 14.398438 20.398438 14.351562 20.253906 14.398438 L 18.335938 15.359375 C 18.238281 15.410156 18.191406 15.550781 18.238281 15.695312 C 18.289062 15.792969 18.382812 15.839844 18.429688 15.839844 C 18.527344 15.839844 18.574219 15.839844 18.574219 15.792969 Z \n        M 18.574219 15.792969 \n    `\n}\nexport default platformIcons;","import { Suspense, lazy } from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\n// Icons\nconst CircularProgress = lazy(() => import(\"@mui/material/CircularProgress\"));\nconst Fab = lazy(() => import(\"@mui/material/Fab\"));\nconst AutorenewIcon = lazy(() => import(\"@mui/icons-material/Autorenew\"));\n\n// Custom\n// @ts-ignore\nconst CenteredGrid = lazy(() => import(\"./CenteredGrid.tsx\"));\n// @ts-ignore\nconst SnackbarWrapper = lazy(() => import(\"./CustomSnackbar.tsx\"));\n\n// The reload wrapper component\nfunction ReloadWrapper(props) {\n\n    const {loading, error, component, reloadFct} = props as {\n        loading: boolean;\n        error: Error | undefined;\n        reloadFct: () => any;\n        component: JSX.Element;\n        [key: string]: any;\n    };\n    const { t } = useTranslation('common');\n\n    const RealComponent = () => {\n        return component;\n    }\n\n    return <Suspense fallback={null}>\n        {loading && <CenteredGrid><CircularProgress/></CenteredGrid>}\n        {error && <>\n            <SnackbarWrapper\n                variant={\"error\"}\n                message={error}\n            />\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>}\n        { ( (loading === false) && !error) && <RealComponent /> }\n    </Suspense>\n}\n\nexport default ReloadWrapper;\n","// icons\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport HourglassEmptyIcon from '@mui/icons-material/HourglassEmpty';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport { GridRenderCellParams } from '@mui/x-data-grid';\n\n// Others\nimport Tooltip from '@mui/material/Tooltip';\n\n// Platform icons\n// @ts-ignore\nimport iconsSVG from \"../GamesView/PlatformIcons.tsx\";\n\nconst renderNumberAsDate = (language : string, date_options) => (params : GridRenderCellParams<string | undefined>) => <>\n    { (params.value) ? new Date(params.value).toLocaleDateString(language, date_options) : null }\n</>\n\n// columns definitions\nconst planningColumns = (t, date_options, language) => [\n    {\n        field: \"title\", \n        headerName: t(\"planning.columns.title\"),\n        headerAlign: 'center',\n        renderCell: (params) => (\n            <Tooltip title={params.value} aria-label={params.value}>\n                <div>\n                    {params.value}\n                </div>\n            </Tooltip>\n        ),\n        width: 270\n    },\n    {\n        field: \"platform\",\n        headerName: t(\"planning.columns.platform\"),\n        //headerAlign: 'center',\n        //align: 'center',\n        renderCell: (params) => (\n            <SvgIcon titleAccess={params.value}>\n                <path d={iconsSVG[params.value]} />\n            </SvgIcon>\n        ),\n        width: 160\n    },\n    {\n        field: \"releaseDate\", \n        headerName: t(\"planning.columns.releaseDate\"),\n        headerAlign: 'center',\n        renderCell: renderNumberAsDate(language, date_options),\n        width: 220\n    },\n    {\n        field: \"endDate\", \n        headerName: t(\"planning.columns.endDate\"),\n        headerAlign: 'center',\n        renderCell: renderNumberAsDate(language, date_options),\n        width: 220,\n        hide: true\n    },\n    {\n        field: \"status\",\n        headerName: t(\"planning.columns.status\"),\n        //headerAlign: 'center',\n        renderCell: (params) => (\n            <Tooltip title={t(\"planning.states.\" + params.value )} aria-label={params.value}>\n                { \n                    (params.value === \"RECORDED\") ? <CheckCircleIcon /> : <HourglassEmptyIcon />\n                }\n            </Tooltip>\n        ),\n        width: 130\n    }\n];\n\nexport default planningColumns;","const frenchLabels = {\n    // Root\n    rootGridLabel: \"Planning\",\n    noRowsLabel: \"Plus de jeux planifié\",\n    errorOverlayDefaultLabel: \"Une erreur s'est produite\",\n\n    // Density selector toolbar button text\n    toolbarDensity: \"Densité\",\n    toolbarDensityLabel: \"Densité\",\n    toolbarDensityCompact: \"Compact\",\n    toolbarDensityStandard: \"Standard\",\n    toolbarDensityComfortable: \"Confortable\",\n\n    // Columns selector toolbar button text\n    toolbarColumns: \"Colonnes\",\n    toolbarColumnsLabel: \"Afficher le sélecteur de colonne\",\n\n    // Filters toolbar button text\n    toolbarFilters: \"Filtres\",\n    toolbarFiltersLabel: \"Afficher les filtres\",\n    toolbarFiltersTooltipHide: \"Cacher les filtres\",\n    toolbarFiltersTooltipShow: \"Afficher les filtres\",\n    toolbarFiltersTooltipActive: (count) => `${count} filtre(s) actifs`,\n\n    // Columns panel text\n    columnsPanelTextFieldLabel: \"Rechercher la colonne\",\n    columnsPanelTextFieldPlaceholder: \"Nom de la colonne\",\n    columnsPanelDragIconLabel: \"Réordonner la colonne\",\n    columnsPanelShowAllButton: \"Afficher tout\",\n    columnsPanelHideAllButton: \"Cacher tout\",\n\n    // Filter panel text\n    filterPanelAddFilter: \"Ajouter un filtre\",\n    filterPanelDeleteIconLabel: \"Supprimer\",\n    filterPanelOperators: \"Opérateur\",\n    filterPanelOperatorAnd: \"Et\",\n    filterPanelOperatorOr: \"Ou\",\n    filterPanelColumns: \"Colonne\",\n\n    // Column menu text\n    columnMenuLabel: \"Menu\",\n    columnMenuShowColumns: \"Afficher les colonnes\",\n    columnMenuFilter: \"Filtrer\",\n    columnMenuHideColumn: \"Cacher\",\n    columnMenuUnsort: \"Défaire le tri\",\n    columnMenuSortAsc: \"Tri croissant\",\n    columnMenuSortDesc: \"Tri décroissant\",\n\n    // Column header text\n    columnHeaderFiltersTooltipActive: (count) => `${count} filtre(s) actifs`,\n    columnHeaderFiltersLabel: \"Afficher les filtres\",\n    columnHeaderSortIconLabel: \"Trier\",\n\n    // Total rows footer text\n    footerTotalRows: \"Total de jeux planifiés :\",\n\n    // Pagination footer text\n    footerPaginationRowsPerPage: \"Lignes par page :\",\n\n    // Export\n    toolbarExport: \"Export\",\n    toolbarExportLabel: \"Export\",\n    toolbarExportCSV: \"Export en CSV\"\n};\n\nexport default frenchLabels;","import { useEffect } from 'react';\nimport i18n from 'i18next';\nimport {useTranslation} from \"react-i18next\";\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Material UI\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n\n// Realod Wrapper\n// @ts-ignore\nimport ReloadWrapper from \"../Others/ReloadWrapper.tsx\";\n// columns definitions\n// @ts-ignore\nimport getTableColumns from \"./PlanningColumns.tsx\";\n// Custom French translation\n// @ts-ignore\nimport customTranslation from \"./PlanningFrenchLabels.tsx\";\n\n// Redux\n// @ts-ignore\nimport { RootState, AppDispatch } from '../Store.tsx';\n// @ts-ignore\nimport { fetchPlanning } from \"../../services/planningSlice.tsx\";\n\nfunction Viewer(_props) {\n\n    const dispatch: AppDispatch = useDispatch();\n    const loading = useSelector((state: RootState) => state.planning.loading);\n    const error = useSelector((state: RootState) => state.planning.error);\n    const data = useSelector((state: RootState) => state.planning.planning);\n    const { t } = useTranslation('common');\n\n    // on mount, load data (only once)\n    useEffect(() => {\n        dispatch(fetchPlanning());\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    )\n\n    const date_options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n    const language = i18n.language;\n    const columns = getTableColumns(t, date_options, language);\n    const customLocaleText = (language.startsWith(\"fr\")) ? customTranslation : {};\n\n    return <ReloadWrapper \n        loading={loading}\n        error={error}\n        reloadFct={() => {dispatch(fetchPlanning());}}\n        component={\n            <div style={{ height: 450, width: '100%' }}>\n                <div style={{ display: 'flex', height: '100%' }}>\n                    <div style={{ flexGrow: 1 }}>\n                        <DataGrid \n                            rows={data} \n                            columns={columns as any} \n                            disableSelectionOnClick \n                            //disableExtendRowFullWidth // No needed for now\n                            disableColumnFilter // or filterable: false in each column\n                            autoHeight  \n                            localeText={customLocaleText}\n                            components={{ Toolbar: GridToolbar }}\n                            sortingOrder={['asc', 'desc']}\n                            initialState={{\n                                sorting: {\n                                  sortModel: [{ field: 'releaseDate', sort: 'asc' }],\n                                },\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>            \n        } \n    />\n}\n\nexport default Viewer;\n"],"names":["CircularProgress","lazy","Fab","AutorenewIcon","CenteredGrid","SnackbarWrapper","props","loading","error","component","reloadFct","t","useTranslation","RealComponent","Suspense","fallback","variant","message","size","color","onClick","renderNumberAsDate","language","date_options","params","value","Date","toLocaleDateString","field","headerName","headerAlign","renderCell","Tooltip","title","width","SvgIcon","titleAccess","d","iconsSVG","hide","CheckCircle","HourglassEmpty","rootGridLabel","noRowsLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerTotalRows","footerPaginationRowsPerPage","toolbarExport","toolbarExportLabel","toolbarExportCSV","_props","dispatch","useDispatch","useSelector","state","planning","data","useEffect","fetchPlanning","i18n","columns","getTableColumns","weekday","year","month","day","customLocaleText","startsWith","customTranslation","ReloadWrapper","style","height","display","flexGrow","DataGrid","rows","disableSelectionOnClick","disableColumnFilter","autoHeight","localeText","components","Toolbar","GridToolbar","sortingOrder","initialState","sorting","sortModel","sort"],"sourceRoot":""}