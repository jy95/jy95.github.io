{"version":3,"file":"static/js/2466.e611bed6.chunk.js","mappings":"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","sources":["components/GamesView/CardEntry.tsx","../node_modules/@mui/material/Accordion/AccordionContext.js","../node_modules/@mui/material/Accordion/accordionClasses.js","../node_modules/@mui/material/Accordion/Accordion.js","../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","components/GamesView/GamesGalleryList.tsx","components/Others/ReloadWrapper.tsx","../node_modules/@mui/icons-material/ExpandMore.js"],"sourcesContent":["import { Suspense, useState, lazy } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// To check what should happen when clicking on a game\nimport { useTheme, styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardActionArea from '@mui/material/CardActionArea';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport Image from '@jy95/material-ui-image';\n// @ts-ignore\nconst CardDialog = lazy(() => import(\"./CardDialog.tsx\"));\n\nconst PREFIX = 'CardEntry';\n\nconst classes = {\n    gameRoot: `${PREFIX}-gameRoot`,\n    gameCover: `${PREFIX}-gameCover`,\n    MuiCardActionArea: `${PREFIX}-MuiCardActionArea`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.gameRoot}`]: {\n        position: \"relative\",\n        //height: \"100%\"\n    },\n    [`& .${classes.gameCover}`]: {\n        zIndex: 1,\n        //height: \"inherit\"\n    },\n    [`& .${classes.MuiCardActionArea}`]: {\n        height: \"inherit\",\n        zIndex: 1\n    }\n}));\n\n// for responsive pictures\nconst PICTURE_SIZES = [\"small\", \"medium\", \"big\"];\nconst SIZES_WITDH = {\n    \"small\": \"150w\",\n    \"medium\": \"200w\",\n    \"big\": \"250w\"\n}\n\nfunction CardEntry(props) {\n\n    // hooks\n    const theme = useTheme();\n    const navigate = useNavigate();\n\n    // props\n    const {game} = props;\n\n    const is_mobile_device = useMediaQuery(theme.breakpoints.down('md'));\n\n    // state of context menu\n    const [contextMenuOpen,setContextMenuOpen] = useState(false);\n    \n    // consts\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId;\n\n    function watchGame() {\n        if (is_mobile_device) {\n            window.location.href = gameURL;\n        } else {\n            navigate(local_path);\n        }\n    }\n\n    // image properties\n    let imageProps : {\n        src: string,\n        alt: string,\n        srcSet?: string\n    } = {\n        src: game.imagePath,\n        alt: gameTitle\n    };\n\n    // only \n    if (game?.hasResponsiveImages) {\n        // TODO maybe in the future make that stuff more configurable\n        imageProps.srcSet= PICTURE_SIZES\n            .map(size=>`${game.imagesFolder}/cover@${size}.webp ${SIZES_WITDH[size]}`)\n            .join(\",\");\n    }\n\n    return (\n        <StyledCard className={classes.gameRoot}>\n\n            <CardActionArea \n                onClick={watchGame}\n                onContextMenu={(event) => {\n                    event.preventDefault();\n                    setContextMenuOpen(true);\n                }}\n                classes={{root: classes.MuiCardActionArea}}\n            >\n                <CardMedia\n                    className={classes.gameCover}\n                    title={gameTitle}\n                >\n                    <Image \n                        {...imageProps}\n                        //disableSpinner={true} \n                        loading={<Skeleton variant=\"rectangular\" />}\n                    />\n                </CardMedia>\n\n            </CardActionArea>\n            <Suspense fallback={null}>\n                <CardDialog game={game} contextMenuState={[contextMenuOpen,setContextMenuOpen]} />\n            </Suspense>\n        </StyledCard>\n    );\n}\n\nexport default CardEntry;","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nconst AccordionContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&:before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&:before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&:before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, !ownerState.square && {\n  borderRadius: 0,\n  '&:first-of-type': {\n    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n    borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n  },\n  '&:last-of-type': {\n    borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n    borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n    // Fix a rendering issue on Edge\n    '@supports (-ms-ime-align: auto)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }\n}, !ownerState.disableGutters && {\n  [`&.${accordionClasses.expanded}`]: {\n    margin: '16px 0'\n  }\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n\n  const ownerState = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionContext.Provider, {\n      value: contextValue,\n      children: summary\n    }), /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends({\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    }\n  }, !ownerState.disableGutters && {\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      minHeight: 64\n    }\n  });\n});\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0'\n}, !ownerState.disableGutters && {\n  transition: theme.transitions.create(['margin'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    margin: '20px 0'\n  }\n}));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import { Suspense, lazy, useEffect } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Grid from \"@mui/material/Grid\";\n\n// Custom\n// @ts-ignore\nimport ReloadWrapper from \"../Others/ReloadWrapper.tsx\";\n// @ts-ignore\nimport CardEntry from \"./CardEntry.tsx\";\n// @ts-ignore\nimport type { RootState, AppDispatch } from '../Store.tsx';\nimport { \n    fetchSeries\n} \n// @ts-ignore\nfrom \"../../services/seriesSlice.tsx\";\n\nconst AccordionDetails = lazy(() => import(\"@mui/material/AccordionDetails\"));\n\nconst PREFIX = 'GamesGalleryList';\n\nconst classes = {\n    gameEntry: `${PREFIX}-gameEntry`\n};\n\nconst StyledSeriesGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    // inspired by the settings https://www.youtube.com/gaming uses ;)\n    [`& .${classes.gameEntry}`]: {\n        // 2 items on [0, sm]\n        [theme.breakpoints.only('xs')]: {\n            flexBasis: \"calc((100% / 2) - 1%)\"\n        },\n        // 4 items on [sm, md[\n        [theme.breakpoints.only('sm')]: {\n            flexBasis: \"calc((100% / 4) - 1%)\"\n        },\n        // 8 items on [md, infinity]\n        [theme.breakpoints.up('md')]: {\n            flexBasis: \"calc((100% / 8) - 1%)\"\n        },\n    }\n}));\n\n// The gallery component\nfunction GamesGalleryList(_props) {\n\n    const dispatch: AppDispatch = useDispatch();\n    const loading = useSelector((state: RootState) => state.series.loading);\n    const error = useSelector((state: RootState) => state.series.error);\n    const data = useSelector((state: RootState) => state.series.series);\n\n    // on mount, load data (only once)\n    useEffect(() => {\n        dispatch(fetchSeries());\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ReloadWrapper \n            loading={loading}\n            error={error}\n            reloadFct={() => {dispatch(fetchSeries());}}\n            component={\n                <StyledSeriesGallery>\n                    {\n                        data.map(serie => \n                            <Accordion key={serie.name}>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls={\"panel-content\" + serie.name}\n                                    id={\"panel-header\" + serie.name}\n                                >\n                                    <Typography>{serie.name}</Typography>\n                                </AccordionSummary>\n                                <Suspense fallback={null}>\n                                    <AccordionDetails>\n                                        <Grid\n                                            container\n                                            spacing={1}\n                                            style={\n                                                {\n                                                    rowGap: \"15px\"\n                                                }\n                                            }\n                                        >\n                                            {\n                                                serie\n                                                    .items\n                                                    .map(game => \n                                                            <Grid \n                                                                key={game.playlistId ?? game.videoId} \n                                                                item \n                                                                className={classes.gameEntry}\n                                                            >\n                                                                <CardEntry game={game}/>\n                                                            </Grid>\n                                                    )\n                                            }\n                                        </Grid> \n                                    </AccordionDetails>\n                                </Suspense>\n                            </Accordion>\n                        )\n                    }\n                </StyledSeriesGallery>\n            }\n        />\n    )\n}\n\nexport default GamesGalleryList;","import { Suspense, lazy } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n// For snackbars\nimport { useSnackbar } from 'notistack';\n\n// Icons\nconst CircularProgress = lazy(() => import(\"@mui/material/CircularProgress\"));\nconst Fab = lazy(() => import(\"@mui/material/Fab\"));\nconst AutorenewIcon = lazy(() => import(\"@mui/icons-material/Autorenew\"));\n\n// Custom\n// @ts-ignore\nconst CenteredGrid = lazy(() => import(\"./CenteredGrid.tsx\"));\n\n// The reload wrapper component\nfunction ReloadWrapper(props) {\n\n    const {loading, error, component, reloadFct} = props as {\n        loading: boolean;\n        error: Error | undefined;\n        reloadFct: () => any;\n        component: JSX.Element;\n        [key: string]: any;\n    };\n    const { t } = useTranslation('common');\n    const { enqueueSnackbar } = useSnackbar();\n\n    const RealComponent = () => {\n        return component;\n    }\n\n    if (error){\n        enqueueSnackbar(\n            error.message,\n            {\n                variant: 'error'\n            }\n        )\n    }\n\n    return <Suspense fallback={null}>\n        {loading && <CenteredGrid><CircularProgress/></CenteredGrid>}\n        {error && <>\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>}\n        { ( (loading === false) && !error) && <RealComponent /> }\n    </Suspense>\n}\n\nexport default ReloadWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;"],"names":["CardDialog","lazy","PREFIX","classes","gameRoot","gameCover","MuiCardActionArea","StyledCard","styled","Card","theme","position","zIndex","height","PICTURE_SIZES","SIZES_WITDH","props","useTheme","navigate","useNavigate","game","is_mobile_device","useMediaQuery","breakpoints","down","useState","contextMenuOpen","setContextMenuOpen","gameTitle","title","gameURL","url","local_path","url_type","playlistId","videoId","imageProps","src","imagePath","alt","hasResponsiveImages","srcSet","map","size","imagesFolder","join","className","onClick","window","location","href","onContextMenu","event","preventDefault","root","loading","variant","Suspense","fallback","contextMenuState","React","getAccordionUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AccordionRoot","Paper","name","overridesResolver","styles","ownerState","accordionClasses","region","square","rounded","disableGutters","gutters","transition","duration","transitions","shortest","create","overflowAnchor","left","top","right","content","opacity","backgroundColor","vars","palette","divider","display","marginTop","marginBottom","action","disabledBackground","_extends","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","Accordion","inProps","ref","useThemeProps","childrenProp","children","defaultExpanded","disabled","expandedProp","expanded","onChange","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","state","setExpandedState","handleChange","summary","contextValue","toggle","slots","composeClasses","useUtilityClasses","_jsxs","clsx","_jsx","AccordionContext","value","in","timeout","id","role","getAccordionSummaryUtilityClass","AccordionSummaryRoot","ButtonBase","minHeight","padding","spacing","accordionSummaryClasses","focus","disabledOpacity","cursor","AccordionSummaryContent","flexGrow","AccordionSummaryExpandIconWrapper","expandIconWrapper","color","active","transform","AccordionSummary","expandIcon","focusVisibleClassName","focusVisible","focusRipple","disableRipple","component","AccordionDetails","gameEntry","StyledSeriesGallery","only","flexBasis","up","_props","dispatch","useDispatch","useSelector","series","error","data","useEffect","fetchSeries","ReloadWrapper","reloadFct","serie","ExpandMore","Typography","Grid","container","style","rowGap","items","item","CardEntry","CircularProgress","Fab","AutorenewIcon","CenteredGrid","t","useTranslation","enqueueSnackbar","useSnackbar","RealComponent","message","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}