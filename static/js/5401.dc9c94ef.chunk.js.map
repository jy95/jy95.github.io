{"version":3,"file":"static/js/5401.dc9c94ef.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/Dialog.js"],"sourcesContent":["import * as React from 'react';\nconst DialogContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\nexport default DialogContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => ({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  ...(ownerState.scroll === 'paper' && {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  ...(ownerState.scroll === 'body' && {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  })\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  },\n  ...(ownerState.scroll === 'paper' && {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  }),\n  ...(ownerState.scroll === 'body' && {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n  }),\n\n  ...(!ownerState.maxWidth && {\n    maxWidth: 'calc(100% - 64px)'\n  }),\n  ...(ownerState.maxWidth === 'xs' && {\n    maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n    [`&.${dialogClasses.paperScrollBody}`]: {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  }),\n  ...(ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n    [`&.${dialogClasses.paperScrollBody}`]: {\n      [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  }),\n  ...(ownerState.fullWidth && {\n    width: 'calc(100% - 64px)'\n  }),\n  ...(ownerState.fullScreen && {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    [`&.${dialogClasses.paperScrollBody}`]: {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  })\n}));\n\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, {\n    className: clsx(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: {\n        transitionDuration,\n        as: BackdropComponent,\n        ...BackdropProps\n      }\n    },\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(TransitionComponent, {\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\",\n      ...TransitionProps,\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, {\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby,\n          ...PaperProps,\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;"],"names":["DialogContext","React","getDialogUtilityClass","slot","generateUtilityClass","generateUtilityClasses","DialogBackdrop","styled","Backdrop","name","overrides","props","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","position","DialogContainer","ownerState","container","capitalize","scroll","height","outline","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","theme","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","down","borderRadius","inProps","ref","useThemeProps","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","onBackdropClick","onClose","open","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","classes","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","closeAfterTransition","components","componentsProps","as","onClick","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","value"],"sourceRoot":""}