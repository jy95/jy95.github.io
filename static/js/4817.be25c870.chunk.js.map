{"version":3,"file":"static/js/4817.be25c870.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/locale/index.js"],"sourcesContent":["export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل  إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page}. stránku`;\n          }\n\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n}; // Croatian - Hrvatski\n\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\n\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n\n            return `${page} — бетке өту`;\n          }\n\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n}; // Macedonian - Македонски\n\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n}; // Serbian - Srpski\n\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n\n            return `Перейти на ${page} страницу`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n\n          if (type === 'last') {\n            return '最后一页';\n          }\n\n          if (type === 'next') {\n            return '下一页';\n          }\n\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};"],"names":["amET","components","MuiBreadcrumbs","defaultProps","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","from","to","count","MuiRating","getLabelText","value","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","arEG","arSD","azAZ","pluralForm","lastDigit","bnBD","bgBG","caES","csCZ","daDK","deDE","elGR","enUS","esES","etEE","faIR","fiFI","frFR","heIL","hiIN","hrHR","lastTwoDigits","includes","huHU","hyAM","idID","isIS","itIT","jaJP","khKH","koKR","kzKZ","mkMK","nbNO","nlNL","plPL","ptBR","ptPT","roRO","srRS","ruRU","siLK","skSK","svSE","thTH","trTR","ukUA","viVN","zhCN","zhHK","zhTW"],"sourceRoot":""}