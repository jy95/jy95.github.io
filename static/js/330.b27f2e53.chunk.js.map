{"version":3,"file":"static/js/330.b27f2e53.chunk.js","mappings":"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","sources":["components/GamesView/CardEntry.tsx","components/GamesView/GamesSorters.tsx","components/GamesView/GenresSelect.tsx","components/GamesView/PlatformSelect.tsx","components/GamesView/TitleFilter.tsx","components/GamesView/GamesGalleryGrid.tsx","components/GamesView/PlatformIcons.tsx","components/Others/CenteredGrid.tsx","components/Others/CustomSnackbar.tsx","components/Others/ReloadWrapper.tsx"],"sourcesContent":["import React, {Suspense} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// To check what should happen when clicking on a game\nimport { useTheme, styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardActionArea from '@mui/material/CardActionArea';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport Image from '@jy95/material-ui-image';\n// @ts-ignore\nconst CardDialog = React.lazy(() => import(\"./CardDialog.tsx\"));\n\nconst PREFIX = 'CardEntry';\n\nconst classes = {\n    gameRoot: `${PREFIX}-gameRoot`,\n    gameCover: `${PREFIX}-gameCover`,\n    MuiCardActionArea: `${PREFIX}-MuiCardActionArea`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.gameRoot}`]: {\n        position: \"relative\",\n        //height: \"100%\"\n    },\n    [`& .${classes.gameCover}`]: {\n        zIndex: 1,\n        //height: \"inherit\"\n    },\n    [`& .${classes.MuiCardActionArea}`]: {\n        height: \"inherit\",\n        zIndex: 1\n    }\n}));\n\n// for responsive pictures\nconst PICTURE_SIZES = [\"small\", \"medium\", \"big\"];\nconst SIZES_WITDH = {\n    \"small\": \"150w\",\n    \"medium\": \"200w\",\n    \"big\": \"250w\"\n}\n\nfunction CardEntry(props) {\n\n    // hooks\n    const theme = useTheme();\n    const navigate = useNavigate();\n\n    // props\n    const {game} = props;\n\n    const is_mobile_device = useMediaQuery(theme.breakpoints.down('md'));\n\n    // state of context menu\n    const [contextMenuOpen,setContextMenuOpen] = React.useState(false);\n    \n    // consts\n    const {\n        title: gameTitle,\n        url: gameURL\n    } = game;\n    const local_path = game.url_type === \"PLAYLIST\" ? \"/playlist/\" + game.playlistId : \"/video/\" + game.videoId;\n\n    function watchGame() {\n        if (is_mobile_device) {\n            window.location.href = gameURL;\n        } else {\n            navigate(local_path);\n        }\n    }\n\n    // image properties\n    let imageProps : {\n        src: string,\n        alt: string,\n        srcSet?: string\n    } = {\n        src: game.imagePath,\n        alt: gameTitle\n    };\n\n    // only \n    if (game?.hasResponsiveImages) {\n        // TODO maybe in the future make that stuff more configurable\n        imageProps.srcSet= PICTURE_SIZES\n            .map(size=>`${game.imagesFolder}/cover@${size}.webp ${SIZES_WITDH[size]}`)\n            .join(\",\");\n    }\n\n    return (\n        <StyledCard className={classes.gameRoot}>\n\n            <CardActionArea \n                onClick={watchGame}\n                onContextMenu={(event) => {\n                    event.preventDefault();\n                    setContextMenuOpen(true);\n                }}\n                classes={{root: classes.MuiCardActionArea}}\n            >\n                <CardMedia\n                    className={classes.gameCover}\n                    title={gameTitle}\n                >\n                    <Image \n                        {...imageProps}\n                        //disableSpinner={true} \n                        loading={<Skeleton variant=\"rectangular\" />}\n                    />\n                </CardMedia>\n\n            </CardActionArea>\n            <Suspense fallback={null}>\n                <CardDialog game={game} contextMenuState={[contextMenuOpen,setContextMenuOpen]} />\n            </Suspense>\n        </StyledCard>\n    );\n}\n\nexport default CardEntry;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport Popover from '@mui/material/Popover';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n\n// For sorting criteria reorder\n// Not used as it produces a bug\n//import ButtonGroup from '@mui/material/ButtonGroup';\n//import Switch from '@mui/material/Switch';\n\n// To display ASC / DESC\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\n// To move sort\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nimport {connect} from 'react-redux';\n// @ts-ignore\nimport {sort_games, change_sorting_order} from \"../../actions/games.tsx\";\n\n\n// Sort buttons of GamesGallery\nfunction GamesSorters(props) {\n\n    const { sortState } = props;\n    const { t } = useTranslation('common');\n\n    // To handle criteria enabling (or disabling)\n    const handleSortChange = (event) => {\n        const field = event.target.name;\n        props.sort_games(field);\n    }\n\n    // To handle sort criteria \n    const handleSortOrderChange = (event) => {\n        // Warning : using IconButton, event.target doesn't work as expected\n        const metadata = event.currentTarget;\n        // fetch info\n        const field = metadata.name;\n        const type_of_sort_change = metadata.getAttribute(\"aria-label\");\n        const currentPosition = sortState.findIndex( (entry) => entry[0] === field);\n        const nextPosition = currentPosition + ((type_of_sort_change === \"upSorter\") ? -1 : 1);\n\n        // compute new order\n        let newOrder = [...sortState.map(s => s[0])];\n        newOrder.splice(nextPosition,2,newOrder[currentPosition],newOrder[nextPosition]);\n\n        props.change_sorting_order(newOrder);\n    }\n\n    // For Popover\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    const open = Boolean(anchorEl);\n    const id = open ? 'sort-popover' : undefined;\n\n    // map field to labels in translation file(s)\n    const field_labels = {\n        \"name\": \"gamesLibrary.sortLabels.byName\",\n        \"releaseDate\": \"gamesLibrary.sortLabels.byReleaseDate\",\n        \"duration\": \"gamesLibrary.sortLabels.byDuration\"\n    }\n    // labels for sort buttons (with condition)\n    const sort_button_conditions = {\n        \"upSorter\": (index) => index !== 0,\n        \"downSorter\": (index) => index !== sortState.length -1,\n    }\n\n    return <>\n        <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n            {t(\"gamesLibrary.sortButtonLabel\")}\n        </Button>\n        <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <FormControl component=\"fieldset\" variant=\"standard\">\n                <FormGroup>\n                    {\n                        sortState\n                            .map( ([criteria, currentOrder], index) => \n                                <div\n                                    key={\"searchCriteria_\"+criteria}\n                                >\n                                    <FormControlLabel\n                                        control={\n                                            <>\n                                                <Checkbox \n                                                    checked={currentOrder !== \"ASC\"}\n                                                    onChange={handleSortChange}\n                                                    name={criteria}\n                                                    checkedIcon={<ArrowDropUpIcon />}\n                                                    icon={<ArrowDropDownIcon />} \n                                                />\n                                            </>\n                                        }\n                                        label={t(field_labels[criteria])}\n                                    />\n                                    {\n                                        // Object.keys as I need the following order : UP / DOWN\n                                        Object\n                                            .keys(sort_button_conditions)\n                                            .map(\n                                                sort_key => {\n                                                    const condition_check = sort_button_conditions[sort_key];\n                                                    if (!condition_check(index)) {\n                                                        return null;\n                                                    } else {\n                                                        return (\n                                                            <IconButton \n                                                                aria-label={sort_key} \n                                                                name={criteria} \n                                                                size=\"small\" \n                                                                onClick={handleSortOrderChange}\n                                                                key={criteria + \"_\"+ sort_key}\n                                                            >\n                                                                {\n                                                                    (() => {\n                                                                        switch(sort_key){\n                                                                            case \"upSorter\":\n                                                                                return <ArrowUpwardIcon fontSize=\"inherit\" />\n                                                                            case \"downSorter\":\n                                                                                return <ArrowDownwardIcon fontSize=\"inherit\" />\n                                                                            default:\n                                                                                return null;\n                                                                        }\n                                                                    })()\n                                                                } \n                                                            </IconButton> \n                                                        )\n                                                    }\n                                                }\n                                            )\n                                    }\n                                </div>\n                            )\n                    }\n                </FormGroup>\n            </FormControl>\n        </Popover>\n    </>;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    sortState: state.games.sorters,\n});\n\nconst mapDispatchToProps = {\n    sort_games,\n    change_sorting_order\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesSorters);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\n\nimport {\n    filter_games_by_genre, \n    filter_games_by_title\n} \n// @ts-ignore\nfrom \"../../actions/games.tsx\";\n\n// Each one is also a key for translation\nconst GENRES = [\n    \"Action\",\n    \"Adventure\",\n    \"Arcade\",\n    \"Board Games\",\n    \"Card\",\n    \"Casual\",\n    \"Educational\",\n    \"Family\",\n    \"Fighting\",\n    \"Indie\",\n    \"MMORPG\",\n    \"Platformer\",\n    \"Puzzle\",\n    \"RPG\",\n    \"Racing\",\n    \"Shooter\",\n    \"Simulation\",\n    \"Sports\",\n    \"Strategy\",\n    \"Misc\"\n];\n\n// Genres filter of GamesGallery\nfunction GenresSelect(props) {\n\n    const { selectedGenres } = props;\n    const { t } = useTranslation('common');\n\n    // Generate list of values for game genre\n    const genre_options = GENRES\n        .map(genre => ({\n            label: t(\"gamesLibrary.gamesGenres.\" + genre),\n            key: genre\n        }))\n        .sort( \n            (a, b) => (a.label < b.label) ? -1 : (a.label > b.label ? 1 : 0) \n        );\n\n    return <>\n        <Autocomplete\n            multiple\n            openOnFocus\n            filterSelectedOptions \n            id=\"select-game-genre\"\n            //style={{ width: 300 }}\n            limitTags={3}\n            options={genre_options}\n            getOptionLabel={(option : any) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            value={selectedGenres.map(genre => ({\n                label: t(\"gamesLibrary.gamesGenres.\" + genre),\n                key: genre\n            }))}\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.genres\")} />}\n            onChange={(_event, value) => {\n                props.filterByGenre(value.map(v => v.key));\n            }}\n        />\n    </>;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    selectedGenres: state.games.activeFilters.find(s => s.key === \"selected_genres\")?.value || []\n});\n\nconst mapDispatchToProps = {\n    filterByGenre: filter_games_by_genre, \n    filterByTitle: filter_games_by_title\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GenresSelect);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nimport {\n    filter_games_by_platform\n} \n// @ts-ignore\nfrom \"../../actions/games.tsx\";\n\n// icons\n// @ts-ignore\nimport iconsSVG from \"./PlatformIcons.tsx\";\n\nconst PLATFORMS = [\n    \"GBA\",\n    \"PC\",\n    \"PS1\",\n    \"PS2\",\n    \"PS3\",\n    \"PSP\"\n];\n\nfunction PlatformSelect(props) {\n\n    const { selectedPlatform } = props;\n    const { t } = useTranslation('common');\n\n    const options = PLATFORMS\n        .map(platform => ({\n            label: platform,\n            key: platform\n        }))\n\n    return <>\n        <Autocomplete\n            id=\"select-game-platform\"\n            openOnFocus\n            options={options}\n            getOptionLabel={(option: any) => option.label}\n            isOptionEqualToValue={(option, value) => \n                Array.isArray(value) ? value.some(v => v.key === option.key) : value.key === option.key\n            }\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.platform\")} />}\n            renderOption={(props, option, _state) => (\n                <li {...props} key={option.key}>\n                    <SvgIcon titleAccess={option.label}>\n                        <path d={iconsSVG[option.key]} />\n                    </SvgIcon>\n                    {option.label}\n                </li>\n            )}\n            onChange={(_event, value) => {\n                const platform = (value) ? (value as {[key: string]: any})?.key || value : \"\";\n                props.filterByPlatform(platform);\n            }}\n            value={\n                selectedPlatform ? {\n                    key: selectedPlatform,\n                    label: selectedPlatform\n                } : null\n            }\n        />\n    </>;\n}\n\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    selectedPlatform: state.games.activeFilters.find(s => s.key === \"selected_platform\")?.value || \"\"\n});\n\nconst mapDispatchToProps = {\n    filterByPlatform: filter_games_by_platform, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PlatformSelect);","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// React Material UI\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from '@mui/material/TextField';\n\nimport {\n    filter_games_by_title\n} \n// @ts-ignore\nfrom \"../../actions/games.tsx\";\n\nfunction TitleFilter(props) {\n\n    const { title, filterByTitle, games } = props;\n    const { t } = useTranslation('common');\n    // needed as this Autocomplete cannot have duplicate\n    const options = [...new Set(games.map(game => game.title))];\n\n    return <>\n        <Autocomplete\n            id=\"search-game-title\"\n            freeSolo\n            options={options}\n            value={title}\n            renderInput={(params) => <TextField {...params} label={t(\"gamesLibrary.filtersLabels.title\")} />}\n            onInputChange={(_event, value) => {\n                filterByTitle(value);\n            }}\n        />\n    </>;\n\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    title: state.games.activeFilters.find(s => s.key === \"selected_title\")?.value || \"\",\n});\n\nconst mapDispatchToProps = {\n    filterByTitle: filter_games_by_title, \n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TitleFilter);","import React from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {connect} from 'react-redux';\nimport useInfiniteLoader from 'react-use-infinite-loader';\nimport {useTranslation} from \"react-i18next\";\nimport Alert from '@mui/material/Alert';\n// @ts-ignore\nimport {get_games, fetch_scrolling_games, generate_sort_function, generate_filter_function} from \"../../actions/games.tsx\";\n\n// Style\n\nimport Grid from \"@mui/material/Grid\";\n\n// Custom\n// @ts-ignore\nimport ReloadWrapper from \"../Others/ReloadWrapper.tsx\";\n// @ts-ignore\nimport CardEntry from \"./CardEntry.tsx\";\n// @ts-ignore\nimport GamesSorters from \"./GamesSorters.tsx\";\n// @ts-ignore\nimport GenresSelect from \"./GenresSelect.tsx\";\n// @ts-ignore\nimport PlatformSelect from \"./PlatformSelect.tsx\";\n// @ts-ignore\nimport TitleFilter from \"./TitleFilter.tsx\";\n\nconst PREFIX = 'GamesGalleryGrid';\n\nconst classes = {\n    gameEntry: `${PREFIX}-gameEntry`,\n    gamesCriteria: `${PREFIX}-gamesCriteria`,\n    loaderRef: `${PREFIX}-loaderRef`\n};\n\nconst StyledGamesGallery = styled('div')((\n    {\n        theme\n    }\n) => ({\n    // inspired by the settings https://www.youtube.com/gaming uses ;)\n    [`& .${classes.gameEntry}`]: {\n        // 2 items on [0, sm]\n        [theme.breakpoints.only('xs')]: {\n            flexBasis: \"calc((100% / 2) - 1%)\"\n        },\n        // 4 items on [sm, md[\n        [theme.breakpoints.only('sm')]: {\n            flexBasis: \"calc((100% / 4) - 1%)\"\n        },\n        // 8 items on [md, infinity]\n        [theme.breakpoints.up('md')]: {\n            flexBasis: \"calc((100% / 8) - 1%)\"\n        },\n    },\n    [`& .${classes.gamesCriteria}`]: {\n        display: \"flex\",\n        [theme.breakpoints.down('md')]: {\n            flexDirection: \"column\",\n            rowGap: \"8px\"\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n        }\n    },\n    [`& .${classes.loaderRef}`]: {\n        width: \"1px\",\n        height: \"1px\",\n        position: \"absolute\"\n    }\n}));\n\n// The gallery component\nfunction GamesGalleryGrid(props) {\n\n    const {\n        loading, \n        error, \n        games,\n        currentItemCount,\n        totalItems,\n        activeFilters,\n        sorters,\n        initialLoad,\n        scrollLoading,\n        fetch_scrolling_games\n    } = props;\n    const { t } = useTranslation('common');\n\n    // on mount, load data (only once)\n    React.useEffect(() => {\n        props.get_games();\n    },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [games]\n    );\n\n    // render row\n    const renderRow = (game) =>\n        <Grid \n            key={game.playlistId ?? game.videoId} \n            item \n            className={classes.gameEntry}\n        >\n            <CardEntry game={game}/>\n    </Grid>;\n\n    const loadMoreGames = React.useCallback( () => {\n        fetch_scrolling_games();\n    }, \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    const canLoadMore = (currentItemCount <= totalItems);\n\n    const { loaderRef } = useInfiniteLoader({\n        loadMore: loadMoreGames,\n\n        // If this is false useInfiniteLoader no longer invokes `loadMore` when it usually does\n        canLoadMore,\n\n        // Used for if your data fetching library fetches page 0 and renders it when the component loads, \n        // to use this just have a state flag that you set to false once the initial load from \n        // your data fetching lib has happened.\n        // default : true\n        initialise: !initialLoad,\n\n        // Passed directly to the intersection observer https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Intersection_observer_options\n        //rootMargin: \"0px 0px 0px 0px\",\n\n        // Passed directly to the intersection observer https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Intersection_observer_options\n        //threshold: 1,\n        debug: false,\n    });\n\n    const currentSortFunction = generate_sort_function(sorters);\n    const filtersFunction = generate_filter_function(activeFilters);\n\n    const currentGames = games\n        // remove the ones that doesn't match filter criteria\n        .filter(filtersFunction)\n        // sort them in user preference\n        .sort(currentSortFunction)\n        // \n        .slice(0, currentItemCount);\n\n    return (\n        <ReloadWrapper \n            loading={loading}\n            error={error}\n            reloadFct={() => {props.get_games();}}\n            component={\n                <StyledGamesGallery>\n                    <Grid\n                        container\n                        className={classes.gamesCriteria}\n                    >\n                        <Grid item xs={12} md={1}>\n                            <GamesSorters />\n                        </Grid>\n                        <Grid item xs={12} md={2}>\n                            <PlatformSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <GenresSelect variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TitleFilter games={games} />\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        container\n                        spacing={1}\n                        style={\n                            {\n                                rowGap: \"15px\"\n                            }\n                        }\n                    >\n                        {\n                            currentGames\n                                // render row\n                                .map(renderRow)\n                        }\n                    </Grid>\n                    {!initialLoad && <div ref={loaderRef as any} className={classes.loaderRef} />}\n                    {scrollLoading && <Alert severity=\"info\">{t(\"common.loading\")}</Alert>}\n                    {!canLoadMore && <Alert severity=\"info\">{t(\"common.noResults\")}</Alert>}\n                </StyledGamesGallery>\n            }\n        />\n    );\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = state => ({\n    currentItemCount: state.games.currentItemCount,\n    initialLoad: state.games.initialLoad,\n    scrollLoading: state.games.scrollLoading,\n    totalItems: state.games.totalItems,\n    activeFilters: state.games.activeFilters,\n    sorters: state.games.sorters,\n    games: state.games.games,\n    loading: state.games.loading,\n    error: state.games.error\n});\n\nconst mapDispatchToProps = {\n    get_games,\n    fetch_scrolling_games\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GamesGalleryGrid);","const platformIcons = {\n    \"PS1\": \"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826.586.195 1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\",\n    \"PS2\": \"M7.46 13.779v.292h4.142v-3.85h3.796V9.93h-4.115v3.85zm16.248-3.558v1.62h-7.195v2.23H24v-.292h-7.168v-1.646H24V9.929h-7.487v.292zm-16.513 0v1.62H0v2.23h.292v-1.938H7.46V9.929H0v.292Z\",\n    \"PS3\": \"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375 0-.778-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\",\n    \"PSP\":  `\n        M 3.238281 9.3125 L 8.371094 9.3125 L 8.371094 10.832031 L 3.441406 10.832031 L 3.441406 12.152344 L 3.238281 12.152344 L 3.238281 10.632812 L 8.167969 10.632812 L 8.167969 9.511719 L 3.238281 9.511719 L 3.238281 9.3125 \n        M 14.777344 10.832031 L 14.777344 12.152344 L 14.578125 12.152344 L 14.578125 10.632812 L 19.503906 10.632812 L 19.503906 9.511719 L 14.578125 9.511719 L 14.578125 9.3125 L 19.707031 9.3125 L 19.707031 10.832031 L 14.777344 10.832031 \n        M 10.988281 9.3125 L 10.988281 11.953125 L 8.371094 11.953125 L 8.371094 12.152344 L 11.199219 12.152344 L 11.199219 9.511719 L 13.8125 9.511719 L 13.8125 9.3125 L 10.988281 9.3125\n    `,\n    \"PC\": `\n        M4.539062 7.515625 L 4.539062 13.886719 L 7.6875 13.886719 L 7.695312 11.738281 L 7.707031 9.597656 L 8.625 9.585938 L 9.542969 9.578125 L 10.546875 8.589844 L 11.550781 7.605469 L 11.550781 3.148438 L 10.527344 2.144531 L 9.507812 1.140625 L 4.539062 1.140625 Z \n        M8.28125 5.410156 L 8.289062 7.113281 L 8 7.101562 L 7.707031 7.089844 L 7.695312 5.40625 L 7.6875 3.722656 L 7.9375 3.714844 C 8.082031 3.707031 8.210938 3.703125 8.230469 3.703125 C 8.253906 3.707031 8.273438 4.308594 8.28125 5.410156 Z \n        M8.28125 5.410156 \n        M13.09375 2.148438 L 12.074219 3.148438 L 12.074219 11.917969 L 13.078125 12.902344 L 14.085938 13.886719 L 17.457031 13.886719 L 18.460938 12.898438 L 19.460938 11.917969 L 19.445312 8.417969 L 16.144531 8.417969 L 16.132812 9.878906 L 16.125 11.347656 L 15.601562 11.347656 L 15.601562 3.71875 L 16.125 3.71875 L 16.132812 4.925781 L 16.144531 6.132812 L 19.445312 6.132812 L 19.460938 3.148438 L 18.441406 2.148438 L 17.417969 1.140625 L 14.117188 1.140625 Z \n        M13.09375 2.148438\n    `,\n    \"GBA\": `\n        M 12 19.199219 C 9.457031 19.199219 7.679688 18.960938 6.71875 18.429688 C 6.527344 18.335938 6.382812 18.289062 6.289062 18.289062 C 3.410156 18.191406 1.96875 17.183594 1.390625 16.558594 C 1.105469 16.269531 0.960938 15.9375 0.960938 15.503906 C 0.960938 13.390625 1.054688 9.503906 1.441406 8.015625 C 1.632812 7.25 2.351562 6.71875 3.167969 6.71875 C 3.984375 6.71875 5.230469 5.949219 6.050781 5.230469 C 6.429688 4.945312 6.863281 4.800781 7.296875 4.800781 L 16.75 4.800781 C 17.230469 4.800781 17.710938 4.992188 18 5.28125 C 18.625 5.855469 19.96875 6.71875 20.832031 6.71875 C 21.648438 6.71875 22.367188 7.25 22.558594 8.015625 C 22.894531 9.3125 23.039062 12.671875 23.039062 15.457031 C 23.039062 15.890625 22.894531 16.222656 22.609375 16.511719 C 21.984375 17.136719 20.589844 18.144531 17.710938 18.238281 C 17.519531 18.238281 17.375 18.289062 17.328125 18.335938 C 16.464844 18.910156 14.6875 19.199219 12 19.199219 Z \n        M 6.289062 17.328125 C 6.527344 17.328125 6.816406 17.425781 7.152344 17.570312 C 7.632812 17.808594 8.832031 18.238281 12 18.238281 C 15.359375 18.238281 16.464844 17.761719 16.75 17.570312 C 16.992188 17.375 17.328125 17.28125 17.710938 17.28125 C 20.304688 17.183594 21.550781 16.222656 21.933594 15.839844 C 22.03125 15.742188 22.078125 15.601562 22.078125 15.457031 C 22.078125 12.816406 21.9375 9.457031 21.601562 8.304688 C 21.503906 7.96875 21.167969 7.730469 20.832031 7.730469 C 19.535156 7.730469 18 6.625 17.328125 6 C 17.136719 5.808594 16.894531 5.808594 16.75 5.808594 L 7.296875 5.808594 C 7.105469 5.808594 6.863281 5.90625 6.671875 6.050781 C 6.386719 6.289062 4.65625 7.679688 3.167969 7.679688 C 2.785156 7.679688 2.496094 7.921875 2.402344 8.257812 C 2.066406 9.457031 1.921875 12.816406 1.921875 15.503906 C 1.921875 15.648438 1.96875 15.792969 2.066406 15.890625 C 2.449219 16.269531 3.695312 17.230469 6.289062 17.328125 Z \n        M 3.839844 8.640625 L 4.800781 8.640625 L 4.800781 11.519531 L 3.839844 11.519531 Z \n        M 2.878906 10.558594 L 2.878906 9.601562 L 5.761719 9.601562 L 5.761719 10.558594 Z \n        M 20.398438 8.640625 C 20.785156 8.640625 21.121094 8.976562 21.121094 9.359375 C 21.121094 9.742188 20.785156 10.078125 20.398438 10.078125 C 20.015625 10.078125 19.679688 9.742188 19.679688 9.359375 C 19.679688 8.976562 20.015625 8.640625 20.398438 8.640625 Z \n        M 18.960938 10.078125 C 19.34375 10.078125 19.679688 10.414062 19.679688 10.800781 C 19.679688 11.183594 19.34375 11.519531 18.960938 11.519531 C 18.574219 11.519531 18.238281 11.183594 18.238281 10.800781 C 18.238281 10.414062 18.574219 10.078125 18.960938 10.078125 Z \n        M 5.710938 13.871094 C 5.808594 13.632812 5.710938 13.34375 5.519531 13.25 L 4.078125 12.527344 C 3.839844 12.429688 3.550781 12.527344 3.457031 12.71875 C 3.359375 12.960938 3.457031 13.25 3.648438 13.34375 L 5.089844 14.0625 C 5.136719 14.109375 5.230469 14.109375 5.28125 14.109375 C 5.472656 14.160156 5.617188 14.066406 5.710938 13.871094 Z \n        M 5.710938 15.792969 C 5.808594 15.550781 5.710938 15.265625 5.519531 15.167969 L 4.078125 14.449219 C 3.839844 14.351562 3.550781 14.449219 3.457031 14.640625 C 3.359375 14.878906 3.457031 15.167969 3.648438 15.265625 L 5.089844 15.984375 C 5.136719 16.03125 5.230469 16.03125 5.28125 16.03125 C 5.472656 16.078125 5.617188 15.984375 5.710938 15.792969 Z \n        M 15.839844 15.839844 L 8.160156 15.839844 C 7.585938 15.839844 7.199219 15.457031 7.199219 14.878906 L 7.199219 8.640625 C 7.199219 8.0625 7.585938 7.679688 8.160156 7.679688 L 15.839844 7.679688 C 16.414062 7.679688 16.800781 8.0625 16.800781 8.640625 L 16.800781 14.878906 C 16.800781 15.457031 16.414062 15.839844 15.839844 15.839844 Z \n        M 8.160156 8.640625 L 8.160156 14.878906 L 15.839844 14.878906 L 15.839844 8.640625 Z \n        M 18.574219 13.871094 L 20.496094 12.910156 C 20.589844 12.863281 20.640625 12.71875 20.589844 12.574219 C 20.542969 12.480469 20.398438 12.429688 20.253906 12.480469 L 18.335938 13.441406 C 18.238281 13.488281 18.191406 13.632812 18.238281 13.777344 C 18.289062 13.871094 18.382812 13.921875 18.429688 13.921875 C 18.527344 13.921875 18.574219 13.921875 18.574219 13.871094 Z \n        M 18.574219 14.832031 L 20.496094 13.871094 C 20.589844 13.824219 20.640625 13.679688 20.589844 13.535156 C 20.542969 13.441406 20.398438 13.390625 20.253906 13.441406 L 18.335938 14.398438 C 18.238281 14.449219 18.191406 14.589844 18.238281 14.734375 C 18.289062 14.832031 18.382812 14.878906 18.429688 14.878906 C 18.527344 14.878906 18.574219 14.878906 18.574219 14.832031 Z \n        M 18.574219 15.792969 L 20.496094 14.832031 C 20.589844 14.785156 20.640625 14.640625 20.589844 14.496094 C 20.542969 14.398438 20.398438 14.351562 20.253906 14.398438 L 18.335938 15.359375 C 18.238281 15.410156 18.191406 15.550781 18.238281 15.695312 C 18.289062 15.792969 18.382812 15.839844 18.429688 15.839844 C 18.527344 15.839844 18.574219 15.839844 18.574219 15.792969 Z \n        M 18.574219 15.792969 \n    `\n}\nexport default platformIcons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@mui/material/Grid\";\n\nfunction CenteredBox(props) {\n    const {children} = props;\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            style={{minHeight: '80vh'}}\n        >\n            {children}\n        </Grid>\n    );\n}\n\nCenteredBox.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CenteredBox;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { cx } from '@emotion/css';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { amber, green } from '@mui/material/colors';\nimport IconButton from '@mui/material/IconButton';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport Snackbar from '@mui/material/Snackbar';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nconst PREFIX = 'CustomizedSnackbar';\n\nconst classes = {\n    success: `${PREFIX}-success`,\n    error: `${PREFIX}-error`,\n    info: `${PREFIX}-info`,\n    warning: `${PREFIX}-warning`,\n    icon: `${PREFIX}-icon`,\n    iconVariant: `${PREFIX}-iconVariant`,\n    message: `${PREFIX}-message`\n};\n\nconst StyledSnackbar = styled(Snackbar)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.success}`]: {\n        backgroundColor: green[600],\n    },\n    [`& .${classes.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    [`& .${classes.info}`]: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    [`& .${classes.warning}`]: {\n        backgroundColor: amber[700],\n    },\n    [`& .${classes.icon}`]: {\n        fontSize: 20,\n    },\n    [`& .${classes.iconVariant}`]: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    [`& .${classes.message}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.success}`]: {\n        backgroundColor: green[600],\n    },\n    [`& .${classes.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    [`& .${classes.info}`]: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    [`& .${classes.warning}`]: {\n        backgroundColor: amber[700],\n    },\n    [`& .${classes.icon}`]: {\n        fontSize: 20,\n    },\n    [`& .${classes.iconVariant}`]: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    [`& .${classes.message}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nfunction CustomSnackbar(props) {\n\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={cx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={cx(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                    size=\"large\">\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nCustomSnackbar.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nfunction CustomizedSnackbar(props) {\n    const [open, setOpen] = React.useState(true);\n    const {variant, message} = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <StyledSnackbar\n            open={open}\n            autoHideDuration={5000}\n            onClose={handleClose}\n        >\n            <CustomSnackbar\n                onClose={handleClose}\n                variant={variant}\n                message={message}\n            />\n        </StyledSnackbar>\n    );\n}\n\nCustomizedSnackbar.propTypes = {\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default CustomizedSnackbar;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {connect} from 'react-redux';\n\n// Icons\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Fab from '@mui/material/Fab';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\n\n// Custom\n// @ts-ignore\nimport CenteredGrid from \"./CenteredGrid.tsx\";\n// @ts-ignore\nimport SnackbarWrapper from \"./CustomSnackbar.tsx\";\n\n// The reload wrapper component\nfunction ReloadWrapper(props) {\n\n    const {loading, error, component, reloadFct} = props;\n    const { t } = useTranslation('common');\n\n    if (loading) {\n        return <CenteredGrid>\n            <CircularProgress/>\n        </CenteredGrid>\n    }\n\n    if (error) {\n        return <>\n            <SnackbarWrapper\n                variant={\"error\"}\n                message={error}\n            />\n            <CenteredGrid>\n                <Fab\n                    variant=\"extended\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    aria-label=\"reload\"\n                    onClick={reloadFct}\n                >\n                    <AutorenewIcon/>\n                    { t(\"common.reload\") }\n                </Fab>\n            </CenteredGrid>\n        </>;\n    }\n    \n    return component;\n}\n\n// mapStateToProps(state, ownProps)\nconst mapStateToProps = _state => ({});\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReloadWrapper);\n"],"names":["CardDialog","React","PREFIX","classes","gameRoot","gameCover","MuiCardActionArea","StyledCard","styled","Card","theme","position","zIndex","height","PICTURE_SIZES","SIZES_WITDH","props","useTheme","navigate","useNavigate","game","is_mobile_device","useMediaQuery","breakpoints","down","contextMenuOpen","setContextMenuOpen","gameTitle","title","gameURL","url","local_path","url_type","playlistId","videoId","imageProps","src","imagePath","alt","hasResponsiveImages","srcSet","map","size","imagesFolder","join","className","onClick","window","location","href","onContextMenu","event","preventDefault","root","loading","variant","Suspense","fallback","contextMenuState","mapDispatchToProps","sort_games","change_sorting_order","connect","state","sortState","games","sorters","t","useTranslation","handleSortChange","field","target","name","handleSortOrderChange","metadata","currentTarget","type_of_sort_change","getAttribute","currentPosition","findIndex","entry","nextPosition","newOrder","s","splice","anchorEl","setAnchorEl","open","Boolean","id","undefined","field_labels","sort_button_conditions","index","length","Button","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","component","FormGroup","criteria","currentOrder","FormControlLabel","control","Checkbox","checked","onChange","checkedIcon","ArrowDropUp","icon","ArrowDropDown","label","Object","keys","sort_key","condition_check","IconButton","ArrowUpward","fontSize","ArrowDownward","GENRES","filterByGenre","filter_games_by_genre","filterByTitle","filter_games_by_title","selectedGenres","activeFilters","find","key","value","genre_options","genre","sort","a","b","Autocomplete","multiple","openOnFocus","filterSelectedOptions","limitTags","options","getOptionLabel","option","isOptionEqualToValue","Array","isArray","some","v","renderInput","params","TextField","_event","PLATFORMS","filterByPlatform","filter_games_by_platform","selectedPlatform","platform","renderOption","_state","SvgIcon","titleAccess","d","iconsSVG","Set","freeSolo","onInputChange","gameEntry","gamesCriteria","loaderRef","StyledGamesGallery","only","flexBasis","up","display","flexDirection","rowGap","justifyContent","width","get_games","fetch_scrolling_games","currentItemCount","initialLoad","scrollLoading","totalItems","error","loadMoreGames","canLoadMore","useInfiniteLoader","loadMore","initialise","debug","currentSortFunction","generate_sort_function","filtersFunction","generate_filter_function","currentGames","filter","slice","ReloadWrapper","reloadFct","Grid","container","item","xs","md","spacing","style","CardEntry","ref","Alert","severity","children","direction","alignItems","minHeight","success","info","warning","iconVariant","message","StyledSnackbar","Snackbar","backgroundColor","green","palette","dark","primary","main","amber","opacity","marginRight","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","CustomSnackbar","other","Icon","SnackbarContent","cx","action","color","Close","setOpen","handleClose","reason","autoHideDuration","CenteredGrid","CircularProgress","Fab","Autorenew"],"sourceRoot":""}